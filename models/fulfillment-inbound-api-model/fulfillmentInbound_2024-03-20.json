{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Selling Partner API Developer Support",
      "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
    },
    "description": "The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.",
    "license": {
      "name": "Apache License 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "title": "The Selling Partner API for FBA inbound operations.",
    "version": "2024-03-20"
  },
  "host": "sellingpartnerapi-na.amazon.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/inbound/fba/2024-03-20/inboundPlans": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The number of inbound plans to return in the response matching the given query.",
            "in": "query",
            "maximum": 30,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          },
          {
            "description": "The status of an inbound plan.",
            "enum": [
              "ACTIVE",
              "VOIDED",
              "SHIPPED"
            ],
            "in": "query",
            "name": "status",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "value": "ACTIVE",
                "description": "An inbound plan that is being worked on."
              },
              {
                "value": "VOIDED",
                "description": "An inbound plan with all shipment cancelled and can no longer be modified."
              },
              {
                "value": "SHIPPED",
                "description": "A completed inbound plan. Only minor modifications can be made at this time."
              }
            ]
          },
          {
            "description": "Sort by field.",
            "enum": [
              "LAST_UPDATED_TIME",
              "CREATION_TIME"
            ],
            "in": "query",
            "name": "sortBy",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "value": "LAST_UPDATED_TIME",
                "description": "Last updated time of the inbound plan."
              },
              {
                "value": "CREATION_TIME",
                "description": "Inbound plan creation time."
              }
            ]
          },
          {
            "description": "The sort order.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "sortOrder",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Ascending order."
              },
              {
                "value": "DESC",
                "description": "Descending order."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "ListInboundPlans 200 response",
            "schema": {
              "$ref": "#/definitions/ListInboundPlansResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "status": {
                        "value": "ACTIVE"
                      },
                      "sortBy": {
                        "value": "LAST_UPDATED_TIME"
                      },
                      "sortOrder": {
                        "value": "ASC"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "inboundPlans": [
                      {
                        "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
                        "name": "FBA (03/08/2023, 01:15 PM)",
                        "createdAt": "2023-03-08T13:15:30Z",
                        "lastUpdatedAt": "2023-03-08T13:15:30Z",
                        "status": "ACTIVE",
                        "marketplaceIds": [
                          "A2EUQ1WTGCTBG2"
                        ],
                        "sourceAddress": {
                          "name": "name",
                          "companyName": "Acme",
                          "addressLine1": "123 example street",
                          "addressLine2": "Unit 102",
                          "city": "Toronto",
                          "countryCode": "CA",
                          "stateOrProvinceCode": "ON",
                          "postalCode": "M1M1M1",
                          "phoneNumber": "1234567890",
                          "email": "email@email.com"
                        }
                      },
                      {
                        "inboundPlanId": "wf2234abcd-1234-abcd-5678-1234abcd5678",
                        "name": "FBA (03/08/2023, 01:15 PM)",
                        "createdAt": "2023-03-08T13:15:30Z",
                        "lastUpdatedAt": "2023-03-08T13:15:30Z",
                        "status": "ACTIVE",
                        "marketplaceIds": [
                          "A2EUQ1WTGCTBG2"
                        ],
                        "sourceAddress": {
                          "name": "name",
                          "companyName": "Acme",
                          "addressLine1": "123 example street",
                          "addressLine2": "Unit 102",
                          "city": "Toronto",
                          "countryCode": "CA",
                          "stateOrProvinceCode": "ON",
                          "postalCode": "M1M1M1",
                          "phoneNumber": "1234567890",
                          "email": "email@email.com"
                        }
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "status": {
                        "value": "badStatus"
                      },
                      "sortBy": {
                        "value": "LAST_UPDATED_TIME"
                      },
                      "sortOrder": {
                        "value": "ASC"
                      },
                      "pageSize": {
                        "value": 5
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The status is invalid."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides a list of inbound plans with minimal information.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listInboundPlans"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateInboundPlanRequest"
            },
            "description": "The body of the request to `createInboundPlan`."
          }
        ],
        "responses": {
          "202": {
            "description": "CreateInboundPlan 202 response",
            "schema": {
              "$ref": "#/definitions/CreateInboundPlanResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "name": "FBA (03/20/2024, 12:01 PM)",
                          "sourceAddress": {
                            "name": "name",
                            "companyName": "Acme",
                            "addressLine1": "123 example street",
                            "addressLine2": "Unit 102",
                            "city": "Toronto",
                            "countryCode": "CA",
                            "stateOrProvinceCode": "ON",
                            "postalCode": "M1M1M1",
                            "phoneNumber": "1234567890",
                            "email": "email@email.com"
                          },
                          "destinationMarketplaces": [
                            "A2EUQ1WTGCTBG2"
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "name": "FBA (03/20/2024, 12:01 PM)",
                          "sourceAddress": {
                            "name": "name",
                            "companyName": "Acme",
                            "addressLine1": "123 example street",
                            "addressLine2": "Unit 102",
                            "city": "Toronto",
                            "countryCode": "CA",
                            "stateOrProvinceCode": "ON",
                            "postalCode": "M1M1M1",
                            "phoneNumber": "1234567890",
                            "email": "email@email.com"
                          },
                          "destinationMarketplaces": [
                            "badMarketplace"
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "Invalid destinationMarketplace provided."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Creates an inbound plan. An inbound plan contains all the necessary information to send shipments into Amazon's fufillment network.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "createInboundPlan"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetInboundPlan 200 response",
            "schema": {
              "$ref": "#/definitions/InboundPlan"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
                    "name": "FBA (03/20/2024, 12:01 PM)",
                    "createdAt": "2024-03-20T12:01:00Z",
                    "lastUpdatedAt": "2024-03-28T13:15:30Z",
                    "status": "ACTIVE",
                    "marketplaceIds": [
                      "A2EUQ1WTGCTBG2"
                    ],
                    "packingOptions": [],
                    "placementOptions": [],
                    "shipments": [],
                    "sourceAddress": {
                      "name": "name",
                      "companyName": "Acme",
                      "addressLine1": "123 example street",
                      "addressLine2": "Unit 102",
                      "city": "Toronto",
                      "countryCode": "CA",
                      "stateOrProvinceCode": "ON",
                      "postalCode": "M1M1M1",
                      "phoneNumber": "1234567890",
                      "email": "email@email.com"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The inboundPlanId is malformed."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Fetches the top level information about an inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "getInboundPlan"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/boxes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of boxes to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListInboundPlanBoxes 200 response",
            "schema": {
              "$ref": "#/definitions/ListInboundPlanBoxesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "boxes": [
                      {
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3.0,
                          "width": 4.0,
                          "height": 5.0
                        },
                        "quantity": 2,
                        "boxId": "boxId",
                        "templateName": "templateName",
                        "items": [
                          {
                            "quantity": 5,
                            "expiration": "2024-01-01",
                            "manufacturingLotCode": "manufacturingLotCode",
                            "prepInstructions": [
                              {
                                "prepType": "ITEM_POLYBAGGING",
                                "prepOwner": "AMAZON",
                                "fee": {
                                  "code": "USD",
                                  "amount": 10.0
                                }
                              }
                            ],
                            "msku": "msku",
                            "asin": "asin",
                            "fnsku": "fnsku",
                            "labelOwner": "AMAZON"
                          }
                        ],
                        "destinationRegion": {
                          "countryCode": "US",
                          "state": "CA",
                          "warehouseId": "ABC1"
                        },
                        "contentInformationSource": "BOX_CONTENT_PROVIDED"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inboundPlanId does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides a paginated list of box packages in an inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listInboundPlanBoxes"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/cancellation": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "CancelInboundPlan 202 response",
            "schema": {
              "$ref": "#/definitions/CancelInboundPlanResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The inbound plan is already cancelled."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Cancels an Inbound Plan. Charges may apply if the cancellation is performed outside of a void window. The window for Amazon Partnered Carriers is 24 hours for Small Parcel Delivery (SPD) and one hour for Less-Than-Truckload (LTL) carrier shipments.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "cancelInboundPlan"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of items to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListInboundPlanItems 200 response",
            "schema": {
              "$ref": "#/definitions/ListInboundPlanItemsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "items": [
                      {
                        "quantity": 5,
                        "expiration": "2024-01-01",
                        "manufacturingLotCode": "manufacturingLotCode",
                        "prepInstructions": [
                          {
                            "prepType": "ITEM_POLYBAGGING",
                            "prepOwner": "AMAZON",
                            "fee": {
                              "code": "USD",
                              "amount": 10.0
                            }
                          }
                        ],
                        "msku": "msku",
                        "asin": "asin",
                        "fnsku": "fnsku",
                        "labelOwner": "AMAZON"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 1
                      },
                      "paginationToken": {
                        "value": ""
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides a paginated list of item packages in an inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listInboundPlanItems"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/name": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateInboundPlanNameRequest"
            },
            "description": "The body of the request to `updateInboundPlanName`."
          }
        ],
        "responses": {
          "204": {
            "description": "UpdateInboundPlanName 204 response",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "name": "updatedInboundPlanName"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "name": "name"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Updates the name of an existing inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "updateInboundPlanName"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingGroups/{packingGroupId}/boxes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a packing group.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "packingGroupId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of packing group boxes to return in the response matching the given query.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPackingGroupBoxes 200 response",
            "schema": {
              "$ref": "#/definitions/ListPackingGroupBoxesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingGroupId": {
                        "value": "pg1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "boxes": [
                      {
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3.0,
                          "width": 4.0,
                          "height": 5.0
                        },
                        "quantity": 2,
                        "boxId": "boxId",
                        "templateName": "templateName",
                        "items": [
                          {
                            "quantity": 5,
                            "expiration": "2024-01-01",
                            "manufacturingLotCode": "manufacturingLotCode",
                            "prepInstructions": [
                              {
                                "prepType": "ITEM_POLYBAGGING",
                                "prepOwner": "AMAZON",
                                "fee": {
                                  "code": "USD",
                                  "amount": 10.0
                                }
                              }
                            ],
                            "msku": "msku",
                            "asin": "asin",
                            "fnsku": "fnsku",
                            "labelOwner": "AMAZON"
                          }
                        ],
                        "destinationRegion": {
                          "countryCode": "US",
                          "state": "CA",
                          "warehouseId": "ABC1"
                        },
                        "contentInformationSource": "BOX_CONTENT_PROVIDED"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingGroupId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested packingGroupId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Retrieves a page of boxes from a given packing group. These boxes were previously provided through the `setPackingInformation` operation. This API is used for workflows where boxes are packed before Amazon determines shipment splits.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listPackingGroupBoxes"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingGroups/{packingGroupId}/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a packing group.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "packingGroupId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of packing group items to return in the response matching the given query.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPackingGroupItems 200 response",
            "schema": {
              "$ref": "#/definitions/ListPackingGroupItemsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingGroupId": {
                        "value": "pg1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "items": [
                      {
                        "quantity": 5,
                        "prepInstructions": [
                          {
                            "prepType": "ITEM_POLYBAGGING",
                            "prepOwner": "AMAZON",
                            "fee": {
                              "code": "USD",
                              "amount": 10.0
                            }
                          }
                        ],
                        "msku": "msku",
                        "asin": "asin",
                        "fnsku": "fnsku",
                        "labelOwner": "AMAZON"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingGroupId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested packingGroupId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Retrieves a page of items in a given packing group. Packing options must first be generated by the corresponding operation before packing group items can be listed.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listPackingGroupItems"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingInformation": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPackingInformationRequest"
            },
            "description": "The body of the request to `setPackingInformation`."
          }
        ],
        "responses": {
          "202": {
            "description": "SetPackingInformation 202 response",
            "schema": {
              "$ref": "#/definitions/SetPackingInformationResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "packageGroupings": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "packingGroupId": "pg1234abcd-1234-abcd-5678-1234abcd5678",
                              "boxes": [
                                {
                                  "items": [
                                    {
                                      "msku": "msku",
                                      "quantity": 5,
                                      "expiration": "2024-01-01",
                                      "prepOwner": "AMAZON",
                                      "labelOwner": "AMAZON",
                                      "manufacturingLotCode": "manufacturingLotCode"
                                    }
                                  ],
                                  "contentInformationSource": "BOX_CONTENT_PROVIDED",
                                  "weight": {
                                    "unit": "KG",
                                    "value": 5.5
                                  },
                                  "dimensions": {
                                    "unitOfMeasurement": "CM",
                                    "length": 3.0,
                                    "width": 4.0,
                                    "height": 5.0
                                  },
                                  "quantity": 2
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "packageGroupings": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "packingGroupId": "bad234abcd-1234-abcd-5678-1234abcd5678",
                              "boxes": [
                                {
                                  "items": [
                                    {
                                      "msku": "msku",
                                      "quantity": 5,
                                      "expiration": "2024-01-01",
                                      "prepOwner": "AMAZON",
                                      "labelOwner": "AMAZON",
                                      "manufacturingLotCode": "manufacturingLotCode"
                                    }
                                  ],
                                  "contentInformationSource": "BOX_CONTENT_PROVIDED",
                                  "weight": {
                                    "unit": "KG",
                                    "value": 5.5
                                  },
                                  "dimensions": {
                                    "unitOfMeasurement": "CM",
                                    "length": 3.0,
                                    "width": 4.0,
                                    "height": 5.0
                                  },
                                  "quantity": 2
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested packingGroupId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Sets packing information for an inbound plan. This should be called after an inbound plan is created to populate the box level information required for planning and transportation estimates.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "setPackingInformation"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of packing options to return in the response matching the given query.",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPackingOptions 200 response",
            "schema": {
              "$ref": "#/definitions/ListPackingOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "packingOptions": [
                      {
                        "packingOptionId": "po1234abcd-1234-abcd-5678-1234abcd5678",
                        "packingGroups": [
                          "pg1234abcd-1234-abcd-5678-1234abcd5678"
                        ],
                        "fees": [
                          {
                            "value": {
                              "code": "USD",
                              "amount": 1.0
                            },
                            "type": "FEE",
                            "target": "Placement Services",
                            "description": "description"
                          }
                        ],
                        "discounts": [
                          {
                            "value": {
                              "code": "USD",
                              "amount": 1.0
                            },
                            "type": "DISCOUNT",
                            "target": "Placement Services",
                            "description": "description"
                          }
                        ],
                        "expiration": "2024-01-01T00:00:00.000Z",
                        "status": "OFFERED",
                        "supportedShippingConfigurations": [
                          {
                            "shippingSolution": "AMAZON_PARTNERED_CARRIER",
                            "shippingMode": "GROUND_SMALL_PARCEL"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Retrieves a list of all packing options for an inbound plan. Packing options must first be generated by the corresponding operation before becoming available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listPackingOptions"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "GeneratePackingOptions 202 response",
            "schema": {
              "$ref": "#/definitions/GeneratePackingOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The inbound plan is not in a valid state to generate packing options."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Generates available packing options for the inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "generatePackingOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions/{packingOptionId}/confirmation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a packing option.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "packingOptionId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmPackingOption 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmPackingOptionResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingOptionId": {
                        "value": "po1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingOptionId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested packingOptionId does not exist for the given inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Confirms the packing option for an inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "confirmPackingOption"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/pallets": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of pallets to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListInboundPlanPallets 200 response",
            "schema": {
              "$ref": "#/definitions/ListInboundPlanPalletsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "pallets": [
                      {
                        "stackability": "STACKABLE",
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3.0,
                          "width": 4.0,
                          "height": 5.0
                        },
                        "quantity": 2
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides a paginated list of pallet packages in an inbound plan. An inbound plan will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listInboundPlanPallets"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of placement options to return in the response matching the given query.",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPlacementOptions 200 response",
            "schema": {
              "$ref": "#/definitions/ListPlacementOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "placementOptions": [
                      {
                        "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
                        "status": "OFFERED",
                        "fees": [
                          {
                            "value": {
                              "code": "USD",
                              "amount": 1.0
                            },
                            "type": "FEE",
                            "target": "Placement Services",
                            "description": "description"
                          }
                        ],
                        "discounts": [
                          {
                            "value": {
                              "code": "USD",
                              "amount": 1.0
                            },
                            "type": "DISCOUNT",
                            "target": "Placement Services",
                            "description": "description"
                          }
                        ],
                        "expiration": "2024-01-01T00:00:00.000Z",
                        "shipmentIds": [
                          "sh1234abcd-1234-abcd-5678-1234abcd5678"
                        ]
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides a list of all placement options for an inbound plan. Placement options must first be generated by the corresponding operation before becoming available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listPlacementOptions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneratePlacementOptionsRequest"
            },
            "description": "The body of the request to `generatePlacementOptions`."
          }
        ],
        "responses": {
          "202": {
            "description": "GeneratePlacementOptions 202 response",
            "schema": {
              "$ref": "#/definitions/GeneratePlacementOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "customPlacement": [
                            {
                              "warehouseId": "warehouseId",
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "customPlacement": [
                            {
                              "warehouseId": "badWarehouseId",
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The inbound plan is not in a valid state to generate placement options."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Generates placement options for the inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "generatePlacementOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions/{placementOptionId}/confirmation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "placementOptionId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmPlacementOption 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmPlacementOptionResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "placementOptionId": {
                        "value": "pl1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "placementOptionId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested placementOptionId does not exist for the given inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Confirms the placement option for an inbound plan. Once confirmed, it cannot be changed for the Inbound Plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "confirmPlacementOption"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetShipment 200 response",
            "schema": {
              "$ref": "#/definitions/Shipment"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
                    "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                    "shipmentConfirmationId": "FBA1234ABCD",
                    "amazonReferenceId": "amazonReferenceId",
                    "selectedTransportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                    "selectedDeliveryWindow": {
                      "startDate": "2024-01-01T00:00:00.000Z",
                      "endDate": "2024-01-01T06:00:00.000Z",
                      "editableUntil": "2024-01-01T06:00:00.000Z",
                      "availabilityType": "AVAILABLE",
                      "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678"
                    },
                    "name": "FBA (10/02/2023 20:07)-ABC1",
                    "source": {
                      "sourceType": "SELLER_FACILITY",
                      "address": {
                        "name": "name",
                        "companyName": "Acme",
                        "addressLine1": "123 example street",
                        "addressLine2": "Unit 102",
                        "city": "Toronto",
                        "countryCode": "CA",
                        "stateOrProvinceCode": "ON",
                        "postalCode": "M1M1M1",
                        "phoneNumber": "1234567890",
                        "email": "email@email.com"
                      }
                    },
                    "destination": {
                      "destinationType": "AMAZON_WAREHOUSE",
                      "address": {
                        "name": "name",
                        "companyName": "Acme",
                        "addressLine1": "123 example street",
                        "addressLine2": "Unit 102",
                        "city": "Toronto",
                        "countryCode": "CA",
                        "stateOrProvinceCode": "ON",
                        "postalCode": "M1M1M1",
                        "phoneNumber": "1234567890",
                        "email": "email@email.com"
                      },
                      "warehouseId": "YYZ5"
                    },
                    "dates": {
                      "readyToShipWindow": {
                        "start": "2024-01-01T00:00Z",
                        "end": "2024-01-08T00:00Z",
                        "editableUntil": "2024-01-07T00:00Z"
                      }
                    },
                    "status": "WORKING",
                    "trackingDetails": {
                      "spdTrackingDetail": {
                        "spdTrackingItems": [
                          {
                            "boxId": "boxId",
                            "trackingId": "trackingId",
                            "trackingNumberValidationStatus": "VALIDATED"
                          }
                        ]
                      },
                      "ltlTrackingDetail": {
                        "freightBillNumber": [
                          "freightBillNumber1"
                        ],
                        "billOfLadingNumber": "billOfLadingNumber"
                      }
                    },
                    "freightInformation": {
                      "freightClass": "FC_50",
                      "declaredValue": {
                        "code": "USD",
                        "amount": 500.0
                      }
                    },
                    "contactInformation": {
                      "name": "name",
                      "phoneNumber": "1234567890",
                      "email": "email@email.com"
                    },
                    "selfShipAppointmentDetails": [
                      {
                        "appointmentId": 1,
                        "appointmentSlotTime": {
                          "startTime": "2024-01-01T00:00:00.000Z",
                          "endTime": "2024-01-01T00:00:00.000Z"
                        },
                        "appointmentStatus": "appointmentStatus"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipment does not exist for the provided inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides the full details for a specific shipment within an inbound plan. The `transportationOptionId` inside `acceptedTransportationSelection` can be used to retrieve the transportation details for the shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "getShipment"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/boxes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of boxes to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListShipmentBoxes 200 response",
            "schema": {
              "$ref": "#/definitions/ListShipmentBoxesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "boxes": [
                      {
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3.0,
                          "width": 4.0,
                          "height": 5.0
                        },
                        "quantity": 2,
                        "boxId": "boxId",
                        "templateName": "templateName",
                        "items": [
                          {
                            "quantity": 5,
                            "expiration": "2024-01-01",
                            "manufacturingLotCode": "manufacturingLotCode",
                            "prepInstructions": [
                              {
                                "prepType": "ITEM_POLYBAGGING",
                                "prepOwner": "AMAZON",
                                "fee": {
                                  "code": "USD",
                                  "amount": 10.0
                                }
                              }
                            ],
                            "msku": "msku",
                            "asin": "asin",
                            "fnsku": "fnsku",
                            "labelOwner": "AMAZON"
                          }
                        ],
                        "destinationRegion": {
                          "countryCode": "US",
                          "state": "CA",
                          "warehouseId": "ABC1"
                        },
                        "contentInformationSource": "BOX_CONTENT_PROVIDED"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inboundPlanId does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides a paginated list of box packages in a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listShipmentBoxes"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of content update previews to return.",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListShipmentContentUpdatePreviews 200 response",
            "schema": {
              "$ref": "#/definitions/ListShipmentContentUpdatePreviewsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "contentUpdatePreviews": [
                      {
                        "contentUpdatePreviewId": "cu1234abcd-1234-abcd-5678-1234abcd5678",
                        "expiration": "2024-01-01",
                        "transportationOption": {
                          "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                          "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                          "shippingSolution": "AMAZON_PARTNERED_CARRIER",
                          "carrier": {
                            "name": "name",
                            "alphaCode": "USPS"
                          },
                          "shippingMode": "GROUND_SMALL_PARCEL",
                          "quote": {
                            "cost": {
                              "code": "USD",
                              "amount": 500.0
                            },
                            "voidableUntil": "2024-01-01T00:00:00.000Z",
                            "expiration": "2024-01-01T00:00:00.000Z"
                          },
                          "carrierAppointment": {
                            "startTime": "2024-01-01T00:00:00.000Z",
                            "endTime": "2024-01-02T00:00:00.000Z"
                          },
                          "preconditions": [
                            "CONFIRMED_DELIVERY_WINDOW"
                          ]
                        },
                        "requestedUpdates": {
                          "boxes": [
                            {
                              "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                              "weight": {
                                "unit": "KG",
                                "value": 5.5
                              },
                              "dimensions": {
                                "unitOfMeasurement": "CM",
                                "length": 3.0,
                                "width": 4.0,
                                "height": 5.0
                              },
                              "quantity": 1,
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ],
                              "contentInformationSource": "BOX_CONTENT_PROVIDED"
                            }
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Retrieve a paginated list of shipment content update previews for a given shipment. The shipment content update preview is a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listShipmentContentUpdatePreviews"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateShipmentContentUpdatePreviewsRequest"
            },
            "description": "The body of the request to `generateShipmentContentUpdatePreviews`."
          }
        ],
        "responses": {
          "202": {
            "description": "GenerateShipmentContentUpdatePreviews 202 response",
            "schema": {
              "$ref": "#/definitions/GenerateShipmentContentUpdatePreviewsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "boxes": [
                            {
                              "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                              "weight": {
                                "unit": "KG",
                                "value": 5.5
                              },
                              "dimensions": {
                                "unitOfMeasurement": "CM",
                                "length": 3.0,
                                "width": 4.0,
                                "height": 5.0
                              },
                              "quantity": 1,
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ],
                              "contentInformationSource": "BOX_CONTENT_PROVIDED"
                            }
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "boxes": [
                            {
                              "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                              "weight": {
                                "unit": "KG",
                                "value": 5.5
                              },
                              "dimensions": {
                                "unitOfMeasurement": "CM",
                                "length": 3.0,
                                "width": 4.0,
                                "height": 5.0
                              },
                              "quantity": 1,
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ],
                              "contentInformationSource": "BOX_CONTENT_PROVIDED"
                            }
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipment does not exist under the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Generate a shipment content update preview given a set of intended boxes and/or items for a shipment with a confirmed carrier. The shipment content update preview will be viewable with the updated costs and contents prior to confirmation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "generateShipmentContentUpdatePreviews"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews/{contentUpdatePreviewId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a content update preview.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "contentUpdatePreviewId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetShipmentContentUpdatePreview 200 response",
            "schema": {
              "$ref": "#/definitions/ContentUpdatePreview"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "contentUpdatePreviewId": {
                        "value": "cu1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "contentUpdatePreviewId": "cu1234abcd-1234-abcd-5678-1234abcd5678",
                    "expiration": "2024-01-01",
                    "transportationOption": {
                      "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                      "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                      "shippingSolution": "AMAZON_PARTNERED_CARRIER",
                      "carrier": {
                        "name": "name",
                        "alphaCode": "USPS"
                      },
                      "shippingMode": "GROUND_SMALL_PARCEL",
                      "quote": {
                        "cost": {
                          "code": "USD",
                          "amount": 500.0
                        },
                        "voidableUntil": "2024-01-01T00:00:00.000Z",
                        "expiration": "2024-01-01T00:00:00.000Z"
                      },
                      "carrierAppointment": {
                        "startTime": "2024-01-01T00:00Z",
                        "endTime": "2024-01-01T00:00Z"
                      },
                      "preconditions": [
                        "CONFIRMED_DELIVERY_WINDOW"
                      ]
                    },
                    "requestedUpdates": {
                      "boxes": [
                        {
                          "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                          "weight": {
                            "unit": "KG",
                            "value": 5.5
                          },
                          "dimensions": {
                            "unitOfMeasurement": "CM",
                            "length": 3.0,
                            "width": 4.0,
                            "height": 5.0
                          },
                          "quantity": 1,
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ],
                          "contentInformationSource": "BOX_CONTENT_PROVIDED"
                        }
                      ],
                      "items": [
                        {
                          "msku": "msku",
                          "prepOwner": "AMAZON",
                          "labelOwner": "AMAZON",
                          "quantity": 2,
                          "expiration": "2024-01-01",
                          "manufacturingLotCode": "lotCode"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "contentUpdatePreviewId": {
                        "value": "cu1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Retrieve a shipment content update preview which provides a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "getShipmentContentUpdatePreview"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews/{contentUpdatePreviewId}/confirmation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a content update preview.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "contentUpdatePreviewId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmShipmentContentUpdatePreview 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentContentUpdatePreviewResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "contentUpdatePreviewId": {
                        "value": "cu1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "contentUpdatePreviewId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested contentUpdatePreviewId does not exist for the given shipment."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Confirm a shipment content update preview and accept the changes in transportation cost.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "confirmShipmentContentUpdatePreview"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryChallanDocument": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetDeliveryChallanDocument 200 response",
            "schema": {
              "$ref": "#/definitions/GetDeliveryChallanDocumentResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "documentDownload": {
                      "uri": "https://s3.amazonaws.com/bucket",
                      "downloadType": "URL",
                      "expiration": "2024-01-01T00:00:00.000Z"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provide delivery challan document for PCP transportation in IN marketplace.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "getDeliveryChallanDocument"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The shipment to get delivery window options for.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of delivery window options to return in the response matching the given query.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListDeliveryWindowOptions 200 response",
            "schema": {
              "$ref": "#/definitions/ListDeliveryWindowOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "deliveryWindowOptions": [
                      {
                        "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678",
                        "startDate": "2024-01-01T00:00:00.000Z",
                        "endDate": "2024-01-01T06:00:00.000Z",
                        "availabilityType": "AVAILABLE",
                        "validUntil": "2024-01-01T06:00:00.000Z"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Retrieves all delivery window options for a shipment. Delivery window options must first be generated by the `generateDeliveryWindowOptions` operation before becoming available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listDeliveryWindowOptions"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The shipment to generate delivery window options for.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "GenerateDeliveryWindowOptions 202 response",
            "schema": {
              "$ref": "#/definitions/GenerateDeliveryWindowOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The provided shipmentId is not valid for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Generates available delivery window options for a given shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "generateDeliveryWindowOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions/{deliveryWindowOptionId}/confirmation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The shipment to confirm the delivery window option for.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The id of the delivery window option to be confirmed.",
            "in": "path",
            "maxLength": 38,
            "minLength": 36,
            "name": "deliveryWindowOptionId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmDeliveryWindowOptions 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmDeliveryWindowOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "deliveryWindowOptionId": {
                        "value": "dw1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "deliveryWindowOptionId": {
                        "value": "dw1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist under the associated inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Confirms the delivery window option for chosen shipment within an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new delivery window options cannot be generated, but the chosen delivery window option can be updated before shipment closure. The window is used to provide the expected time when a shipment will arrive at the warehouse. All transportation options which have the program `CONFIRMED_DELIVERY_WINDOW` require a delivery window to be confirmed prior to transportation option confirmation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "confirmDeliveryWindowOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of items to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListShipmentItems 200 response",
            "schema": {
              "$ref": "#/definitions/ListShipmentItemsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "items": [
                      {
                        "quantity": 5,
                        "expiration": "2024-01-01",
                        "manufacturingLotCode": "manufacturingLotCode",
                        "prepInstructions": [
                          {
                            "prepType": "ITEM_POLYBAGGING",
                            "prepOwner": "AMAZON",
                            "fee": {
                              "code": "USD",
                              "amount": 10.0
                            }
                          }
                        ],
                        "msku": "msku",
                        "asin": "asin",
                        "fnsku": "fnsku",
                        "labelOwner": "AMAZON"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 1
                      },
                      "paginationToken": {
                        "value": ""
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides a paginated list of item packages in a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listShipmentItems"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/name": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateShipmentNameRequest"
            },
            "description": "The body of the request to `updateShipmentName`."
          }
        ],
        "responses": {
          "204": {
            "description": "UpdateShipmentName 204 response",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "name": "updatedShipmentName"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "name": "updatedShipmentName"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Updates the name of an existing shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "updateShipmentName"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/pallets": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of pallets to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListShipmentPallets 200 response",
            "schema": {
              "$ref": "#/definitions/ListShipmentPalletsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "pallets": [
                      {
                        "stackability": "STACKABLE",
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3.0,
                          "width": 4.0,
                          "height": 5.0
                        },
                        "quantity": 2
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Provides a paginated list of pallet packages in a shipment. A palletized shipment will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listShipmentPallets"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentCancellation": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelSelfShipAppointmentRequest"
            },
            "description": "The body of the request to `cancelSelfShipAppointment`."
          }
        ],
        "responses": {
          "202": {
            "description": "CancelSelfShipAppointment 202 response",
            "schema": {
              "$ref": "#/definitions/CancelSelfShipAppointmentResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "reasonComment": "OTHER"
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "reasonComment": "OTHER"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Cancels a self-ship appointment slot against a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "cancelSelfShipAppointment"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of self ship appointment slots to return in the response matching the given query.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetSelfShipAppointmentSlots 200 response",
            "schema": {
              "$ref": "#/definitions/GetSelfShipAppointmentSlotsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "selfShipAppointmentSlotsAvailability": {
                      "expiresAt": "2024-01-02T00:00:00.000Z",
                      "slots": [
                        {
                          "slotId": "aa1234abcd-1234-abcd-5678-1234abcd5678",
                          "slotTime": {
                            "startTime": "2024-01-01T00:00:00.000Z",
                            "endTime": "2024-01-02T00:00:00.000Z"
                          }
                        }
                      ]
                    },
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the given inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Retrieves a list of available self-ship appointment slots used to drop off a shipment at a warehouse.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "getSelfShipAppointmentSlots"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateSelfShipAppointmentSlotsRequest"
            },
            "description": "The body of the request to `generateSelfShipAppointmentSlots`."
          }
        ],
        "responses": {
          "201": {
            "description": "GenerateSelfShipAppointmentSlots 201 response",
            "schema": {
              "$ref": "#/definitions/GenerateSelfShipAppointmentSlotsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "desiredEndDate": "2024-01-15T00:00:00.000Z",
                          "desiredStartDate": "2024-01-16T00:00:00.000Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "desiredEndDate": "2024-01-15T00:00:00.000Z",
                          "desiredStartDate": "2024-01-16T00:00:00.000Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist in the inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Initiates the process of generating the appointment slots list.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "generateSelfShipAppointmentSlots"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots/{slotId}/schedule": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "An identifier to a self-ship appointment slot.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "slotId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleSelfShipAppointmentRequest"
            },
            "description": "The body of the request to `scheduleSelfShipAppointment`."
          }
        ],
        "responses": {
          "200": {
            "description": "ScheduleSelfShipAppointment 200 response",
            "schema": {
              "$ref": "#/definitions/ScheduleSelfShipAppointmentResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "slotId": {
                        "value": "aa1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "reasonComment": "OTHER"
                        }
                      }
                    }
                  },
                  "response": {
                    "selfShipAppointmentDetails": {
                      "appointmentId": 1000,
                      "appointmentSlotTime": {
                        "startTime": "2023-03-08T13:15:30Z",
                        "endTime": "2023-03-09T13:15:30Z"
                      },
                      "appointmentStatus": "ARRIVAL_SCHEDULED"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "slotId": {
                        "value": "aa1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "reasonComment": "OTHER"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Confirms or reschedules a self-ship appointment slot against a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "scheduleSelfShipAppointment"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/sourceAddress": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateShipmentSourceAddressRequest"
            },
            "description": "The body of the request to `updateShipmentSourceAddress`."
          }
        ],
        "responses": {
          "202": {
            "description": "UpdateShipmentSourceAddress 202 response",
            "schema": {
              "$ref": "#/definitions/UpdateShipmentSourceAddressResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "address": {
                            "name": "name",
                            "companyName": "Acme",
                            "addressLine1": "123 example street",
                            "addressLine2": "Unit 102",
                            "city": "Toronto",
                            "countryCode": "CA",
                            "stateOrProvinceCode": "ON",
                            "postalCode": "M1M1M1",
                            "phoneNumber": "1234567890",
                            "email": "email@email.com"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "address": {
                            "name": "name",
                            "companyName": "Acme",
                            "addressLine1": "123 example street",
                            "addressLine2": "Unit 102",
                            "city": "Toronto",
                            "countryCode": "CA",
                            "stateOrProvinceCode": "ON",
                            "postalCode": "M1M1M1",
                            "phoneNumber": "1234567890",
                            "email": "email@email.com"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Updates the source address of an existing shipment. The shipment source address can only be updated prior to the confirmation of the shipment carriers. As a result of the updated source address, existing transportation options will be invalidated and will need to be regenerated to capture the potential difference in transportation options and quotes due to the new source address.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "updateShipmentSourceAddress"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/trackingDetails": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateShipmentTrackingDetailsRequest"
            },
            "description": "The body of the request to `updateShipmentTrackingDetails`."
          }
        ],
        "responses": {
          "202": {
            "description": "UpdateShipmentTrackingDetails 202 response",
            "schema": {
              "$ref": "#/definitions/UpdateShipmentTrackingDetailsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "trackingDetails": {
                            "ltlTrackingDetail": {
                              "freightBillNumber": [
                                "freightBillNumber1"
                              ],
                              "billOfLadingNumber": "billOfLadingNumber"
                            },
                            "spdTrackingDetail": {
                              "spdTrackingItems": [
                                {
                                  "boxId": "boxId",
                                  "trackingId": "trackingId"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "trackingDetails": {
                            "ltlTrackingDetail": {
                              "freightBillNumber": [
                                "freightBillNumber1"
                              ],
                              "billOfLadingNumber": "billOfLadingNumber"
                            },
                            "spdTrackingDetail": {
                              "spdTrackingItems": [
                                {
                                  "boxId": "boxId",
                                  "trackingId": "trackingId"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Updates a shipment's tracking details.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "updateShipmentTrackingDetails"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of transportation options to return in the response matching the given query.",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          },
          {
            "description": "The placement option to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified.",
            "in": "query",
            "maxLength": 38,
            "minLength": 38,
            "name": "placementOptionId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "type": "string"
          },
          {
            "description": "The shipment to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified.",
            "in": "query",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListTransportationOptions 200 response",
            "schema": {
              "$ref": "#/definitions/ListTransportationOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "placementOptionId": {
                        "value": "pl1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "transportationOptions": [
                      {
                        "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                        "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                        "shippingSolution": "AMAZON_PARTNERED_CARRIER",
                        "carrier": {
                          "name": "name",
                          "alphaCode": "USPS"
                        },
                        "shippingMode": "GROUND_SMALL_PARCEL",
                        "quote": {
                          "cost": {
                            "code": "USD",
                            "amount": 500.0
                          },
                          "voidableUntil": "2024-01-01T00:00:00.000Z",
                          "expiration": "2024-01-01T00:00:00.000Z"
                        },
                        "carrierAppointment": {
                          "startTime": "2024-01-01T00:00:00.000Z",
                          "endTime": "2024-01-02T00:00:00.000Z"
                        },
                        "preconditions": [
                          "CONFIRMED_DELIVERY_WINDOW"
                        ]
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "placementOptionId": {
                        "value": "pl1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Retrieves all transportation options for a shipment. Transportation options must first be generated by the `generateTransportationOptions` operation before becoming available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listTransportationOptions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateTransportationOptionsRequest"
            },
            "description": "The body of the request to `generateTransportationOptions`."
          }
        ],
        "responses": {
          "202": {
            "description": "GenerateTransportationOptions 202 response",
            "schema": {
              "$ref": "#/definitions/GenerateTransportationOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
                          "shipmentTransportationConfigurations": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "readyToShipWindow": {
                                "start": "2024-01-01T00:00Z"
                              },
                              "contactInformation": {
                                "name": "name",
                                "phoneNumber": "1234567890",
                                "email": "email@email.com"
                              },
                              "freightInformation": {
                                "freightClass": "FC_50",
                                "declaredValue": {
                                  "code": "USD",
                                  "amount": 500.0
                                }
                              },
                              "pallets": [
                                {
                                  "stackability": "STACKABLE",
                                  "weight": {
                                    "unit": "KG",
                                    "value": 5.5
                                  },
                                  "dimensions": {
                                    "unitOfMeasurement": "CM",
                                    "length": 3.0,
                                    "width": 4.0,
                                    "height": 5.0
                                  },
                                  "quantity": 2
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
                          "shipmentTransportationConfigurations": [
                            {
                              "shipmentId": "bad234abcd-1234-abcd-5678-1234abcd5678",
                              "readyToShipWindow": {
                                "start": "2024-01-01T00:00Z"
                              },
                              "contactInformation": {
                                "name": "name",
                                "phoneNumber": "1234567890",
                                "email": "email@email.com"
                              },
                              "freightInformation": {
                                "freightClass": "FC_50",
                                "declaredValue": {
                                  "code": "USD",
                                  "amount": 500.0
                                }
                              },
                              "pallets": [
                                {
                                  "stackability": "STACKABLE",
                                  "weight": {
                                    "unit": "KG",
                                    "value": 5.5
                                  },
                                  "dimensions": {
                                    "unitOfMeasurement": "CM",
                                    "length": 3.0,
                                    "width": 4.0,
                                    "height": 5.0
                                  },
                                  "quantity": 2
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist under the provided placement option."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Generates available transportation options for a given placement option.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "generateTransportationOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions/confirmation": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmTransportationOptionsRequest"
            },
            "description": "The body of the request to `confirmTransportationOptions`."
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmTransportationOptions 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportationOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "transportationSelections": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                              "contactInformation": {
                                "name": "name",
                                "phoneNumber": "1234567890",
                                "email": "email@email.com"
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "transportationSelections": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "transportationOptionId": "bad234abcd-1234-abcd-5678-1234abcd5678",
                              "contactInformation": {
                                "name": "name",
                                "phoneNumber": "1234567890",
                                "email": "email@email.com"
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested transportationOptionId does not exist under the associated shipment."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Confirms all the transportation options for an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new transportation options can not be generated or confirmed for the Inbound Plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "confirmTransportationOptions"
      }
    },
    "/inbound/fba/2024-03-20/items/compliance": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "List of merchant SKUs - a merchant-supplied identifier for a specific SKU.",
            "in": "query",
            "items": {
              "maxLength": 40,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "name": "mskus",
            "required": true,
            "type": "array"
          },
          {
            "description": "The Marketplace ID. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) for a list of possible values.",
            "in": "query",
            "maxLength": 256,
            "minLength": 1,
            "name": "marketplaceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListItemComplianceDetails 200 response",
            "schema": {
              "$ref": "#/definitions/ListItemComplianceDetailsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "mskus": {
                        "value": [
                          "msku1",
                          "msku2"
                        ]
                      },
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      }
                    }
                  },
                  "response": {
                    "complianceDetails": [
                      {
                        "msku": "msku1",
                        "fnsku": "fnsku1",
                        "asin": "asin1",
                        "taxDetails": {
                          "hsnCode": "720299",
                          "declaredValue": {
                            "code": "USD",
                            "amount": 50.0
                          },
                          "taxRates": [
                            {
                              "taxType": "TOTAL_TAX",
                              "gstRate": 1.0,
                              "cessRate": 1.0
                            }
                          ]
                        }
                      },
                      {
                        "msku": "msku2",
                        "fnsku": "fnsku2",
                        "asin": "asin2",
                        "taxDetails": {
                          "hsnCode": "720299",
                          "declaredValue": {
                            "code": "USD",
                            "amount": 50.0
                          },
                          "taxRates": [
                            {
                              "taxType": "TOTAL_TAX",
                              "gstRate": 1.0,
                              "cessRate": 1.0
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "mskus": {
                        "value": [
                          "badmsku"
                        ]
                      },
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested MSKU is not valid for the specified marketplace."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "List the inbound compliance details for MSKUs in a given marketplace.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "listItemComplianceDetails"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Marketplace ID. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) for a list of possible values.",
            "in": "query",
            "maxLength": 256,
            "minLength": 1,
            "name": "marketplaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItemComplianceDetailsRequest"
            },
            "description": "The body of the request to `updateItemComplianceDetails`."
          }
        ],
        "responses": {
          "202": {
            "description": "UpdateItemComplianceDetails 202 response",
            "schema": {
              "$ref": "#/definitions/UpdateItemComplianceDetailsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "body": {
                        "value": {
                          "msku": "msku",
                          "taxDetails": {
                            "hsnCode": "720299",
                            "declaredValue": {
                              "code": "USD",
                              "amount": 50.0
                            },
                            "taxRates": [
                              {
                                "taxType": "TOTAL_TAX",
                                "gstRate": 1.0,
                                "cessRate": 1.0
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "body": {
                        "value": {
                          "msku": "badmsku",
                          "taxDetails": {
                            "hsnCode": "720299",
                            "declaredValue": {
                              "code": "USD",
                              "amount": 50.0
                            },
                            "taxRates": [
                              {
                                "taxType": "TOTAL_TAX",
                                "gstRate": 1.0,
                                "cessRate": 1.0
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested msku does not exist for the specified marketplace."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Update compliance details for list of MSKUs. The details provided here are only used for the IN marketplace compliance validation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "updateItemComplianceDetails"
      }
    },
    "/inbound/fba/2024-03-20/items/labels": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateMarketplaceItemLabelsRequest"
            },
            "description": "The body of the request to `createMarketplaceItemLabels`."
          }
        ],
        "responses": {
          "200": {
            "description": "CreateMarketplaceItemLabels 200 response",
            "schema": {
              "$ref": "#/definitions/CreateMarketplaceItemLabelsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "mskuQuantities": [
                            {
                              "msku": "msku1",
                              "quantity": 1
                            },
                            {
                              "msku": "msku2",
                              "quantity": 1
                            }
                          ],
                          "labelType": "STANDARD_FORMAT",
                          "pageType": "A4_21",
                          "localeCode": "en_US"
                        }
                      }
                    }
                  },
                  "response": {
                    "documentDownloads": [
                      {
                        "uri": "https://s3.amazonaws.com/bucket",
                        "downloadType": "URL",
                        "expiration": "2024-01-01T00:00:00.000Z"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "mskuQuantities": [
                            {
                              "msku": "msku1",
                              "quantity": 1
                            },
                            {
                              "msku": "msku2",
                              "quantity": 1
                            }
                          ],
                          "labelType": "THERMAL_PRINTING",
                          "height": 25.0,
                          "width": 100.0,
                          "localeCode": "en_US"
                        }
                      }
                    }
                  },
                  "response": {
                    "documentDownloads": [
                      {
                        "uri": "https://s3.amazonaws.com/bucket",
                        "downloadType": "URL",
                        "expiration": "2024-01-01T00:00:00.000Z"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "mskuQuantities": [
                            {
                              "msku": "badMsku",
                              "quantity": 1
                            }
                          ],
                          "labelType": "THERMAL_PRINTING",
                          "height": 25.0,
                          "width": 100.0,
                          "localeCode": "en_US"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested MSKU is not valid for the specified marketplace."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "For a given marketplace - creates labels for a list of mskus.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "createMarketplaceItemLabels"
      }
    },
    "/inbound/fba/2024-03-20/operations/{operationId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an asynchronous operation.",
            "in": "path",
            "maxLength": 38,
            "minLength": 36,
            "name": "operationId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetInboundOperationStatus 200 response",
            "schema": {
              "$ref": "#/definitions/InboundOperationStatus"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "operationId": {
                        "value": "1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "a440f2ff-cb08-416a-99e1-67a04eee88f6",
                    "operation": "operationName",
                    "operationStatus": "SUCCESS",
                    "operationProblems": [
                      {
                        "code": "DimensionMismatch",
                        "message": "The dimension does not match what is expected.",
                        "details": "",
                        "severity": "WARNING"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "operationId": {
                        "value": "bad4abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The operationId is malformed."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "fbaInbound"
        ],
        "description": "Gets the status of the processing of an asynchronous API call.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). ",
        "operationId": "getInboundOperationStatus"
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "Specific details to identify a place.",
      "properties": {
        "addressLine1": {
          "description": "Street address information.",
          "maxLength": 180,
          "minLength": 1,
          "type": "string"
        },
        "addressLine2": {
          "description": "Additional street address information.",
          "maxLength": 60,
          "minLength": 1,
          "type": "string"
        },
        "city": {
          "description": "The city.",
          "maxLength": 30,
          "minLength": 1,
          "type": "string"
        },
        "companyName": {
          "description": "The name of the business.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "countryCode": {
          "description": "The country code in two-character ISO 3166-1 alpha-2 format.",
          "maxLength": 2,
          "minLength": 2,
          "pattern": "^[A-Z]{2}$",
          "type": "string"
        },
        "email": {
          "description": "The email address.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "description": "The name of the individual who is the primary contact.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number.",
          "maxLength": 20,
          "minLength": 1,
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code.",
          "maxLength": 32,
          "minLength": 1,
          "type": "string"
        },
        "stateOrProvinceCode": {
          "description": "The state or province code.",
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "addressLine1",
        "city",
        "countryCode",
        "name",
        "postalCode"
      ],
      "type": "object",
      "example": {
        "addressLine1": "123 example street",
        "addressLine2": "Floor 19",
        "city": "Toronto",
        "companyName": "Acme",
        "countryCode": "CA",
        "email": "email@email.com",
        "name": "name",
        "phoneNumber": "1234567890",
        "postalCode": "M1M1M1",
        "stateOrProvinceCode": "ON"
      }
    },
    "AddressInput": {
      "description": "Specific details to identify a place.",
      "properties": {
        "addressLine1": {
          "description": "Street address information.",
          "maxLength": 180,
          "minLength": 1,
          "type": "string"
        },
        "addressLine2": {
          "description": "Additional street address information.",
          "maxLength": 60,
          "minLength": 1,
          "type": "string"
        },
        "city": {
          "description": "The city.",
          "maxLength": 30,
          "minLength": 1,
          "type": "string"
        },
        "companyName": {
          "description": "The name of the business.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "countryCode": {
          "description": "The country code in two-character ISO 3166-1 alpha-2 format.",
          "maxLength": 2,
          "minLength": 2,
          "pattern": "^[A-Z]{2}$",
          "type": "string"
        },
        "email": {
          "description": "The email address.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "description": "The name of the individual who is the primary contact.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number.",
          "maxLength": 20,
          "minLength": 1,
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code.",
          "maxLength": 32,
          "minLength": 1,
          "type": "string"
        },
        "stateOrProvinceCode": {
          "description": "The state or province code.",
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "addressLine1",
        "city",
        "countryCode",
        "name",
        "phoneNumber",
        "postalCode"
      ],
      "type": "object",
      "example": {
        "addressLine1": "123 example street",
        "addressLine2": "Floor 19",
        "city": "Toronto",
        "companyName": "Acme",
        "countryCode": "CA",
        "email": "email@email.com",
        "name": "name",
        "phoneNumber": "1234567890",
        "postalCode": "M1M1M1",
        "stateOrProvinceCode": "ON"
      }
    },
    "AppointmentSlot": {
      "description": "The fulfillment center appointment slot for the transportation option.",
      "properties": {
        "slotId": {
          "description": "An identifier to a self-ship appointment slot.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "slotTime": {
          "$ref": "#/definitions/AppointmentSlotTime"
        }
      },
      "required": [
        "slotId",
        "slotTime"
      ],
      "type": "object"
    },
    "AppointmentSlotTime": {
      "description": "An appointment slot time with start and end.",
      "properties": {
        "endTime": {
          "description": "The end timestamp of the appointment in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "startTime": {
          "description": "The start timestamp of the appointment in UTC.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "endTime",
        "startTime"
      ],
      "type": "object"
    },
    "Box": {
      "description": "Contains information about a box that is used in the inbound plan. The box is a container that holds multiple items.",
      "properties": {
        "boxId": {
          "description": "The ID provided by Amazon that identifies a given box. This ID is comprised of the external shipment ID (which is generated after transportation has been confirmed) and the index of the box.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "contentInformationSource": {
          "$ref": "#/definitions/BoxContentInformationSource"
        },
        "destinationRegion": {
          "$ref": "#/definitions/Region"
        },
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "items": {
          "description": "Items contained within the box.",
          "items": {
            "$ref": "#/definitions/Item"
          },
          "type": "array"
        },
        "packageId": {
          "description": "Primary key to uniquely identify a Package (Box or Pallet).",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "quantity": {
          "description": "The number of containers where all other properties like weight or dimensions are identical.",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "templateName": {
          "description": "Template name of the box.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "weight": {
          "$ref": "#/definitions/Weight"
        }
      },
      "required": [
        "packageId"
      ],
      "type": "object"
    },
    "BoxContentInformationSource": {
      "description": "Indication of how box content is meant to be provided.",
      "enum": [
        "BOX_CONTENT_PROVIDED",
        "MANUAL_PROCESS",
        "BARCODE_2D"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "BOX_CONTENT_PROVIDED",
          "description": "Box contents have been provided by the seller."
        },
        {
          "value": "MANUAL_PROCESS",
          "description": "Box contents will be manually processed during receive. This service incurs charges."
        },
        {
          "value": "BARCODE_2D",
          "description": "Box contents information is provided by a barcode on the shipment. For more information, see Using 2D barcodes for box content information on Seller Central."
        }
      ]
    },
    "BoxInput": {
      "description": "Input information for a given box.",
      "properties": {
        "contentInformationSource": {
          "$ref": "#/definitions/BoxContentInformationSource"
        },
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "items": {
          "description": "The items and their quantity in the box. This must be empty if the box `contentInformationSource` is `BARCODE_2D` or `MANUAL_PROCESS`.",
          "items": {
            "$ref": "#/definitions/ItemInput"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The number of containers where all other properties like weight or dimensions are identical.",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "weight": {
          "$ref": "#/definitions/Weight"
        }
      },
      "required": [
        "contentInformationSource",
        "dimensions",
        "quantity",
        "weight"
      ],
      "type": "object",
      "example": {
        "boxId": "FBA10ABC0YY100001",
        "contentInformationSource": "BOX_CONTENT_PROVIDED",
        "dimensions": {
          "height": 5,
          "length": 3,
          "unitOfMeasurement": "CM",
          "width": 4
        },
        "items": [
          {
            "expiration": "2024-01-01",
            "labelOwner": "AMAZON",
            "manufacturingLotCode": "manufacturingLotCode",
            "msku": "Sunglasses",
            "prepOwner": "AMAZON",
            "quantity": 10
          }
        ],
        "quantity": 2,
        "weight": {
          "unit": "KG",
          "value": 5.5
        }
      }
    },
    "BoxUpdateInput": {
      "description": "Input information for updating a box",
      "properties": {
        "contentInformationSource": {
          "$ref": "#/definitions/BoxContentInformationSource"
        },
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "items": {
          "description": "The items and their quantity in the box. This must be empty if the box `contentInformationSource` is `BARCODE_2D` or `MANUAL_PROCESS`.",
          "items": {
            "$ref": "#/definitions/ItemInput"
          },
          "type": "array"
        },
        "packageId": {
          "description": "Primary key to uniquely identify a Box Package. PackageId must be provided if the intent is to update an existing box. Adding a new box will not require providing this value. Any existing PackageIds not provided will be treated as to-be-removed",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "quantity": {
          "description": "The number of containers where all other properties like weight or dimensions are identical.",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "weight": {
          "$ref": "#/definitions/Weight"
        }
      },
      "required": [
        "contentInformationSource",
        "dimensions",
        "quantity",
        "weight"
      ],
      "type": "object"
    },
    "CancelInboundPlanResponse": {
      "description": "The `cancelInboundPlan` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "CancelSelfShipAppointmentRequest": {
      "description": "The `cancelSelfShipAppointment` request.",
      "properties": {
        "reasonComment": {
          "$ref": "#/definitions/ReasonComment"
        }
      },
      "type": "object",
      "example": {
        "reasonComment": "OTHER"
      }
    },
    "CancelSelfShipAppointmentResponse": {
      "description": "The `CancelSelfShipAppointment` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "Carrier": {
      "description": "The carrier for the inbound shipment.",
      "properties": {
        "alphaCode": {
          "description": "The carrier code. For example, USPS or DHLEX.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "description": "The name of the carrier.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CarrierAppointment": {
      "description": "Contains details for a transportation carrier appointment. This appointment is vended out by Amazon and is an indicator for when a transportation carrier is accepting shipments to be picked up.",
      "properties": {
        "endTime": {
          "description": "The end timestamp of the appointment in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "startTime": {
          "description": "The start timestamp of the appointment in UTC.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "endTime",
        "startTime"
      ],
      "type": "object"
    },
    "ComplianceDetail": {
      "description": "Contains item identifiers and related tax information.",
      "properties": {
        "asin": {
          "description": "The Amazon Standard Identification Number, which identifies the detail page identifier.",
          "maxLength": 10,
          "minLength": 1,
          "type": "string"
        },
        "fnsku": {
          "description": "The Fulfillment Network SKU, which identifies a real fulfillable item with catalog data and condition.",
          "maxLength": 10,
          "minLength": 1,
          "type": "string"
        },
        "msku": {
          "description": "The merchant SKU, a merchant-supplied identifier for a specific SKU.",
          "maxLength": 40,
          "minLength": 1,
          "type": "string"
        },
        "taxDetails": {
          "$ref": "#/definitions/TaxDetails"
        }
      },
      "type": "object"
    },
    "ConfirmDeliveryWindowOptionsResponse": {
      "description": "The `confirmDeliveryWindowOptions` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object",
      "example": {
        "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
      }
    },
    "ConfirmPackingOptionResponse": {
      "description": "The `confirmPackingOption` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "ConfirmPlacementOptionResponse": {
      "description": "The `confirmPlacementOption` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "ConfirmShipmentContentUpdatePreviewResponse": {
      "description": "The `confirmShipmentContentUpdatePreview` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "ConfirmTransportationOptionsRequest": {
      "description": "The `confirmTransportationOptions` request.",
      "properties": {
        "transportationSelections": {
          "description": "Information needed to confirm one of the available transportation options.",
          "items": {
            "$ref": "#/definitions/TransportationSelection"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "transportationSelections"
      ],
      "type": "object",
      "example": {
        "transportationSelections": [
          {
            "contactInformation": {
              "email": "email@email.com",
              "name": "John Smithy",
              "phoneNumber": "1234567890"
            },
            "deliveryWindow": {
              "start": "2024-01-01T00:00Z"
            },
            "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
            "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678"
          }
        ]
      }
    },
    "ConfirmTransportationOptionsResponse": {
      "description": "The `confirmTransportationOptions` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "ContactInformation": {
      "description": "The seller's contact information.",
      "properties": {
        "email": {
          "description": "The email address.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "description": "The contact's name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number.",
          "maxLength": 20,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "name",
        "phoneNumber"
      ],
      "type": "object",
      "example": {
        "email": "email@email.com",
        "name": "name",
        "phoneNumber": "1234567890"
      }
    },
    "ContentUpdatePreview": {
      "description": "Preview of the changes that will be applied to the shipment.",
      "properties": {
        "contentUpdatePreviewId": {
          "description": "Identifier of a content update preview.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "expiration": {
          "description": "The date in ISO 8601 format for when the content update expires.",
          "pattern": "^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
          "type": "string"
        },
        "requestedUpdates": {
          "$ref": "#/definitions/RequestedUpdates"
        },
        "transportationOption": {
          "$ref": "#/definitions/TransportationOption"
        }
      },
      "required": [
        "contentUpdatePreviewId",
        "expiration",
        "requestedUpdates",
        "transportationOption"
      ],
      "type": "object"
    },
    "CreateInboundPlanRequest": {
      "description": "The `createInboundPlan` request.",
      "properties": {
        "destinationMarketplaces": {
          "description": "Marketplaces where the items need to be shipped to. Currently only one marketplace can be selected in this request.",
          "items": {
            "description": "The Marketplace ID. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) for a list of possible values.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array"
        },
        "items": {
          "description": "Items included in this plan.",
          "items": {
            "$ref": "#/definitions/ItemInput"
          },
          "maxItems": 2000,
          "minItems": 1,
          "type": "array"
        },
        "name": {
          "description": "Name for the Inbound Plan. If one isn't provided, a default name will be provided.",
          "maxLength": 40,
          "minLength": 1,
          "type": "string"
        },
        "sourceAddress": {
          "$ref": "#/definitions/AddressInput"
        }
      },
      "required": [
        "destinationMarketplaces",
        "items",
        "sourceAddress"
      ],
      "type": "object",
      "example": {
        "contactInformation": {
          "email": "email@email.com",
          "name": "name",
          "phoneNumber": "1234567890"
        },
        "destinationMarketplaces": [
          "ATVPDKIKX0DER"
        ],
        "items": [
          {
            "expiration": "2024-01-01",
            "labelOwner": "AMAZON",
            "manufacturingLotCode": "manufacturingLotCode",
            "msku": "Sunglasses",
            "prepOwner": "AMAZON",
            "quantity": 10
          }
        ],
        "name": "My inbound plan",
        "sourceAddress": {
          "addressLine1": "123 example street",
          "addressLine2": "Floor 19",
          "city": "Toronto",
          "companyName": "Acme",
          "countryCode": "CA",
          "email": "email@email.com",
          "name": "name",
          "phoneNumber": "1234567890",
          "postalCode": "M1M1M1",
          "stateOrProvinceCode": "ON"
        }
      }
    },
    "CreateInboundPlanResponse": {
      "description": "The `createInboundPlan` response.",
      "properties": {
        "inboundPlanId": {
          "description": "Identifier of an inbound plan.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "inboundPlanId",
        "operationId"
      ],
      "type": "object"
    },
    "CreateMarketplaceItemLabelsRequest": {
      "description": "The `createMarketplaceItemLabels` request.",
      "properties": {
        "height": {
          "description": "The height of the item label.",
          "maximum": 100,
          "minimum": 25,
          "type": "number"
        },
        "labelType": {
          "$ref": "#/definitions/LabelPrintType"
        },
        "localeCode": {
          "description": "The locale code constructed from ISO 639 language code and ISO 3166-1 alpha-2 standard of country codes separated by an underscore character.",
          "pattern": "^[a-z]{2}_[A-Z]{2}$",
          "type": "string"
        },
        "marketplaceId": {
          "description": "The Marketplace ID. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) for a list of possible values.",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "mskuQuantities": {
          "description": "Represents the quantity of an msku to print item labels for.",
          "items": {
            "$ref": "#/definitions/MskuQuantity"
          },
          "maxItems": 100,
          "minItems": 1,
          "type": "array"
        },
        "pageType": {
          "$ref": "#/definitions/ItemLabelPageType"
        },
        "width": {
          "description": "The width of the item label.",
          "maximum": 100,
          "minimum": 25,
          "type": "number"
        }
      },
      "required": [
        "labelType",
        "marketplaceId",
        "mskuQuantities"
      ],
      "type": "object",
      "example": {
        "height": 25,
        "labelType": "STANDARD_FORMAT",
        "localeCode": "en_US",
        "marketplaceId": "A2EUQ1WTGCTBG2",
        "mskuQuantities": [
          {
            "msku": "msku",
            "quantity": 5
          }
        ],
        "pageType": "A4_21",
        "width": 100
      }
    },
    "CreateMarketplaceItemLabelsResponse": {
      "description": "The `createMarketplaceItemLabels` response.",
      "properties": {
        "documentDownloads": {
          "description": "Resources to download the requested document.",
          "items": {
            "$ref": "#/definitions/DocumentDownload"
          },
          "type": "array"
        }
      },
      "required": [
        "documentDownloads"
      ],
      "type": "object"
    },
    "Currency": {
      "description": "Currency definition.",
      "properties": {
        "amount": {
          "description": "Decimal value of the currency.",
          "type": "number"
        },
        "code": {
          "description": "ISO 4217 standard of a currency code.",
          "maxLength": 3,
          "minLength": 3,
          "type": "string"
        }
      },
      "required": [
        "amount",
        "code"
      ],
      "type": "object"
    },
    "CustomPlacementInput": {
      "description": "Provide units going to the warehouse.",
      "properties": {
        "items": {
          "description": "Items included while creating Inbound Plan.",
          "items": {
            "$ref": "#/definitions/ItemInput"
          },
          "maxItems": 2000,
          "minItems": 1,
          "type": "array"
        },
        "warehouseId": {
          "description": "Warehouse Id.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "items",
        "warehouseId"
      ],
      "type": "object",
      "example": {
        "items": [
          {
            "expiration": "2024-01-01",
            "labelOwner": "AMAZON",
            "manufacturingLotCode": "manufacturingLotCode",
            "msku": "Sunglasses",
            "prepOwner": "AMAZON",
            "quantity": 10
          }
        ],
        "warehouseId": "YYZ14"
      }
    },
    "Dates": {
      "description": "Specifies the date that the seller expects their shipment will be shipped.",
      "properties": {
        "readyToShipWindow": {
          "$ref": "#/definitions/Window"
        }
      },
      "type": "object",
      "example": {
        "readyToShipWindow": {
          "end": "2024-01-06T14:48:00.000Z",
          "start": "2024-01-05T14:48:00.000Z"
        }
      }
    },
    "DeliveryWindowOption": {
      "description": "Contains information pertaining to a delivery window option.",
      "properties": {
        "availabilityType": {
          "description": "Identifies type of Delivery Window Availability. Values: `AVAILABLE`, `CONGESTED`",
          "type": "string"
        },
        "deliveryWindowOptionId": {
          "description": "Identifier of a delivery window option. A delivery window option represent one option for when a shipment is expected to be delivered.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "endDate": {
          "description": "The timestamp at which this delivery window option ends. This is based in ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "startDate": {
          "description": "The timestamp at which this delivery window option starts. This is based in ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "validUntil": {
          "description": "The timestamp at which this window delivery option becomes no longer valid. This is based in ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "availabilityType",
        "deliveryWindowOptionId",
        "endDate",
        "startDate",
        "validUntil"
      ],
      "type": "object",
      "example": {
        "availabilityType": "AVAILABLE",
        "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678",
        "endDate": "2024-01-05T20:00:00.000Z",
        "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
        "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
        "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
        "startDate": "2024-01-05T14:00:00.000Z",
        "validUntil": "2024-01-05T20:00:00.000Z"
      }
    },
    "Dimensions": {
      "description": "Measurement of a package's dimensions.",
      "properties": {
        "height": {
          "description": "The height of a package.",
          "maximum": 100000,
          "minimum": 0,
          "type": "number"
        },
        "length": {
          "description": "The length of a package.",
          "maximum": 100000,
          "minimum": 0,
          "type": "number"
        },
        "unitOfMeasurement": {
          "$ref": "#/definitions/UnitOfMeasurement"
        },
        "width": {
          "description": "The width of a package.",
          "maximum": 100000,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "height",
        "length",
        "unitOfMeasurement",
        "width"
      ],
      "type": "object"
    },
    "DocumentDownload": {
      "description": "Resource to download the requested document.",
      "properties": {
        "downloadType": {
          "description": "The type of download. Can be `URL`.",
          "type": "string"
        },
        "expiration": {
          "description": "The timestamp of expiration of the URI. This is in ISO 8601 datetime format with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "uri": {
          "description": "Uniform resource identifier to identify where the document is located.",
          "type": "string"
        }
      },
      "required": [
        "downloadType",
        "uri"
      ],
      "type": "object"
    },
    "Error": {
      "description": "Error object containing information about what went wrong.",
      "properties": {
        "code": {
          "description": "An error code that identifies the type of error that occurred.",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "details": {
          "description": "Additional details that can help the caller understand or fix the issue.",
          "maxLength": 8192,
          "minLength": 0,
          "type": "string"
        },
        "message": {
          "description": "A message that describes the error condition.",
          "maxLength": 2048,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "example": {
        "code": "FBA_ERROR_001",
        "details": "The shipment is in a status that does not allow it to be edited.",
        "message": "Invalid Request"
      }
    },
    "ErrorList": {
      "description": "A list of error responses returned when a request is unsuccessful.",
      "properties": {
        "errors": {
          "description": "List of errors.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "required": [
        "errors"
      ],
      "type": "object"
    },
    "FreightInformation": {
      "description": "Freight information describes the skus being transported. Freight carrier options and quotes will only be returned if the freight information is provided.",
      "properties": {
        "declaredValue": {
          "$ref": "#/definitions/Currency"
        },
        "freightClass": {
          "description": "Freight class. Can be: `NONE`, `FC_50`, `FC_55`, `FC_60`, `FC_65`, `FC_70`, `FC_77_5`, `FC_85`, `FC_92_5`, `FC_100`, `FC_110`, `FC_125`, `FC_150`, `FC_175`, `FC_200`, `FC_250`, `FC_300`, `FC_400`, `FC_500`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object",
      "example": {
        "declaredValue": {
          "amount": 5.5,
          "code": "CAD"
        },
        "freightClass": "FC_50"
      }
    },
    "GenerateDeliveryWindowOptionsResponse": {
      "description": "The `generateDeliveryWindowOptions` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "GeneratePackingOptionsResponse": {
      "description": "The `generatePackingOptions` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "GeneratePlacementOptionsRequest": {
      "description": "The `generatePlacementOptions` request.",
      "properties": {
        "customPlacement": {
          "description": "Custom placement options to be added to the plan.",
          "items": {
            "$ref": "#/definitions/CustomPlacementInput"
          },
          "type": "array"
        }
      },
      "type": "object",
      "example": {
        "customPlacement": [
          {
            "items": [
              {
                "expiration": "2024-01-01",
                "labelOwner": "AMAZON",
                "manufacturingLotCode": "manufacturingLotCode",
                "msku": "Sunglasses",
                "prepOwner": "AMAZON",
                "quantity": 10
              }
            ],
            "warehouseId": "YYZ14"
          }
        ]
      }
    },
    "GeneratePlacementOptionsResponse": {
      "description": "The `generatePlacementOptions` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "GenerateSelfShipAppointmentSlotsRequest": {
      "description": "The `generateSelfShipAppointmentSlots` request.",
      "properties": {
        "desiredEndDate": {
          "description": "The ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "desiredStartDate": {
          "description": "The ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object",
      "example": {
        "desiredEndDate": "2024-01-06T14:48:00.000Z",
        "desiredStartDate": "2024-01-05T14:48:00.000Z"
      }
    },
    "GenerateSelfShipAppointmentSlotsResponse": {
      "description": "The `generateSelfShipAppointmentSlots` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "GenerateShipmentContentUpdatePreviewsRequest": {
      "description": "The `GenerateShipmentContentUpdatePreviews` request.",
      "properties": {
        "boxes": {
          "description": "A list of boxes that will be present in the shipment after the update.",
          "items": {
            "$ref": "#/definitions/BoxUpdateInput"
          },
          "maxItems": 5000,
          "minItems": 1,
          "type": "array"
        },
        "items": {
          "description": "A list of all items that will be present in the shipment after the update.",
          "items": {
            "$ref": "#/definitions/ItemInput"
          },
          "maxItems": 2000,
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "boxes",
        "items"
      ],
      "type": "object",
      "example": {
        "boxes": [
          {
            "contentInformationSource": "BOX_CONTENT_PROVIDED",
            "dimensions": {
              "height": 5,
              "length": 3,
              "unitOfMeasurement": "CM",
              "width": 4
            },
            "items": [
              {
                "expiration": "2024-01-01",
                "labelOwner": "AMAZON",
                "manufacturingLotCode": "manufacturingLotCode",
                "msku": "Sunglasses",
                "prepOwner": "AMAZON",
                "quantity": 10
              }
            ],
            "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
            "quantity": 2,
            "weight": {
              "unit": "KG",
              "value": 5.5
            }
          }
        ],
        "items": [
          {
            "expiration": "2024-01-01",
            "labelOwner": "AMAZON",
            "manufacturingLotCode": "manufacturingLotCode",
            "msku": "Sunglasses",
            "prepOwner": "AMAZON",
            "quantity": 10
          }
        ]
      }
    },
    "GenerateShipmentContentUpdatePreviewsResponse": {
      "description": "The `GenerateShipmentContentUpdatePreviews` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "GenerateTransportationOptionsRequest": {
      "description": "The `generateTransportationOptions` request.",
      "properties": {
        "placementOptionId": {
          "description": "The placement option to generate transportation options for.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "shipmentTransportationConfigurations": {
          "description": "List of shipment transportation configurations.",
          "items": {
            "$ref": "#/definitions/ShipmentTransportationConfiguration"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "placementOptionId",
        "shipmentTransportationConfigurations"
      ],
      "type": "object",
      "example": {
        "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
        "shipmentTransportationConfigurations": [
          {
            "contactInformation": {
              "email": "email@email.com",
              "name": "John Smithy",
              "phoneNumber": "1234567890"
            },
            "freightInformation": {
              "declaredValue": {
                "amount": 5.5,
                "code": "CAD"
              },
              "freightClass": "FC_50"
            },
            "pallets": [
              {
                "dimensions": {
                  "height": 5,
                  "length": 3,
                  "unitOfMeasurement": "CM",
                  "width": 4
                },
                "quantity": 2,
                "stackability": "STACKABLE",
                "weight": {
                  "unit": "KG",
                  "value": 5.5
                }
              }
            ],
            "readyToShipWindow": {
              "start": "2024-01-01T00:00Z"
            },
            "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678"
          }
        ]
      }
    },
    "GenerateTransportationOptionsResponse": {
      "description": "The `generateTransportationOptions` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "GetDeliveryChallanDocumentResponse": {
      "description": "The `getDeliveryChallanDocumentResponse` response.",
      "properties": {
        "documentDownload": {
          "$ref": "#/definitions/DocumentDownload"
        }
      },
      "required": [
        "documentDownload"
      ],
      "type": "object"
    },
    "GetSelfShipAppointmentSlotsResponse": {
      "description": "The `getSelfShipAppointmentSlots` response.",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "selfShipAppointmentSlotsAvailability": {
          "$ref": "#/definitions/SelfShipAppointmentSlotsAvailability"
        }
      },
      "required": [
        "selfShipAppointmentSlotsAvailability"
      ],
      "type": "object"
    },
    "InboundOperationStatus": {
      "description": "GetInboundOperationStatus response.",
      "properties": {
        "operation": {
          "description": "The name of the operation in the asynchronous API call.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "operationId": {
          "description": "The operation ID returned by the asynchronous API call.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "operationProblems": {
          "description": "The problems in the processing of the asynchronous operation.",
          "items": {
            "$ref": "#/definitions/OperationProblem"
          },
          "type": "array"
        },
        "operationStatus": {
          "$ref": "#/definitions/OperationStatus"
        }
      },
      "required": [
        "operation",
        "operationId",
        "operationProblems",
        "operationStatus"
      ],
      "type": "object"
    },
    "InboundPlan": {
      "description": "Inbound plan containing details of the inbound workflow.",
      "properties": {
        "createdAt": {
          "description": "The ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "inboundPlanId": {
          "description": "Identifier of an inbound plan.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "lastUpdatedAt": {
          "description": "The ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "marketplaceIds": {
          "description": "Marketplace IDs.",
          "items": {
            "description": "The Marketplace ID. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) for a list of possible values.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Human-readable name of the inbound plan.",
          "type": "string"
        },
        "packingOptions": {
          "description": "Packing options for the inbound plan. This property will be populated when it has been generated via the corresponding operation. If there is a chosen placement option, only packing options for that placement option will be returned. If there are confirmed shipments, only packing options for those shipments will be returned. Query the packing option for more details.",
          "items": {
            "$ref": "#/definitions/PackingOptionSummary"
          },
          "type": "array"
        },
        "placementOptions": {
          "description": "Placement options for the inbound plan. This property will be populated when it has been generated via the corresponding operation. If there is a chosen placement option, that will be the only returned option. Query the placement option for more details.",
          "items": {
            "$ref": "#/definitions/PlacementOptionSummary"
          },
          "type": "array"
        },
        "shipments": {
          "description": "Shipment IDs for the inbound plan. This property will be populated when it has been generated via the corresponding operation. If there is a chosen placement option, only shipments for that option will be returned. If there are confirmed shipments, only those shipments will be returned. Query the shipment for more details.",
          "items": {
            "$ref": "#/definitions/ShipmentSummary"
          },
          "type": "array"
        },
        "sourceAddress": {
          "$ref": "#/definitions/Address"
        },
        "status": {
          "description": "Current status of the inbound plan. Can be: `ACTIVE`, `VOIDED`, `SHIPPED`, 'ERRORED'.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "createdAt",
        "inboundPlanId",
        "lastUpdatedAt",
        "marketplaceIds",
        "name",
        "sourceAddress",
        "status"
      ],
      "type": "object",
      "example": {
        "contactInformation": {
          "email": "email@email.com",
          "name": "name",
          "phoneNumber": "1234567890"
        },
        "createdAt": "2024-03-20T12:01:00Z",
        "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
        "lastUpdatedAt": "2024-03-28T13:15:30Z",
        "marketplaceIds": [
          "A2EUQ1WTGCTBG2"
        ],
        "name": "FBA (03/20/2024, 12:01 PM)",
        "packingOptions": [],
        "placementOptions": [],
        "shipments": [],
        "sourceAddress": {
          "addressLine1": "123 example street",
          "addressLine2": "Floor 19",
          "city": "Toronto",
          "companyName": "Acme",
          "countryCode": "CA",
          "email": "email@email.com",
          "name": "name",
          "phoneNumber": "1234567890",
          "postalCode": "M1M1M1",
          "stateOrProvinceCode": "ON"
        },
        "status": "ACTIVE"
      }
    },
    "InboundPlanSummary": {
      "description": "A light-weight inbound plan.",
      "properties": {
        "createdAt": {
          "description": "The ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "inboundPlanId": {
          "description": "Identifier of an inbound plan.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "lastUpdatedAt": {
          "description": "The ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "marketplaceIds": {
          "description": "Marketplace IDs.",
          "items": {
            "description": "The Marketplace ID. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) for a list of possible values.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Human-readable name of the inbound plan.",
          "type": "string"
        },
        "sourceAddress": {
          "$ref": "#/definitions/Address"
        },
        "status": {
          "description": "Current status of the inbound plan. Can be: `ACTIVE`, `VOIDED`, `SHIPPED`, 'ERRORED'.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "createdAt",
        "inboundPlanId",
        "lastUpdatedAt",
        "marketplaceIds",
        "name",
        "sourceAddress",
        "status"
      ],
      "type": "object",
      "example": {
        "contactInformation": {
          "email": "email@email.com",
          "name": "name",
          "phoneNumber": "1234567890"
        },
        "createdAt": "2023-03-08T13:15:30Z",
        "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
        "lastUpdatedAt": "2023-03-08T13:15:30Z",
        "marketplaceIds": [
          "A2EUQ1WTGCTBG2"
        ],
        "name": "FBA (03/08/2023, 01:15 PM)",
        "sourceAddress": {
          "addressLine1": "123 example street",
          "addressLine2": "Floor 19",
          "city": "Toronto",
          "companyName": "Acme",
          "countryCode": "CA",
          "email": "email@email.com",
          "name": "name",
          "phoneNumber": "1234567890",
          "postalCode": "M1M1M1",
          "stateOrProvinceCode": "ON"
        },
        "status": "ACTIVE"
      }
    },
    "Incentive": {
      "description": "Contains details about cost related modifications to the placement cost.",
      "properties": {
        "description": {
          "description": "Description of the incentive.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "target": {
          "description": "Target of the incentive. Can be 'Placement Services' or 'Fulfillment Fee Discount'.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "description": "Type of incentive. Can be: `FEE`, `DISCOUNT`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Currency"
        }
      },
      "required": [
        "description",
        "target",
        "type",
        "value"
      ],
      "type": "object"
    },
    "Item": {
      "description": "Information associated with a single SKU in the seller's catalog.",
      "properties": {
        "asin": {
          "description": "The Amazon Standard Identification Number (ASIN) of the item.",
          "maxLength": 10,
          "minLength": 1,
          "type": "string"
        },
        "expiration": {
          "description": "The expiration date of the MSKU in ISO 8601 format. The same MSKU with different expiration dates cannot go into the same box.",
          "pattern": "^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
          "type": "string"
        },
        "fnsku": {
          "description": "A unique identifier assigned by Amazon to products stored in and fulfilled from an Amazon fulfillment center.",
          "maxLength": 10,
          "minLength": 1,
          "type": "string"
        },
        "labelOwner": {
          "description": "Specifies who will label the items. Options include `AMAZON`, `SELLER`, and `NONE`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "manufacturingLotCode": {
          "description": "The manufacturing lot code.",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "msku": {
          "description": "The merchant defined SKU ID.",
          "maxLength": 40,
          "minLength": 1,
          "type": "string"
        },
        "prepInstructions": {
          "description": "Special preparations that are required for an item.",
          "items": {
            "$ref": "#/definitions/PrepInstruction"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The number of the specified MSKU.",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        }
      },
      "required": [
        "asin",
        "fnsku",
        "labelOwner",
        "msku",
        "prepInstructions",
        "quantity"
      ],
      "type": "object"
    },
    "ItemInput": {
      "description": "Defines an item's input parameters.",
      "properties": {
        "expiration": {
          "description": "The expiration date of the MSKU in ISO 8601 format. The same MSKU with different expiration dates cannot go into the same box.",
          "pattern": "^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
          "type": "string"
        },
        "labelOwner": {
          "$ref": "#/definitions/LabelOwner"
        },
        "manufacturingLotCode": {
          "description": "The manufacturing lot code.",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "msku": {
          "description": "Merchant SKU.",
          "maxLength": 40,
          "minLength": 1,
          "type": "string"
        },
        "prepOwner": {
          "$ref": "#/definitions/PrepOwner"
        },
        "quantity": {
          "description": "The number of units of the specified msku that will be shipped.",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        }
      },
      "required": [
        "labelOwner",
        "msku",
        "prepOwner",
        "quantity"
      ],
      "type": "object",
      "example": {
        "expiration": "2024-01-01",
        "labelOwner": "AMAZON",
        "manufacturingLotCode": "manufacturingLotCode",
        "msku": "Sunglasses",
        "prepOwner": "AMAZON",
        "quantity": 10
      }
    },
    "ItemLabelPageType": {
      "description": "The page type to use to print the labels. Possible values: 'A4_21', 'A4_24', 'A4_24_64x33', 'A4_24_66x35', 'A4_24_70x36', 'A4_24_70x37', 'A4_24i', 'A4_27', 'A4_40_52x29', 'A4_44_48x25', 'Letter_30'.",
      "enum": [
        "A4_21",
        "A4_24",
        "A4_24_64x33",
        "A4_24_66x35",
        "A4_24_70x36",
        "A4_24_70x37",
        "A4_24i",
        "A4_27",
        "A4_40_52x29",
        "A4_44_48x25",
        "Letter_30"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "A4_21",
          "description": "-"
        },
        {
          "value": "A4_24",
          "description": "-"
        },
        {
          "value": "A4_24_64x33",
          "description": "-"
        },
        {
          "value": "A4_24_66x35",
          "description": "-"
        },
        {
          "value": "A4_24_70x36",
          "description": "-"
        },
        {
          "value": "A4_24_70x37",
          "description": "-"
        },
        {
          "value": "A4_24i",
          "description": "-"
        },
        {
          "value": "A4_27",
          "description": "-"
        },
        {
          "value": "A4_40_52x29",
          "description": "-"
        },
        {
          "value": "A4_44_48x25",
          "description": "-"
        },
        {
          "value": "Letter_30",
          "description": "-"
        }
      ],
      "example": "A4_21"
    },
    "LabelOwner": {
      "description": "Specifies who will label the items. Options include `AMAZON`, `SELLER` or `NONE`.",
      "enum": [
        "AMAZON",
        "SELLER",
        "NONE"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "AMAZON",
          "description": "Amazon provides the information."
        },
        {
          "value": "SELLER",
          "description": "Seller provides the information."
        },
        {
          "value": "NONE",
          "description": "No owner is required for the labelling."
        }
      ]
    },
    "LabelPrintType": {
      "description": "Indicates the type of print type for a given label.",
      "enum": [
        "STANDARD_FORMAT",
        "THERMAL_PRINTING"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "STANDARD_FORMAT",
          "description": "-"
        },
        {
          "value": "THERMAL_PRINTING",
          "description": "-"
        }
      ],
      "example": "STANDARD_FORMAT"
    },
    "ListDeliveryWindowOptionsResponse": {
      "description": "The `listDeliveryWindowOptions` response.",
      "properties": {
        "deliveryWindowOptions": {
          "description": "Delivery window options generated for the placement option.",
          "items": {
            "$ref": "#/definitions/DeliveryWindowOption"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "deliveryWindowOptions"
      ],
      "type": "object"
    },
    "ListInboundPlanBoxesResponse": {
      "description": "The `listInboundPlanBoxes` response.",
      "properties": {
        "boxes": {
          "description": "A list of boxes in an inbound plan.",
          "items": {
            "$ref": "#/definitions/Box"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "boxes"
      ],
      "type": "object"
    },
    "ListInboundPlanItemsResponse": {
      "description": "The `listInboundPlanItems` response.",
      "properties": {
        "items": {
          "description": "The items in an inbound plan.",
          "items": {
            "$ref": "#/definitions/Item"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "items"
      ],
      "type": "object"
    },
    "ListInboundPlanPalletsResponse": {
      "description": "The `listInboundPlanPallets` response.",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "pallets": {
          "description": "The pallets in an inbound plan.",
          "items": {
            "$ref": "#/definitions/Pallet"
          },
          "type": "array"
        }
      },
      "required": [
        "pallets"
      ],
      "type": "object"
    },
    "ListInboundPlansResponse": {
      "description": "The `listInboundPlans` response.",
      "properties": {
        "inboundPlans": {
          "description": "A list of inbound plans with minimal information.",
          "items": {
            "$ref": "#/definitions/InboundPlanSummary"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "type": "object"
    },
    "ListItemComplianceDetailsResponse": {
      "description": "The `listItemComplianceDetails` response.",
      "properties": {
        "complianceDetails": {
          "description": "List of compliance details.",
          "items": {
            "$ref": "#/definitions/ComplianceDetail"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPackingGroupBoxesResponse": {
      "description": "The `listPackingGroupBoxes` response.",
      "properties": {
        "boxes": {
          "description": "Provides the information about the list of boxes in the packing group.",
          "items": {
            "$ref": "#/definitions/Box"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "boxes"
      ],
      "type": "object"
    },
    "ListPackingGroupItemsResponse": {
      "description": "The `listPackingGroupItems` response.",
      "properties": {
        "items": {
          "description": "Provides the information about the list of items in the packing group.",
          "items": {
            "$ref": "#/definitions/Item"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "items"
      ],
      "type": "object"
    },
    "ListPackingOptionsResponse": {
      "description": "The `listPlacementOptions` response.",
      "properties": {
        "packingOptions": {
          "description": "List of packing options.",
          "items": {
            "$ref": "#/definitions/PackingOption"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "packingOptions"
      ],
      "type": "object"
    },
    "ListPlacementOptionsResponse": {
      "description": "The `listPlacementOptions` response.",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "placementOptions": {
          "description": "Placement options generated for the inbound plan.",
          "items": {
            "$ref": "#/definitions/PlacementOption"
          },
          "type": "array"
        }
      },
      "required": [
        "placementOptions"
      ],
      "type": "object"
    },
    "ListShipmentBoxesResponse": {
      "description": "The `listShipmentBoxes` response.",
      "properties": {
        "boxes": {
          "description": "A list of boxes in a shipment.",
          "items": {
            "$ref": "#/definitions/Box"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "boxes"
      ],
      "type": "object"
    },
    "ListShipmentContentUpdatePreviewsResponse": {
      "description": "The `ListShipmentContentUpdatePreviews` response.",
      "properties": {
        "contentUpdatePreviews": {
          "description": "A list of content update previews in a shipment.",
          "items": {
            "$ref": "#/definitions/ContentUpdatePreview"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "contentUpdatePreviews"
      ],
      "type": "object"
    },
    "ListShipmentItemsResponse": {
      "description": "The `listShipmentItems` response.",
      "properties": {
        "items": {
          "description": "The items in a shipment.",
          "items": {
            "$ref": "#/definitions/Item"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      },
      "required": [
        "items"
      ],
      "type": "object"
    },
    "ListShipmentPalletsResponse": {
      "description": "The `listShipmentPallets` response.",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "pallets": {
          "description": "The pallets in a shipment.",
          "items": {
            "$ref": "#/definitions/Pallet"
          },
          "type": "array"
        }
      },
      "required": [
        "pallets"
      ],
      "type": "object"
    },
    "ListTransportationOptionsResponse": {
      "description": "The `listTransportationOptions` response.",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "transportationOptions": {
          "description": "Transportation options generated for the placement option.",
          "items": {
            "$ref": "#/definitions/TransportationOption"
          },
          "type": "array"
        }
      },
      "required": [
        "transportationOptions"
      ],
      "type": "object"
    },
    "LtlTrackingDetail": {
      "description": "Contains information related to Less-Than-Truckload (LTL) shipment tracking.",
      "properties": {
        "billOfLadingNumber": {
          "description": "The number of the carrier shipment acknowledgement document.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "freightBillNumber": {
          "description": "The number associated with the freight bill.",
          "items": {
            "maxLength": 1024,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-._\\s]*$",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LtlTrackingDetailInput": {
      "description": "Contains input information to update Less-Than-Truckload (LTL) tracking information.",
      "properties": {
        "billOfLadingNumber": {
          "description": "The number of the carrier shipment acknowledgement document.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "freightBillNumber": {
          "description": "Number associated with the freight bill.",
          "items": {
            "maxLength": 1024,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-._\\s]*$",
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "freightBillNumber"
      ],
      "type": "object",
      "example": {
        "billOfLadingNumber": "billOfLadingNumber",
        "freightBillNumber": [
          "freightBillNumber1"
        ]
      }
    },
    "MskuQuantity": {
      "description": "Represents an msku and the related quantity.",
      "properties": {
        "msku": {
          "description": "The merchant SKU, a merchant-supplied identifier for a specific SKU.",
          "maxLength": 40,
          "minLength": 1,
          "type": "string"
        },
        "quantity": {
          "description": "A positive integer.",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        }
      },
      "required": [
        "msku",
        "quantity"
      ],
      "type": "object",
      "example": {
        "msku": "msku",
        "quantity": 5
      }
    },
    "OperationProblem": {
      "description": "A problem with additional properties persisted to an operation.",
      "properties": {
        "code": {
          "description": "An error code that identifies the type of error that occurred.",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "details": {
          "description": "Additional details that can help the caller understand or fix the issue.",
          "maxLength": 8192,
          "minLength": 0,
          "type": "string"
        },
        "message": {
          "description": "A message that describes the error condition.",
          "maxLength": 2048,
          "minLength": 1,
          "type": "string"
        },
        "severity": {
          "description": "The severity of the problem. Can be: `WARNING`, `ERROR`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "code",
        "message",
        "severity"
      ],
      "type": "object"
    },
    "OperationStatus": {
      "description": "The status of an operation.",
      "enum": [
        "SUCCESS",
        "FAILED",
        "IN_PROGRESS"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "SUCCESS",
          "description": "Indicates a request has successfully finished processing."
        },
        {
          "value": "FAILED",
          "description": "Indicates a request has finished processing but is in a failed state."
        },
        {
          "value": "IN_PROGRESS",
          "description": "Indicates a request is still processing."
        }
      ]
    },
    "PackageGroupingInput": {
      "description": "Packing information for the inbound plan.",
      "properties": {
        "boxes": {
          "description": "Box level information being provided.",
          "items": {
            "$ref": "#/definitions/BoxInput"
          },
          "maxItems": 5000,
          "minItems": 1,
          "type": "array"
        },
        "packingGroupId": {
          "description": "The ID of the `packingGroup` that packages are grouped according to. The `PackingGroupId` can only be provided before placement confirmation, and it must belong to the confirmed `PackingOption`. One of `ShipmentId` or `PackingGroupId` must be provided with every request.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "shipmentId": {
          "description": "The ID of the shipment that packages are grouped according to. The `ShipmentId` can only be provided after placement confirmation, and the shipment must belong to the confirmed placement option. One of `ShipmentId` or `PackingGroupId` must be provided with every request.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "boxes"
      ],
      "type": "object",
      "example": {
        "boxes": [
          {
            "boxId": "FBA10ABC0YY100001",
            "contentInformationSource": "BOX_CONTENT_PROVIDED",
            "dimensions": {
              "height": 5,
              "length": 3,
              "unitOfMeasurement": "CM",
              "width": 4
            },
            "items": [
              {
                "expiration": "2024-01-01",
                "labelOwner": "AMAZON",
                "manufacturingLotCode": "manufacturingLotCode",
                "msku": "Sunglasses",
                "prepOwner": "AMAZON",
                "quantity": 10
              }
            ],
            "quantity": 2,
            "weight": {
              "unit": "KG",
              "value": 5.5
            }
          }
        ],
        "packingGroupId": "pg1234abcd-1234-abcd-5678-1234abcd5678",
        "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678"
      }
    },
    "PackingOption": {
      "description": "A packing option contains a set of pack groups plus additional information about the packing option, such as any discounts or fees if it's selected.",
      "properties": {
        "discounts": {
          "description": "Discount for the offered option.",
          "items": {
            "$ref": "#/definitions/Incentive"
          },
          "type": "array"
        },
        "expiration": {
          "description": "The timestamp at which this packing option becomes no longer valid. This is based in ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "fees": {
          "description": "Fee for the offered option.",
          "items": {
            "$ref": "#/definitions/Incentive"
          },
          "type": "array"
        },
        "packingGroups": {
          "description": "Packing group IDs.",
          "items": {
            "description": "Identifier of a packing group.",
            "maxLength": 38,
            "minLength": 38,
            "pattern": "^[a-zA-Z0-9-]*$",
            "type": "string"
          },
          "type": "array"
        },
        "packingOptionId": {
          "description": "Identifier of a packing option.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "status": {
          "description": "The status of the packing option. Can be: `OFFERED`, `ACCEPTED`, or `EXPIRED`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "supportedShippingConfigurations": {
          "description": "List of supported shipping modes.",
          "items": {
            "$ref": "#/definitions/ShippingConfiguration"
          },
          "type": "array"
        }
      },
      "required": [
        "discounts",
        "fees",
        "packingGroups",
        "packingOptionId",
        "status",
        "supportedShippingConfigurations"
      ],
      "type": "object"
    },
    "PackingOptionSummary": {
      "description": "Summary information about a packing option.",
      "properties": {
        "packingOptionId": {
          "description": "Identifier of a packing option.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "status": {
          "description": "The status of a packing option. Can be 'OFFERED', 'ACCEPTED', or 'EXPIRED'.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "packingOptionId",
        "status"
      ],
      "type": "object",
      "example": {
        "packingOptionId": "po1234abcd-1234-abcd-5678-1234abcd5678",
        "status": "OFFERED"
      }
    },
    "Pagination": {
      "description": "Contains tokens to fetch from a certain page.",
      "properties": {
        "nextToken": {
          "description": "When present, pass this string token in the next request to return the next response page.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Pallet": {
      "description": "Contains information about a pallet that is used in the inbound plan. The pallet is a container that holds multiple items or boxes.",
      "properties": {
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "packageId": {
          "description": "Primary key to uniquely identify a Package (Box or Pallet).",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "quantity": {
          "description": "The number of containers where all other properties like weight or dimensions are identical.",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "stackability": {
          "$ref": "#/definitions/Stackability"
        },
        "weight": {
          "$ref": "#/definitions/Weight"
        }
      },
      "required": [
        "packageId"
      ],
      "type": "object"
    },
    "PalletInput": {
      "description": "Contains input information about a pallet to be used in the inbound plan.",
      "properties": {
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "quantity": {
          "description": "The number of containers where all other properties like weight or dimensions are identical.",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "stackability": {
          "$ref": "#/definitions/Stackability"
        },
        "weight": {
          "$ref": "#/definitions/Weight"
        }
      },
      "required": [
        "quantity"
      ],
      "type": "object",
      "example": {
        "dimensions": {
          "height": 5,
          "length": 3,
          "unitOfMeasurement": "CM",
          "width": 4
        },
        "quantity": 2,
        "stackability": "STACKABLE",
        "weight": {
          "unit": "KG",
          "value": 5.5
        }
      }
    },
    "PlacementOption": {
      "description": "Contains information pertaining to the placement of the contents of an inbound plan and the related costs.",
      "properties": {
        "discounts": {
          "description": "Discount for the offered option.",
          "items": {
            "$ref": "#/definitions/Incentive"
          },
          "type": "array"
        },
        "expiration": {
          "description": "The expiration date of the placement option. This is based in ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "fees": {
          "description": "Fee for the offered option.",
          "items": {
            "$ref": "#/definitions/Incentive"
          },
          "type": "array"
        },
        "placementOptionId": {
          "description": "The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "shipmentIds": {
          "description": "Shipment ids.",
          "items": {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "maxLength": 38,
            "minLength": 38,
            "pattern": "^[a-zA-Z0-9-]*$",
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of a placement option. Can be: `OFFERED`, `ACCEPTED`, or `EXPIRED`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "discounts",
        "fees",
        "placementOptionId",
        "shipmentIds",
        "status"
      ],
      "type": "object"
    },
    "PlacementOptionSummary": {
      "description": "Summary information about a placement option.",
      "properties": {
        "placementOptionId": {
          "description": "The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "status": {
          "description": "The status of a placement option. Can be: `OFFERED` or `ACCEPTED`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "placementOptionId",
        "status"
      ],
      "type": "object",
      "example": {
        "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
        "status": "ACCEPTED"
      }
    },
    "PrepInstruction": {
      "description": "Information pertaining to the preparation of inbound goods.",
      "properties": {
        "fee": {
          "$ref": "#/definitions/Currency"
        },
        "prepOwner": {
          "description": "In some situations, special preparations are required for items and this field reflects the owner of the preparations. Options include `AMAZON`, `SELLER` or `NONE`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "prepType": {
          "description": "Type of preparation that should be done. Can be: `ITEM_LABELING`, `ITEM_BUBBLEWRAP`, `ITEM_POLYBAGGING`, `ITEM_TAPING`, `ITEM_BLACK_SHRINKWRAP`, `ITEM_HANG_GARMENT`, `ITEM_BOXING`, `ITEM_SETCREAT`, `ITEM_RMOVHANG`, `ITEM_SUFFOSTK`, `ITEM_CAP_SEALING`, `ITEM_DEBUNDLE`, `ITEM_SETSTK`, `ITEM_SIOC`, `ITEM_NO_PREP`, `ADULT`, `BABY`, `TEXTILE`, `HANGER`, `FRAGILE`, `LIQUID`, `SHARP`, `SMALL`, `PERFORATED`, `GRANULAR`, `SET`, `FC_PROVIDED`, `UNKNOWN`, `NONE`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrepOwner": {
      "description": "In some situations, special preparations are required for items and this field reflects the owner of the preparations. Options include `AMAZON`, `SELLER` or `NONE`.",
      "enum": [
        "AMAZON",
        "SELLER",
        "NONE"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "AMAZON",
          "description": "Amazon provides the information."
        },
        {
          "value": "SELLER",
          "description": "Seller provides the information."
        },
        {
          "value": "NONE",
          "description": "No owner is required for the preparations."
        }
      ]
    },
    "Quote": {
      "description": "The estimated shipping cost associated with the transportation option.",
      "properties": {
        "cost": {
          "$ref": "#/definitions/Currency"
        },
        "expiration": {
          "description": "The timestamp at which this transportation option quote becomes no longer valid. This is based in ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "voidableUntil": {
          "description": "Voidable until timestamp.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "cost"
      ],
      "type": "object"
    },
    "ReasonComment": {
      "description": "Reason for cancelling or rescheduling a self-ship appointment.",
      "enum": [
        "APPOINTMENT_REQUESTED_BY_MISTAKE",
        "VEHICLE_DELAY",
        "SLOT_NOT_SUITABLE",
        "OUTSIDE_CARRIER_BUSINESS_HOURS",
        "UNFAVOURABLE_EXTERNAL_CONDITIONS",
        "PROCUREMENT_DELAY",
        "SHIPPING_PLAN_CHANGED",
        "INCREASED_QUANTITY",
        "OTHER"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "APPOINTMENT_REQUESTED_BY_MISTAKE",
          "description": "-"
        },
        {
          "value": "VEHICLE_DELAY",
          "description": "-"
        },
        {
          "value": "SLOT_NOT_SUITABLE",
          "description": "-"
        },
        {
          "value": "OUTSIDE_CARRIER_BUSINESS_HOURS",
          "description": "-"
        },
        {
          "value": "UNFAVOURABLE_EXTERNAL_CONDITIONS",
          "description": "-"
        },
        {
          "value": "PROCUREMENT_DELAY",
          "description": "-"
        },
        {
          "value": "SHIPPING_PLAN_CHANGED",
          "description": "-"
        },
        {
          "value": "INCREASED_QUANTITY",
          "description": "-"
        },
        {
          "value": "OTHER",
          "description": "-"
        }
      ]
    },
    "Region": {
      "description": "Representation of a location used within the inbounding experience.",
      "properties": {
        "countryCode": {
          "description": "ISO 3166 standard alpha-2 country code.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "state": {
          "description": "State.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "warehouseId": {
          "description": "An identifier for a warehouse, such as a FC, IXD, upstream storage.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestedUpdates": {
      "description": "Objects that were included in the update request.",
      "properties": {
        "boxes": {
          "description": "A list of boxes that will be present in the shipment after the update.",
          "items": {
            "$ref": "#/definitions/BoxUpdateInput"
          },
          "type": "array"
        },
        "items": {
          "description": "A list of all items that will be present in the shipment after the update.",
          "items": {
            "$ref": "#/definitions/ItemInput"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ScheduleSelfShipAppointmentRequest": {
      "description": "The `scheduleSelfShipAppointment` request.",
      "properties": {
        "reasonComment": {
          "$ref": "#/definitions/ReasonComment"
        }
      },
      "type": "object",
      "example": {
        "reasonComment": "OTHER"
      }
    },
    "ScheduleSelfShipAppointmentResponse": {
      "description": "The `scheduleSelfShipAppointment` response.",
      "properties": {
        "selfShipAppointmentDetails": {
          "$ref": "#/definitions/SelfShipAppointmentDetails"
        }
      },
      "required": [
        "selfShipAppointmentDetails"
      ],
      "type": "object",
      "example": {
        "selfShipAppointmentDetails": {
          "appointmentId": 1000,
          "appointmentSlotTime": {
            "endTime": "2023-03-09T13:15:30Z",
            "startTime": "2023-03-08T13:15:30Z"
          },
          "appointmentStatus": "ARRIVAL_SCHEDULED"
        }
      }
    },
    "SelectedDeliveryWindow": {
      "description": "Selected delivery window attributes.",
      "properties": {
        "availabilityType": {
          "description": "Identifies type of Delivery Window Availability. Values: `AVAILABLE`, `CONGESTED`",
          "type": "string"
        },
        "deliveryWindowOptionId": {
          "description": "Identifier of a delivery window option. A delivery window option represent one option for when a shipment is expected to be delivered.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "editableUntil": {
          "description": "The timestamp at which this Window can no longer be edited.",
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "description": "The end timestamp of the window.",
          "format": "date-time",
          "type": "string"
        },
        "startDate": {
          "description": "The start timestamp of the window.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "availabilityType",
        "deliveryWindowOptionId",
        "endDate",
        "startDate"
      ],
      "type": "object",
      "example": {
        "availabilityType": "AVAILABLE",
        "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678",
        "editableUntil": "2024-01-05T20:00:00.000Z",
        "endDate": "2024-01-05T20:00:00.000Z",
        "startDate": "2024-01-05T14:00:00.000Z"
      }
    },
    "SelfShipAppointmentDetails": {
      "description": "Appointment details for carrier pickup or fulfillment center appointments.",
      "properties": {
        "appointmentId": {
          "description": "Identifier for appointment.",
          "type": "number"
        },
        "appointmentSlotTime": {
          "$ref": "#/definitions/AppointmentSlotTime"
        },
        "appointmentStatus": {
          "description": "Status of the appointment.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SelfShipAppointmentSlotsAvailability": {
      "description": "The self ship appointment time slots availability and an expiration date for which the slots can be scheduled.",
      "properties": {
        "expiresAt": {
          "description": "The ISO 8601 datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.",
          "format": "date-time",
          "type": "string"
        },
        "slots": {
          "description": "List of appointment slots.",
          "items": {
            "$ref": "#/definitions/AppointmentSlot"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SetPackingInformationRequest": {
      "description": "The `setPackingInformation` request.",
      "properties": {
        "packageGroupings": {
          "description": "List of packing information for the inbound plan.",
          "items": {
            "$ref": "#/definitions/PackageGroupingInput"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "packageGroupings"
      ],
      "type": "object",
      "example": {
        "packageGroupings": [
          {
            "boxes": [
              {
                "boxId": "FBA10ABC0YY100001",
                "contentInformationSource": "BOX_CONTENT_PROVIDED",
                "dimensions": {
                  "height": 5,
                  "length": 3,
                  "unitOfMeasurement": "CM",
                  "width": 4
                },
                "items": [
                  {
                    "expiration": "2024-01-01",
                    "labelOwner": "AMAZON",
                    "manufacturingLotCode": "manufacturingLotCode",
                    "msku": "Sunglasses",
                    "prepOwner": "AMAZON",
                    "quantity": 10
                  }
                ],
                "quantity": 2,
                "weight": {
                  "unit": "KG",
                  "value": 5.5
                }
              }
            ],
            "packingGroupId": "pg1234abcd-1234-abcd-5678-1234abcd5678",
            "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678"
          }
        ]
      }
    },
    "SetPackingInformationResponse": {
      "description": "The `setPackingInformation` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "Shipment": {
      "description": "Contains information pertaining to a shipment in an inbound plan.",
      "properties": {
        "amazonReferenceId": {
          "description": "A unique identifier created by Amazon that identifies this Amazon-partnered, Less Than Truckload/Full Truckload (LTL/FTL) shipment.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactInformation"
        },
        "dates": {
          "$ref": "#/definitions/Dates"
        },
        "destination": {
          "$ref": "#/definitions/ShipmentDestination"
        },
        "freightInformation": {
          "$ref": "#/definitions/FreightInformation"
        },
        "name": {
          "description": "The name of the shipment.",
          "type": "string"
        },
        "placementOptionId": {
          "description": "The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "selectedDeliveryWindow": {
          "$ref": "#/definitions/SelectedDeliveryWindow"
        },
        "selectedTransportationOptionId": {
          "description": "Identifier of a transportation option. A transportation option represent one option for how to send a shipment.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "selfShipAppointmentDetails": {
          "description": "List of self ship appointment details.",
          "items": {
            "$ref": "#/definitions/SelfShipAppointmentDetails"
          },
          "type": "array"
        },
        "shipmentConfirmationId": {
          "description": "The confirmed shipment ID which shows up on labels (for example, `FBA1234ABCD`).",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "shipmentId": {
          "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/ShipmentSource"
        },
        "status": {
          "description": "The status of a shipment. The state of the shipment will typically start in `WORKING` and transition to `READY_TO_SHIP` once required actions are complete prior to being picked up or shipped out. Can be `ABANDONED`, `CANCELLED`, `CHECKED_IN`, `CLOSED`, `DELETED`, `DELIVERED`, `IN_TRANSIT`, `MIXED`, `READY_TO_SHIP`, `RECEIVING`, `SHIPPED`, or `WORKING`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "trackingDetails": {
          "$ref": "#/definitions/TrackingDetails"
        }
      },
      "required": [
        "destination",
        "placementOptionId",
        "shipmentId",
        "source"
      ],
      "type": "object",
      "example": {
        "destination": {
          "destinationType": "AMAZON_OPTIMIZED"
        },
        "freightInformation": {
          "declaredValue": {
            "amount": 5.5,
            "code": "CAD"
          },
          "freightClass": "FC_50"
        },
        "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
        "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
        "selectedDeliveryWindow": {
          "availabilityType": "AVAILABLE",
          "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678",
          "editableUntil": "2024-01-05T20:00:00.000Z",
          "endDate": "2024-01-05T20:00:00.000Z",
          "startDate": "2024-01-05T14:00:00.000Z"
        },
        "shipmentConfirmationId": "shipmentConfirmationId",
        "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
        "source": {
          "sourceType": "SELLER_FACILITY"
        }
      }
    },
    "ShipmentDestination": {
      "description": "The Amazon fulfillment center address and warehouse ID.",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The address the shipment should be sent to. Empty if the destination type is `AMAZON_OPTIMIZED`."
        },
        "destinationType": {
          "description": "The type of destination for this shipment. Can be: `AMAZON_OPTIMIZED`, `AMAZON_WAREHOUSE`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "warehouseId": {
          "description": "The warehouse that the shipment should be sent to. Empty if the destination type is `AMAZON_OPTIMIZED`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "destinationType"
      ],
      "type": "object"
    },
    "ShipmentSource": {
      "description": "Specifies the 'ship from' address for the shipment.",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "sourceType": {
          "description": "The type of source for this shipment. Can be: `SELLER_FACILITY`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "sourceType"
      ],
      "type": "object"
    },
    "ShipmentSummary": {
      "description": "Summary information about a shipment.",
      "properties": {
        "shipmentId": {
          "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "status": {
          "description": "The status of a shipment. The state of the shipment will typically start in `WORKING` and transition to `READY_TO_SHIP` once required actions are complete prior to being picked up or shipped out. Can be: `ABANDONED`, `CANCELLED`, `CHECKED_IN`, `CLOSED`, `DELETED`, `DELIVERED`, `IN_TRANSIT`, `MIXED`, `READY_TO_SHIP`, `RECEIVING`, `SHIPPED`, `WORKING`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "shipmentId",
        "status"
      ],
      "type": "object",
      "example": {
        "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
        "status": "SHIPPED"
      }
    },
    "ShipmentTransportationConfiguration": {
      "description": "Details needed to generate the transportation options.",
      "properties": {
        "contactInformation": {
          "$ref": "#/definitions/ContactInformation"
        },
        "freightInformation": {
          "$ref": "#/definitions/FreightInformation"
        },
        "pallets": {
          "description": "List of pallet configuration inputs.",
          "items": {
            "$ref": "#/definitions/PalletInput"
          },
          "type": "array"
        },
        "readyToShipWindow": {
          "$ref": "#/definitions/WindowInput",
          "description": "The range of dates within which the seller intends to ship their items. This is the pick-up date or 'ready to ship' date, not an estimated delivery date."
        },
        "shipmentId": {
          "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "readyToShipWindow",
        "shipmentId"
      ],
      "type": "object"
    },
    "ShippingConfiguration": {
      "description": "The shipping configurations supported for the packing option. Available modes are ground small parcel, freight less-than-truckload (LTL), freight full-truckload (FTL) palletized, freight FTL non-palletized, ocean less-than-container-load (LCL), ocean full-container load (FCL), air small parcel, and air small parcel express.",
      "properties": {
        "shippingMode": {
          "description": "Mode of shipment transportation that this option will provide. Can be: `GROUND_SMALL_PARCEL`, `FREIGHT_LTL`, `FREIGHT_FTL_PALLET`, `FREIGHT_FTL_NONPALLET`, `OCEAN_LCL`, `OCEAN_FCL`, `AIR_SMALL_PARCEL`, `AIR_SMALL_PARCEL_EXPRESS`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "shippingSolution": {
          "description": "Shipping program for the option. Can be: `AMAZON_PARTNERED_CARRIER`, `USE_YOUR_OWN_CARRIER`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpdTrackingDetail": {
      "description": "Contains information related to Small Parcel Delivery (SPD) shipment tracking.",
      "properties": {
        "spdTrackingItems": {
          "description": "List of Small Parcel Delivery (SPD) tracking items.",
          "items": {
            "$ref": "#/definitions/SpdTrackingItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SpdTrackingDetailInput": {
      "description": "Contains input information to update Small Parcel Delivery (SPD) tracking information.",
      "properties": {
        "spdTrackingItems": {
          "description": "List of Small Parcel Delivery (SPD) tracking items input.",
          "items": {
            "$ref": "#/definitions/SpdTrackingItemInput"
          },
          "type": "array"
        }
      },
      "required": [
        "spdTrackingItems"
      ],
      "type": "object",
      "example": {
        "spdTrackingItems": [
          {
            "boxId": "FBA10ABC0YY100001",
            "trackingId": "FBA10002000"
          }
        ]
      }
    },
    "SpdTrackingItem": {
      "description": "Contains information used to track and identify a Small Parcel Delivery (SPD) item.",
      "properties": {
        "boxId": {
          "description": "The ID provided by Amazon that identifies a given box. This ID is comprised of the external shipment ID (which is generated after transportation has been confirmed) and the index of the box.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "trackingId": {
          "description": "The tracking ID associated with each box in a non-Amazon partnered Small Parcel Delivery (SPD) shipment.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "trackingNumberValidationStatus": {
          "description": "Whether or not Amazon has validated the tracking number. If more than 24 hours have passed and the status is not yet 'VALIDATED', please verify the number and update if necessary. Can be: `VALIDATED`, `NOT_VALIDATED`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpdTrackingItemInput": {
      "description": "Small Parcel Delivery (SPD) tracking items input information.",
      "properties": {
        "boxId": {
          "description": "The ID provided by Amazon that identifies a given box. This ID is comprised of the external shipment ID (which is generated after transportation has been confirmed) and the index of the box.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "trackingId": {
          "description": "The tracking Id associated with each box in a non-Amazon partnered Small Parcel Delivery (SPD) shipment. The seller must provide this information.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "boxId",
        "trackingId"
      ],
      "type": "object",
      "example": {
        "boxId": "FBA10ABC0YY100001",
        "trackingId": "FBA10002000"
      }
    },
    "Stackability": {
      "description": "Indicates whether pallets will be stacked when carrier arrives for pick-up.",
      "enum": [
        "STACKABLE",
        "NON_STACKABLE"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "STACKABLE",
          "description": "A pallet that can be stacked on top of another pallet."
        },
        {
          "value": "NON_STACKABLE",
          "description": "A pallet that cannot be stacked on top of another pallet."
        }
      ]
    },
    "TaxDetails": {
      "description": "Information used to determine the tax compliance.",
      "properties": {
        "declaredValue": {
          "$ref": "#/definitions/Currency"
        },
        "hsnCode": {
          "description": "Harmonized System of Nomenclature code.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "taxRates": {
          "description": "List of tax rates.",
          "items": {
            "$ref": "#/definitions/TaxRate"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TaxRate": {
      "description": "Contains the type and rate of tax.",
      "properties": {
        "cessRate": {
          "description": "Rate of cess tax.",
          "type": "number"
        },
        "gstRate": {
          "description": "Rate of gst tax.",
          "type": "number"
        },
        "taxType": {
          "description": "Type of tax. Can be: `CGST`, `SGST`, `IGST`, `TOTAL_TAX`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TrackingDetails": {
      "description": "Tracking information for Less-Than-Truckload (LTL) and Small Parcel Delivery (SPD) shipments.",
      "properties": {
        "ltlTrackingDetail": {
          "$ref": "#/definitions/LtlTrackingDetail"
        },
        "spdTrackingDetail": {
          "$ref": "#/definitions/SpdTrackingDetail"
        }
      },
      "type": "object"
    },
    "TrackingDetailsInput": {
      "description": "Tracking information input for Less-Than-Truckload (LTL) and Small Parcel Delivery (SPD) shipments.",
      "properties": {
        "ltlTrackingDetail": {
          "$ref": "#/definitions/LtlTrackingDetailInput"
        },
        "spdTrackingDetail": {
          "$ref": "#/definitions/SpdTrackingDetailInput"
        }
      },
      "type": "object",
      "example": {
        "ltlTrackingDetail": {
          "billOfLadingNumber": "billOfLadingNumber",
          "freightBillNumber": [
            "freightBillNumber1"
          ]
        }
      }
    },
    "TransportationOption": {
      "description": "Contains information pertaining to a transportation option and the related carrier.",
      "properties": {
        "carrier": {
          "$ref": "#/definitions/Carrier"
        },
        "carrierAppointment": {
          "$ref": "#/definitions/CarrierAppointment"
        },
        "preconditions": {
          "description": "Identifies a list of preconditions for confirming the transportation option.",
          "items": {
            "description": "Identifies type of Transportation Option precondition. Values: `CONFIRMED_DELIVERY_WINDOW`",
            "type": "string"
          },
          "type": "array"
        },
        "quote": {
          "$ref": "#/definitions/Quote"
        },
        "shipmentId": {
          "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "shippingMode": {
          "description": "Mode of shipment transportation that this option will provide. Can be: `GROUND_SMALL_PARCEL`, `FREIGHT_LTL`, `FREIGHT_FTL_PALLET`, `FREIGHT_FTL_NONPALLET`, `OCEAN_LCL`, `OCEAN_FCL`, `AIR_SMALL_PARCEL`, `AIR_SMALL_PARCEL_EXPRESS`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "shippingSolution": {
          "description": "Shipping program for the option. Can be: `AMAZON_PARTNERED_CARRIER`, `USE_YOUR_OWN_CARRIER`.",
          "maxLength": 1024,
          "minLength": 1,
          "type": "string"
        },
        "transportationOptionId": {
          "description": "Identifier of a transportation option. A transportation option represent one option for how to send a shipment.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "carrier",
        "preconditions",
        "shipmentId",
        "shippingMode",
        "shippingSolution",
        "transportationOptionId"
      ],
      "type": "object",
      "example": {
        "carrier": {
          "alphaCode": "ABCD",
          "name": "Carrier Name"
        },
        "carrierAppointment": {
          "endTime": "2024-01-06T14:48:00.000Z",
          "startTime": "2024-01-05T14:48:00.000Z"
        },
        "preconditions": [
          "CONFIRMED_DELIVERY_WINDOW"
        ],
        "quote": {
          "cost": {
            "amount": 5.5,
            "code": "CAD"
          },
          "expiration": "2024-01-06T14:48:00.000Z",
          "voidableUntil": "2024-01-05T14:48:00.000Z"
        },
        "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
        "shippingMode": "GROUND_SMALL_PARCEL",
        "shippingSolution": "AMAZON_PARTNERED_CARRIER",
        "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678"
      }
    },
    "TransportationSelection": {
      "description": "The transportation option selected to confirm.",
      "properties": {
        "contactInformation": {
          "$ref": "#/definitions/ContactInformation"
        },
        "shipmentId": {
          "description": "Shipment ID that the transportation Option is for.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        },
        "transportationOptionId": {
          "description": "Transportation option being selected for the provided shipment.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "shipmentId",
        "transportationOptionId"
      ],
      "type": "object"
    },
    "UnitOfMeasurement": {
      "description": "Unit of linear measure.",
      "enum": [
        "IN",
        "CM"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "IN",
          "description": "Inches."
        },
        {
          "value": "CM",
          "description": "Centimeters."
        }
      ]
    },
    "UnitOfWeight": {
      "description": "Unit of the weight being measured.",
      "enum": [
        "LB",
        "KG"
      ],
      "type": "string",
      "x-docgen-enum-table-extension": [
        {
          "value": "LB",
          "description": "Pounds."
        },
        {
          "value": "KG",
          "description": "Kilograms."
        }
      ]
    },
    "UpdateInboundPlanNameRequest": {
      "description": "The `updateInboundPlanName` request.",
      "properties": {
        "name": {
          "description": "A human-readable name to update the inbound plan name to.",
          "maxLength": 40,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object",
      "example": {
        "name": "name"
      }
    },
    "UpdateItemComplianceDetailsRequest": {
      "description": "The `updateItemComplianceDetails` request.",
      "properties": {
        "msku": {
          "description": "The merchant SKU, a merchant-supplied identifier for a specific SKU.",
          "maxLength": 40,
          "minLength": 1,
          "type": "string"
        },
        "taxDetails": {
          "$ref": "#/definitions/TaxDetails"
        }
      },
      "required": [
        "msku",
        "taxDetails"
      ],
      "type": "object",
      "example": {
        "msku": "Sunglasses",
        "taxDetails": {
          "declaredValue": {
            "amount": 5.5,
            "code": "CAD"
          },
          "hsnCode": "hsnCode"
        }
      }
    },
    "UpdateItemComplianceDetailsResponse": {
      "description": "The `updateItemComplianceDetails` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "UpdateShipmentNameRequest": {
      "description": "The `updateShipmentName` request.",
      "properties": {
        "name": {
          "description": "A human-readable name to update the shipment name to.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object",
      "example": {
        "name": "name"
      }
    },
    "UpdateShipmentSourceAddressRequest": {
      "description": "The `UpdateShipmentSourceAddress` request.",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressInput"
        }
      },
      "required": [
        "address"
      ],
      "type": "object",
      "example": {
        "address": {
          "addressLine1": "123 example street",
          "addressLine2": "Floor 19",
          "city": "Toronto",
          "companyName": "Acme",
          "countryCode": "CA",
          "email": "email@email.com",
          "name": "name",
          "phoneNumber": "1234567890",
          "postalCode": "M1M1M1",
          "stateOrProvinceCode": "ON"
        }
      }
    },
    "UpdateShipmentSourceAddressResponse": {
      "description": "The `UpdateShipmentSourceAddress` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "UpdateShipmentTrackingDetailsRequest": {
      "description": "The `updateShipmentTrackingDetails` request.",
      "properties": {
        "trackingDetails": {
          "$ref": "#/definitions/TrackingDetailsInput"
        }
      },
      "required": [
        "trackingDetails"
      ],
      "type": "object",
      "example": {
        "trackingDetails": {
          "spdTrackingDetail": {
            "spdTrackingItems": [
              {
                "boxId": "FBA10ABC0YY100001",
                "trackingId": "FBA10002000"
              }
            ]
          }
        }
      }
    },
    "UpdateShipmentTrackingDetailsResponse": {
      "description": "The `updateShipmentTrackingDetails` response.",
      "properties": {
        "operationId": {
          "description": "UUID for the given operation.",
          "maxLength": 38,
          "minLength": 36,
          "pattern": "^[a-zA-Z0-9-]*$",
          "type": "string"
        }
      },
      "required": [
        "operationId"
      ],
      "type": "object"
    },
    "Weight": {
      "description": "The weight of a package.",
      "properties": {
        "unit": {
          "$ref": "#/definitions/UnitOfWeight"
        },
        "value": {
          "description": "Value of a weight.",
          "maximum": 100000,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "unit",
        "value"
      ],
      "type": "object"
    },
    "Window": {
      "description": "Contains a start and end DateTime representing a time range.",
      "properties": {
        "editableUntil": {
          "description": "The timestamp at which this Window can no longer be edited.",
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "description": "The end timestamp of the window.",
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "description": "The start timestamp of the window.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "end",
        "start"
      ],
      "type": "object",
      "example": {
        "editableUntil": "2024-01-05T20:00:00.000Z",
        "end": "2024-01-05T20:00:00.000Z",
        "start": "2024-01-05T14:00:00.000Z"
      }
    },
    "WindowInput": {
      "description": "Contains only a starting DateTime.",
      "properties": {
        "start": {
          "description": "The start date of the window. The time component must be zero.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "start"
      ],
      "type": "object"
    }
  },
  "x-components": {}
}