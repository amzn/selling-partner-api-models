{
  "swagger": "2.0",
  "info": {
    "description": "The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.",
    "version": "v0",
    "title": "Selling Partner API for Fulfillment Inbound",
    "contact": {
      "name": "Selling Partner API Developer Support",
      "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
    },
    "license": {
      "name": "Apache License 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "sellingpartnerapi-na.amazon.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/fba/inbound/v0/prepInstructions": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon's fulfillment network.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPrepInstructions",
        "parameters": [
          {
            "name": "ShipToCountryCode",
            "in": "query",
            "description": "The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.",
            "required": true,
            "type": "string",
            "format": "[A-Z]{2}"
          },
          {
            "name": "SellerSKUList",
            "in": "query",
            "description": "A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon's fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.\n\nNote: Include seller SKUs that you have used to list items on Amazon's retail website. If you include a seller SKU that you have never used to list an item on Amazon's retail website, the seller SKU is returned in the InvalidSKUList property in the response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          },
          {
            "name": "ASINList",
            "in": "query",
            "description": "A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.\n\nNote: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "ShipToCountryCode": {
                        "value": "US"
                      },
                      "ASINList": {
                        "value": [
                          "ASIN1"
                        ]
                    }
                  }
                },
                "response": {
                  "payload": {
                    "SKUPrepInstructionsList": [
                      {
                        "SellerSKU": "SellerSKU",
                        "ASIN": "ASIN1",
                        "BarcodeInstruction": "RequiresFNSKULabel",
                        "PrepGuidance": "ConsultHelpDocuments",
                        "PrepInstructionList": [
                          "Polybagging"
                        ],
                        "AmazonPrepFeesDetailsList": [
                          {
                            "PrepInstruction": "Polybagging",
                            "FeePerUnit": {
                              "CurrencyCode": "USD",
                              "Value": 10
                            }
                          }
                        ]
                      }
                    ],
                    "InvalidSKUList": [
                      {
                        "SellerSKU": "SellerSKU",
                        "ErrorReason": "DoesNotExist"
                      }
                    ],
                    "ASINPrepInstructionsList": [
                      {
                        "ASIN": "ASIN1",
                        "BarcodeInstruction": "RequiresFNSKULabel",
                        "PrepGuidance": "ConsultHelpDocuments",
                        "PrepInstructionList": [
                          "Polybagging"
                        ]
                      }
                    ],
                    "InvalidASINList": [
                      {
                        "ASIN": "ASIN1",
                        "ErrorReason": "DoesNotExist"
                      }
                    ]
                  }
                }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "ShipToCountryCode": {
                        "value": "US"
                      },
                      "ASINList": {
                        "value": [
                          "BADASIN"
                        ]
                    }
                  }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/labels": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getLabels",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "PageType",
            "in": "query",
            "description": "The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.",
            "required": true,
            "type": "string",
            "enum": [
              "PackageLabel_Letter_2",
              "PackageLabel_Letter_4",
              "PackageLabel_Letter_6",
              "PackageLabel_Letter_6_CarrierLeft",
              "PackageLabel_A4_2",
              "PackageLabel_A4_4",
              "PackageLabel_Plain_Paper",
              "PackageLabel_Plain_Paper_CarrierBottom",
              "PackageLabel_Thermal",
              "PackageLabel_Thermal_Unified",
              "PackageLabel_Thermal_NonPCP",
              "PackageLabel_Thermal_No_Carrier_Rotation"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "PackageLabel_Letter_2",
                "description": "Two labels per US Letter label sheet. This is the only valid value for Amazon-partnered shipments in the US that use United Parcel Service (UPS) as the carrier. Supported in Canada and the US."
              },
              {
                "value": "PackageLabel_Letter_4",
                "description": "Four labels per US Letter label sheet. This is the only valid value for non-Amazon-partnered shipments in the US. Supported in Canada and the US."
              },
              {
                "value": "PackageLabel_Letter_6",
                "description": "Six labels per US Letter label sheet. This is the only valid value for non-Amazon-partnered shipments in the US. Supported in Canada and the US."
              },
              {
                "value": "PackageLabel_Letter_6_CarrierLeft",
                "description": "PackageLabel_Letter_6_CarrierLeft"
              },
              {
                "value": "PackageLabel_A4_2",
                "description": "Two labels per A4 label sheet."
              },
              {
                "value": "PackageLabel_A4_4",
                "description": "Four labels per A4 label sheet."
              },
              {
                "value": "PackageLabel_Plain_Paper",
                "description": "One label per sheet of US Letter paper. Only for non-Amazon-partnered shipments. "
              },
              {
                "value": "PackageLabel_Plain_Paper_CarrierBottom",
                "description": "PackageLabel_Plain_Paper_CarrierBottom"
              },
              {
                "value": "PackageLabel_Thermal",
                "description": "For use of a thermal printer. Supports Amazon-partnered shipments with UPS."
              },
              {
                "value": "PackageLabel_Thermal_Unified",
                "description": "For use of a thermal printer. Supports shipments with ATS."
              },
              {
                "value": "PackageLabel_Thermal_NonPCP",
                "description": "For use of a thermal printer. Supports non-Amazon-partnered shipments."
              },
              {
                "value": "PackageLabel_Thermal_No_Carrier_Rotation",
                "description": "For use of a thermal printer. Supports Amazon-partnered shipments with DHL."
              }
            ]
          },
          {
            "name": "LabelType",
            "in": "query",
            "description": "The type of labels requested. ",
            "required": true,
            "type": "string",
            "enum": [
              "BARCODE_2D",
              "UNIQUE",
              "PALLET"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "BARCODE_2D",
                "description": "This option is provided only for shipments where 2D Barcodes will be applied to all packages. Amazon strongly recommends using the UNIQUE option to get package labels instead of the BARCODE_2D option."
              },
              {
                "value": "UNIQUE",
                "description": "Document data for printing unique shipping labels and carrier labels for an inbound shipment."
              },
              {
                "value": "PALLET",
                "description": "Document data for printing pallet labels for a Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment."
              }
            ]
          },
          {
            "name": "NumberOfPackages",
            "in": "query",
            "description": "The number of packages in the shipment.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "PackageLabelsToPrint",
            "in": "query",
            "description": "A list of identifiers that specify packages for which you want package labels printed.\n\nIf you provide box content information with the [FBA Inbound Shipment Carton Information Feed](https://developer-docs.amazon.com/sp-api/docs/fulfillment-by-amazon-feed-type-values#fba-inbound-shipment-carton-information-feed), then `PackageLabelsToPrint` must match the `CartonId` values you provide through that feed. If you provide box content information with the Fulfillment Inbound API v2024-03-20, then `PackageLabelsToPrint` must match the `boxID` values from the [`listShipmentBoxes`](https://developer-docs.amazon.com/sp-api/docs/fulfillment-inbound-api-v2024-03-20-reference#listshipmentboxes) response. If these values do not match as required, the operation returns the `IncorrectPackageIdentifier` error code.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "NumberOfPallets",
            "in": "query",
            "description": "The number of pallets in the shipment. This returns four identical labels for each pallet.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "PageSize",
            "description": "The page size for paginating through the total packages' labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "PageStartIndex",
            "description": "The page start index for paginating through the total packages' labels. This is a required parameter for Non-Partnered LTL Shipments.",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "348975493"
                      },
                      "PageType": {
                        "value": "PackageLabel_Letter_2"
                      },
                      "LabelType": {
                        "value": "BARCODE_2D"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "DownloadURL": "http://www.labels.url.com"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BADVALUE"
                      },
                      "PageType": {
                        "value": "PackageLabel_Letter_2"
                      },
                      "LabelType": {
                      "value": "BARCODE_2D"
                    }
                  }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/billOfLading": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getBillOfLading",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "DownloadURL": "http://bill-of.lading.url.com"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "badid1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a list of inbound shipments based on criteria that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipments",
        "parameters": [
          {
            "name": "ShipmentStatusList",
            "in": "query",
            "description": "A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "WORKING",
                "READY_TO_SHIP",
                "SHIPPED",
                "RECEIVING",
                "CANCELLED",
                "DELETED",
                "CLOSED",
                "ERROR",
                "IN_TRANSIT",
                "DELIVERED",
                "CHECKED_IN"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "WORKING",
                  "description": "The shipment was created by the seller, but has not yet shipped."
                },
                {
                  "value": "READY_TO_SHIP",
                  "description": "The seller has printed box labels (for Small parcel shipments) or pallet labels (for Less Than Truckload shipments)."
                },
                {
                  "value": "SHIPPED",
                  "description": "The shipment was picked up by the carrier."
                },
                {
                  "value": "RECEIVING",
                  "description": "The shipment has arrived at the fulfillment center, but not all items have been marked as received."
                },
                {
                  "value": "CANCELLED",
                  "description": "The shipment was cancelled by the seller after the shipment was sent to the fulfillment center."
                },
                {
                  "value": "DELETED",
                  "description": "The shipment was cancelled by the seller before the shipment was sent to the  fulfillment center."
                },
                {
                  "value": "CLOSED",
                  "description": "The shipment has arrived at the fulfillment center and all items have been marked as received."
                },
                {
                  "value": "ERROR",
                  "description": "There was an error with the shipment and it was not processed by Amazon."
                },
                {
                  "value": "IN_TRANSIT",
                  "description": "The carrier has notified the fulfillment center that it is aware of the shipment."
                },
                {
                  "value": "DELIVERED",
                  "description": "The shipment was delivered by the carrier to the fulfillment center."
                },
                {
                  "value": "CHECKED_IN",
                  "description": "The shipment was checked-in at the receiving dock of the fulfillment center."
                }
              ]
            }
          },
          {
            "name": "ShipmentIdList",
            "in": "query",
            "description": "A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 999
          },
          {
            "name": "LastUpdatedAfter",
            "in": "query",
            "description": "A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "LastUpdatedBefore",
            "in": "query",
            "description": "A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "QueryType",
            "in": "query",
            "description": "Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.",
            "required": true,
            "type": "string",
            "enum": [
              "SHIPMENT",
              "DATE_RANGE",
              "NEXT_TOKEN"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "SHIPMENT",
                "description": "Returns shipments based on the shipment information provided by the ShipmentStatusList or ShipmentIdList parameters."
              },
              {
                "value": "DATE_RANGE",
                "description": "Returns shipments based on the date range information provided by the LastUpdatedAfter and LastUpdatedBefore parameters."
              },
              {
                "value": "NEXT_TOKEN",
                "description": "Returns shipments by using NextToken to continue returning items specified in a previous request."
              }
            ]
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response to your previous request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace where the product would be stored.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "SHIPMENT"
                      }
                    }
                },
                "response": {
                  "payload": {
                    "ShipmentData": [
                      {
                        "ShipmentId": "FBA15DJ9S3J5",
                        "ShipmentName": "FBA (2/11/20, 11:18 AM) - 1",
                        "ShipFromAddress": {
                          "Name": "vungu+naperfectUS",
                          "AddressLine1": "501 Fairview Ave N",
                          "City": "Seattle",
                          "StateOrProvinceCode": "WA",
                          "CountryCode": "US",
                          "PostalCode": "98109"
                        },
                        "DestinationFulfillmentCenterId": "MKC6",
                        "ShipmentStatus": "SHIPPED",
                        "LabelPrepType": "SELLER_LABEL",
                        "BoxContentsSource": "INTERACTIVE"
                      }
                    ],
                    "NextToken": "AAAAAAAAAADwtRhfSFJXzbRgKc+wYysmXwEAAAAAAACLuoztkDYG/ClQt9ELs4kYW6MrmpJdFf1QQYk6hSIZSsy5ipek26YvTwmkD9i4cbQny1EWwuuU88wghPxa7770q5R+YYCuP4pYWVy3AVAzWzAib6BRlDr4B0msx6sOKcYCy6ms4J021964JOS9nZhRBGfJ86d96S91rhJPli55+r7Jp+VHPly2FCJ2mAuC53sGTsNP108IUuPdbZqq2myWZ5U+EggLjhRBvXhHFFxRclETG7XfyX46A9nCKKhJYEjDFmMPQoQPtqSuxtMAUMDLPs4MttashstL96Oiu79VYhjV84L13mdMNZS6g21HKgU5E6CDivHvsgS5kC7joXHrXGjwpXMeLcfJqwg+DocBFiU2NELMEbfksrIGXVVjFqiLxHtTiDBsuDxDLbYeVepW0E9oA/ppbZJK4c0nDbgT3WSxxfsgpmAZ42O6iVMhW/KVlJZFDjKsmmHATcq5S5c="
                  }
                }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "BADATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "BADSHIPMENT"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/items": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a list of items in a specified inbound shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipmentItemsByShipmentId",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier used for selecting items in a specific inbound shipment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "Deprecated. Do not use.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "shipmentId": {
                        "value": "FBA15DJ9SVVD"
                      }
                    }
                },
                "response": {
                  "payload": {
                    "ItemData": [
                      {
                        "ShipmentId": "FBA15DF2763D",
                        "SellerSKU": "CR-47K6-H6QN",
                        "FulfillmentNetworkSKU": "X0014BIZ8T",
                        "QuantityShipped": 4,
                        "QuantityReceived": 0,
                        "QuantityInCase": 0,
                        "ReleaseDate": "2013-05-29",
                        "PrepDetailsList": [
                          {
                            "PrepInstruction": "Labeling",
                            "PrepOwner": "SELLER"
                          },
                          {
                            "PrepInstruction": "Polybagging",
                            "PrepOwner": "SELLER"
                          }
                        ]
                      }
                    ],
                    "NextToken": "AAAAAAAAAABtqoY6CcWi1L8mJB7Nnt2gaQEAAAAAAAD6ehPTas9PliWJK6+QPwRpOgJJTgQphGOQ+9o1k7PBrBe5GrNyGDQYBmz2D4yDT4FVSHVhpbKi8Mgrw3tfRTLrkcMQOn5CvEySS5ePVzv8WhjCDxM9FGwBzoeDWLKx9OEy29XlAFkeBdwaxOAxEMF97uQkxGhUQS5sGeXdSAXNXMgCoOXMgw+JlsgzIq3Byt/yObIt8z9T0GPk440bqiQZl3ceVEiLX2g2LAa5qNwJBtCgYtizJsYSu/tX9zbR0Fe13bSqTOUEAXykYvQSTYCbuEPC3UFukVLobuP0lW+WZzZxcbWRxEzBTHnlgorzdsCc4cBnWVhTdp5nxTPeiYGbda9KilRFXtVl1vgXCHq5npDNV9yULsgjAqFPDBaz8YMlKoJgCe2E1GmbHzenJW21IHcIo3gtmujx+ib3Y9j23SwCfEbsUR9OrFNvGxiZ0VS7qYzm+fvElsU9jBx1PFrOigHnGD71Yq+y"
                  }
                }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "BADATVPDKIKX0DER"
                      },
                      "shipmentId": {
                        "value": "BADFBA15DJ9SVVD"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipmentItems": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipmentItems",
        "parameters": [
          {
            "name": "LastUpdatedAfter",
            "in": "query",
            "description": "A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "LastUpdatedBefore",
            "in": "query",
            "description": "A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "QueryType",
            "in": "query",
            "description": "Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.",
            "required": true,
            "type": "string",
            "enum": [
              "DATE_RANGE",
              "NEXT_TOKEN"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "DATE_RANGE",
                "description": "Returns items based on the date range information provided by the LastUpdatedAfter and LastUpdatedBefore parameters."
              },
              {
                "value": "NEXT_TOKEN",
                "description": "Returns items by using NextToken to continue returning items specified in a previous request."
              }
            ]
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response to your previous request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace where the product would be stored.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "SHIPMENT"
                      },
                      "NextToken": {
                      "value": "NextToken"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "ItemData": [
                      {
                        "ShipmentId": "FBA15DF2763D",
                        "SellerSKU": "CR-47K6-H6QN",
                        "FulfillmentNetworkSKU": "X0014BIZ8T",
                        "QuantityShipped": 4,
                        "QuantityReceived": 0,
                        "QuantityInCase": 0,
                        "ReleaseDate": "2013-05-29",
                        "PrepDetailsList": [
                          {
                            "PrepInstruction": "Labeling",
                            "PrepOwner": "SELLER"
                          },
                          {
                            "PrepInstruction": "Polybagging",
                            "PrepOwner": "SELLER"
                          }
                        ]
                      }
                    ],
                    "NextToken": "AAAAAAAAAABtqoY6CcWi1L8mJB7Nnt2gaQEAAAAAAAD6ehPTas9PliWJK6QPwRpOgJJTgQphGOQ9o1k7PBrBe5GrNyGDQYBmz2D4yDT4FVSHVhpbKi8Mgrw3tfRTLrkcMQOn5CvEySS5ePVzv8WhjCDxM9FGwBzoeDWLKx9OEy29XlAFkeBdwaxOAxEMF97uQkxGhUQS5sGeXdSAXNXMgCoOXMgwJlsgzIq3BytyObIt8z9T0GPk440bqiQZl3ceVEiLX2g2LAa5qNwJBtCgYtizJsYSutX9zbR0Fe13bSqTOUEAXykYvQSTYCbuEPC3UFukVLobuP0lWWZzZxcbWRxEzBTHnlgorzdsCc4cBnWVhTdp5nxTPeiYGbda9KilRFXtVl1vgXCHq5npDNV9yULsgjAqFPDBaz8YMlKoJgCe2E1GmbHzenJW21IHcIo3gtmujxib3Y9j23SwCfEbsUR9OrFNvGxiZ0VS7qYzmfvElsU9jBx1PFrOigHnGD71Yq"
                  }
                }
              },
              {
                "request": {
                  "parameters": {
                    "MarketplaceId": {
                      "value": "ATVPDKIKX0DER"
                    },
                    "QueryType": {
                      "value": "SHIPMENT"
                    },
                    "NextToken": {
                      "value": "AAAAAAAAAABtqoY6CcWi1L8mJB7Nnt2gaQEAAAAAAAD6ehPTas9PliWJK6QPwRpOgJJTgQphGOQ9o1k7PBrBe5GrNyGDQYBmz2D4yDT4FVSHVhpbKi8Mgrw3tfRTLrkcMQOn5CvEySS5ePVzv8WhjCDxM9FGwBzoeDWLKx9OEy29XlAFkeBdwaxOAxEMF97uQkxGhUQS5sGeXdSAXNXMgCoOXMgwJlsgzIq3BytyObIt8z9T0GPk440bqiQZl3ceVEiLX2g2LAa5qNwJBtCgYtizJsYSutX9zbR0Fe13bSqTOUEAXykYvQSTYCbuEPC3UFukVLobuP0lWWZzZxcbWRxEzBTHnlgorzdsCc4cBnWVhTdp5nxTPeiYGbda9KilRFXtVl1vgXCHq5npDNV9yULsgjAqFPDBaz8YMlKoJgCe2E1GmbHzenJW21IHcIo3gtmujxib3Y9j23SwCfEbsUR9OrFNvGxiZ0VS7qYzmfvElsU9jBx1PFrOigHnGD71Yq"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "ItemData": [
                      {
                        "ShipmentId": "FBA15DF2763D",
                        "SellerSKU": "CR-47K6-H6QN",
                        "FulfillmentNetworkSKU": "X0014BIZ8T",
                        "QuantityShipped": 4,
                        "QuantityReceived": 0,
                        "QuantityInCase": 0,
                        "ReleaseDate": "2013-05-29",
                        "PrepDetailsList": [
                          {
                            "PrepInstruction": "Labeling",
                            "PrepOwner": "SELLER"
                          },
                          {
                            "PrepInstruction": "Polybagging",
                            "PrepOwner": "SELLER"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "BADATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "BADSHIPMENT"
                      },
                      "NextToken": {
                      "value": "BADNextToken"
                    }
                  }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "An error code that identifies the type of error that occured."
        },
        "message": {
          "type": "string",
          "description": "A message that describes the error condition in a human-readable form."
        },
        "details": {
          "type": "string",
          "description": "Additional details that can help the caller understand or fix the issue."
        }
      },
      "description": "Error response returned when the request is unsuccessful."
    },
    "ErrorList": {
      "type": "array",
      "description": "A list of error responses returned when a request is unsuccessful.",
      "items": {
        "$ref": "#/definitions/Error"
      }
    },
    "ASINPrepInstructions": {
      "type": "object",
      "properties": {
        "ASIN": {
          "type": "string",
          "description": "The Amazon Standard Identification Number (ASIN) of the item."
        },
        "BarcodeInstruction": {
          "$ref": "#/definitions/BarcodeInstruction"
        },
        "PrepGuidance": {
          "$ref": "#/definitions/PrepGuidance"
        },
        "PrepInstructionList": {
          "$ref": "#/definitions/PrepInstructionList"
        }
      },
      "description": "Item preparation instructions to help with item sourcing decisions."
    },
    "ASINPrepInstructionsList": {
      "type": "array",
      "description": "A list of item preparation instructions.",
      "items": {
        "$ref": "#/definitions/ASINPrepInstructions"
      }
    },
    "Address": {
      "type": "object",
      "description": "Specific details to identify a place.",
      "required": [
        "AddressLine1",
        "City",
        "CountryCode",
        "Name",
        "PostalCode",
        "StateOrProvinceCode"
      ],
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the individual or business.",
          "maxLength": 50
        },
        "AddressLine1": {
          "type": "string",
          "description": "The street address information.",
          "maxLength": 180
        },
        "AddressLine2": {
          "type": "string",
          "description": "Additional street address information, if required.",
          "maxLength": 60
        },
        "DistrictOrCounty": {
          "type": "string",
          "description": "The district or county.",
          "maxLength": 25
        },
        "City": {
          "type": "string",
          "description": "The city.",
          "maxLength": 30
        },
        "StateOrProvinceCode": {
          "type": "string",
          "description": "The state or province code.\n\nIf state or province codes are used in your marketplace, it is recommended that you include one with your request. This helps Amazon to select the most appropriate Amazon fulfillment center for your inbound shipment plan."
        },
        "CountryCode": {
          "type": "string",
          "description": "The country code in two-character ISO 3166-1 alpha-2 format."
        },
        "PostalCode": {
          "type": "string",
          "description": "The postal code.\n\nIf postal codes are used in your marketplace, we recommended that you include one with your request. This helps Amazon select the most appropriate Amazon fulfillment center for the inbound shipment plan.",
          "maxLength": 30
        }
      }
    },
    "AmazonPrepFeesDetails": {
      "type": "object",
      "properties": {
        "PrepInstruction": {
          "$ref": "#/definitions/PrepInstruction"
        },
        "FeePerUnit": {
          "description": "The fee for Amazon to prepare 1 unit.",
          "$ref": "#/definitions/Amount"
        }
      },
      "description": "The fees for Amazon to prep goods for shipment."
    },
    "AmazonPrepFeesDetailsList": {
      "type": "array",
      "description": "A list of preparation instructions and fees for Amazon to prep goods for shipment.",
      "items": {
        "$ref": "#/definitions/AmazonPrepFeesDetails"
      }
    },
    "Amount": {
      "type": "object",
      "required": [
        "CurrencyCode",
        "Value"
      ],
      "properties": {
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "Value": {
          "description": "The amount.",
          "$ref": "#/definitions/BigDecimalType"
        }
      },
      "description": "The monetary value."
    },
    "BarcodeInstruction": {
      "type": "string",
      "description": "Labeling requirements for the item. For more information about FBA labeling requirements, see the Seller Central Help for your marketplace.",
      "enum": [
        "RequiresFNSKULabel",
        "CanUseOriginalBarcode",
        "MustProvideSellerSKU"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "RequiresFNSKULabel",
          "description": "Indicates that a scannable FBA product label must be applied to the item. Cover any original bar codes on the item."
        },
        {
          "value": "CanUseOriginalBarcode",
          "description": "Indicates that the item does not require a scannable FBA product label. The original manufacturer's bar code can be used."
        },
        {
          "value": "MustProvideSellerSKU",
          "description": "Amazon is unable to return labeling requirements. To get labeling requirements for items, call the getPrepInstructions operation."
        }
      ]
    },
    "BigDecimalType": {
      "type": "number",
      "format": "double",
      "description": "Number format that supports decimal."
    },
    "BoxContentsFeeDetails": {
      "type": "object",
      "properties": {
        "TotalUnits": {
          "description": "The number of units to ship.",
          "$ref": "#/definitions/Quantity"
        },
        "FeePerUnit": {
          "description": "The manual processing fee per unit.",
          "$ref": "#/definitions/Amount"
        },
        "TotalFee": {
          "description": "The total manual processing fee for the shipment.",
          "$ref": "#/definitions/Amount"
        }
      },
      "description": "The manual processing fee per unit and total fee for a shipment."
    },
    "BoxContentsSource": {
      "type": "string",
      "description": "Where the seller provided box contents information for a shipment.",
      "enum": [
        "NONE",
        "FEED",
        "2D_BARCODE",
        "INTERACTIVE"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "NONE",
          "description": "There is no box contents information for this shipment. Amazon will manually process the box contents information. This may incur a fee."
        },
        {
          "value": "FEED",
          "description": "Box contents information is provided through the _POST_FBA_INBOUND_CARTON_CONTENTS_ feed."
        },
        {
          "value": "2D_BARCODE",
          "description": "Box contents information is provided by a barcode on the shipment. For more information, see Using 2D barcodes for box content information on Seller Central."
        },
        {
          "value": "INTERACTIVE",
          "description": "Box contents information is provided by an interactive source, such as a web tool."
        }
      ]
    },
    "CurrencyCode": {
      "type": "string",
      "description": "The currency code.",
      "enum": [
        "USD",
        "GBP"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "USD",
          "description": "United States Dollar."
        },
        {
          "value": "GBP",
          "description": "British pound sterling."
        }
      ]
    },
    "DateStringType": {
      "type": "string",
      "format": "date",
      "description": "Type containing date in string format"
    },
    "ErrorReason": {
      "type": "string",
      "description": "The reason that the ASIN is invalid.",
      "enum": [
        "DoesNotExist",
        "InvalidASIN"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "DoesNotExist",
          "description": "Indicates that the ASIN is not included in the Amazon product catalog for any of the marketplaces that the seller participates in."
        },
        {
          "value": "InvalidASIN",
          "description": "The ASIN is invalid."
        }
      ]
    },
    "GetBillOfLadingResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the getBillOfLading operation.",
          "$ref": "#/definitions/BillOfLadingDownloadURL"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getBillOfLading operation."
    },
    "LabelDownloadURL": {
      "type": "object",
      "properties": {
        "DownloadURL": {
          "type": "string",
          "description": "URL to download the label for the package. Note: The URL will only be valid for 15 seconds"
        }
      },
      "description": "Download URL for a label"
    },
    "BillOfLadingDownloadURL": {
      "type": "object",
      "properties": {
        "DownloadURL": {
          "type": "string",
          "description": "URL to download the bill of lading for the package. Note: The URL will only be valid for 15 seconds"
        }
      },
      "description": "Download URL for the bill of lading."
    },
    "GetLabelsResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the getLabels operation.",
          "$ref": "#/definitions/LabelDownloadURL"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getLabels operation."
    },
    "GetPrepInstructionsResult": {
      "type": "object",
      "properties": {
        "SKUPrepInstructionsList": {
          "$ref": "#/definitions/SKUPrepInstructionsList"
        },
        "InvalidSKUList": {
          "$ref": "#/definitions/InvalidSKUList"
        },
        "ASINPrepInstructionsList": {
          "$ref": "#/definitions/ASINPrepInstructionsList"
        },
        "InvalidASINList": {
          "$ref": "#/definitions/InvalidASINList"
        }
      },
      "description": "Result for the get prep instructions operation"
    },
    "GetPrepInstructionsResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the getPrepInstructions operation.",
          "$ref": "#/definitions/GetPrepInstructionsResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getPrepInstructions operation."
    },
    "InboundShipmentInfo": {
      "type": "object",
      "required": [
        "AreCasesRequired",
        "ShipFromAddress"
      ],
      "properties": {
        "ShipmentId": {
          "type": "string",
          "description": "The shipment identifier submitted in the request."
        },
        "ShipmentName": {
          "type": "string",
          "description": "The name for the inbound shipment."
        },
        "ShipFromAddress": {
          "description": "The return address.",
          "$ref": "#/definitions/Address"
        },
        "DestinationFulfillmentCenterId": {
          "type": "string",
          "description": "An Amazon fulfillment center identifier created by Amazon."
        },
        "ShipmentStatus": {
          "$ref": "#/definitions/ShipmentStatus"
        },
        "LabelPrepType": {
          "$ref": "#/definitions/LabelPrepType"
        },
        "AreCasesRequired": {
          "type": "boolean",
          "description": "Indicates whether or not an inbound shipment contains case-packed boxes. When AreCasesRequired = true for an inbound shipment, all items in the inbound shipment must be case packed."
        },
        "ConfirmedNeedByDate": {
          "description": "Date by which the shipment must arrive at the Amazon fulfillment center to avoid delivery promise breaks for pre-ordered items.",
          "$ref": "#/definitions/DateStringType"
        },
        "BoxContentsSource": {
          "$ref": "#/definitions/BoxContentsSource"
        },
        "EstimatedBoxContentsFee": {
          "description": "An estimate of the manual processing fee charged by Amazon for boxes without box content information. This is only returned when BoxContentsSource is NONE.",
          "$ref": "#/definitions/BoxContentsFeeDetails"
        }
      },
      "description": "Information about the seller's inbound shipments. Returned by the listInboundShipments operation."
    },
    "InboundShipmentItem": {
      "type": "object",
      "required": [
        "QuantityShipped",
        "SellerSKU"
      ],
      "properties": {
        "ShipmentId": {
          "type": "string",
          "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation."
        },
        "SellerSKU": {
          "type": "string",
          "description": "The seller SKU of the item."
        },
        "FulfillmentNetworkSKU": {
          "type": "string",
          "description": "Amazon's fulfillment network SKU of the item."
        },
        "QuantityShipped": {
          "description": "The item quantity that you are shipping.",
          "$ref": "#/definitions/Quantity"
        },
        "QuantityReceived": {
          "description": "The item quantity that has been received at an Amazon fulfillment center.",
          "$ref": "#/definitions/Quantity"
        },
        "QuantityInCase": {
          "description": "The item quantity in each case, for case-packed items. Note that QuantityInCase multiplied by the number of boxes in the inbound shipment equals QuantityShipped. Also note that all of the boxes of an inbound shipment must either be case packed or individually packed. For that reason, when you submit the createInboundShipment or the updateInboundShipment operation, the value of QuantityInCase must be provided for every item in the shipment or for none of the items in the shipment.",
          "$ref": "#/definitions/Quantity"
        },
        "ReleaseDate": {
          "description": "The date that a pre-order item will be available for sale.",
          "$ref": "#/definitions/DateStringType"
        },
        "PrepDetailsList": {
          "$ref": "#/definitions/PrepDetailsList"
        }
      },
      "description": "Item information for an inbound shipment. Submitted with a call to the createInboundShipment or updateInboundShipment operation."
    },
    "InboundShipmentItemList": {
      "type": "array",
      "description": "A list of inbound shipment item information.",
      "items": {
        "$ref": "#/definitions/InboundShipmentItem"
      }
    },
    "InboundShipmentList": {
      "type": "array",
      "description": "A list of inbound shipment information.",
      "items": {
        "$ref": "#/definitions/InboundShipmentInfo"
      }
    },
    "InvalidASIN": {
      "type": "object",
      "properties": {
        "ASIN": {
          "type": "string",
          "description": "The Amazon Standard Identification Number (ASIN) of the item."
        },
        "ErrorReason": {
          "description": "The reason that the ASIN is invalid.",
          "$ref": "#/definitions/ErrorReason"
        }
      },
      "description": "Contains details about an invalid ASIN"
    },
    "InvalidASINList": {
      "type": "array",
      "description": "A list of invalid ASIN values and the reasons they are invalid.",
      "items": {
        "$ref": "#/definitions/InvalidASIN"
      }
    },
    "InvalidSKU": {
      "type": "object",
      "properties": {
        "SellerSKU": {
          "type": "string",
          "description": "The seller SKU of the item."
        },
        "ErrorReason": {
          "description": "The reason why the seller SKU is invalid.",
          "$ref": "#/definitions/ErrorReason"
        }
      },
      "description": "Contains detail about an invalid SKU"
    },
    "InvalidSKUList": {
      "type": "array",
      "description": "A list of invalid SKU values and the reason they are invalid.",
      "items": {
        "$ref": "#/definitions/InvalidSKU"
      }
    },
    "LabelPrepType": {
      "type": "string",
      "description": "The type of label preparation that is required for the inbound shipment.",
      "enum": [
        "NO_LABEL",
        "SELLER_LABEL",
        "AMAZON_LABEL"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "NO_LABEL",
          "description": "No label preparation is required. All items in this shipment will be handled as stickerless, commingled inventory."
        },
        {
          "value": "SELLER_LABEL",
          "description": "Label preparation by the seller is required."
        },
        {
          "value": "AMAZON_LABEL",
          "description": "Label preparation by Amazon is required.\n\n Note: AMAZON_LABEL is available only if you are enrolled in the FBA Label Service. For more information about the FBA Label Service, see the Seller Central Help for your marketplace."
        }
      ]
    },
    "GetShipmentItemsResult": {
      "type": "object",
      "properties": {
        "ItemData": {
          "description": "A list of item information for an inbound shipment.",
          "$ref": "#/definitions/InboundShipmentItemList"
        },
        "NextToken": {
          "type": "string",
          "description": "When present and not empty, pass this string token in the next request to return the next response page."
        }
      },
      "description": "Result for the get shipment items operation"
    },
    "GetShipmentItemsResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the getShipmentItems operation.",
          "$ref": "#/definitions/GetShipmentItemsResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getShipmentItems operation."
    },
    "GetShipmentsResult": {
      "type": "object",
      "properties": {
        "ShipmentData": {
          "description": "Information about your inbound shipments.",
          "$ref": "#/definitions/InboundShipmentList"
        },
        "NextToken": {
          "type": "string",
          "description": "When present and not empty, pass this string token in the next request to return the next response page."
        }
      },
      "description": "Result for the get shipments operation"
    },
    "GetShipmentsResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the getShipments operation.",
          "$ref": "#/definitions/GetShipmentsResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getShipments operation."
    },
    "PrepDetails": {
      "type": "object",
      "required": [
        "PrepInstruction",
        "PrepOwner"
      ],
      "properties": {
        "PrepInstruction": {
          "$ref": "#/definitions/PrepInstruction"
        },
        "PrepOwner": {
          "$ref": "#/definitions/PrepOwner"
        }
      },
      "description": "Preparation instructions and who is responsible for the preparation."
    },
    "PrepDetailsList": {
      "type": "array",
      "description": "A list of preparation instructions and who is responsible for that preparation.",
      "items": {
        "$ref": "#/definitions/PrepDetails"
      }
    },
    "PrepGuidance": {
      "type": "string",
      "description": "Item preparation instructions.",
      "enum": [
        "ConsultHelpDocuments",
        "NoAdditionalPrepRequired",
        "SeePrepInstructionsList"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "ConsultHelpDocuments",
          "description": "Indicates that Amazon is currently unable to determine the preparation instructions for this item. Amazon might be able to provide guidance at a future date, after evaluating the item."
        },
        {
          "value": "NoAdditionalPrepRequired",
          "description": "Indicates that the item does not require preparation in addition to any item labeling that might be required."
        },
        {
          "value": "SeePrepInstructionsList",
          "description": "Indicates that the item requires preparation in addition to any item labeling that might be required. See the PrepInstructionList in the response for item preparation instructions."
        }
      ]
    },
    "PrepInstruction": {
      "type": "string",
      "description": "Preparation instructions for shipping an item to Amazon's fulfillment network. For more information about preparing items for shipment to Amazon's fulfillment network, see the Seller Central Help for your marketplace.",
      "enum": [
        "Polybagging",
        "BubbleWrapping",
        "Taping",
        "BlackShrinkWrapping",
        "Labeling",
        "HangGarment",
        "SetCreation",
        "Boxing",
        "RemoveFromHanger",
        "Debundle",
        "SuffocationStickering",
        "CapSealing",
        "SetStickering",
        "BlankStickering",
        "ShipsInProductPackaging",
        "NoPrep"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "Polybagging",
          "description": "Indicates that polybagging is required."
        },
        {
          "value": "BubbleWrapping",
          "description": "Indicates that bubble wrapping is required."
        },
        {
          "value": "Taping",
          "description": "Indicates that taping is required."
        },
        {
          "value": "BlackShrinkWrapping",
          "description": "Indicates that black shrink wrapping is required."
        },
        {
          "value": "Labeling",
          "description": "Indicates that the FNSKU label should be applied to the item."
        },
        {
          "value": "HangGarment",
          "description": "Indicates that the item should be placed on a hanger."
        },
        {
          "value": "SetCreation",
          "description": "Units that are sets must be labeled as sets on their packaging. The barcodes on the individual items must 1) not face outward and 2) not require covering."
        },
        {
          "value": "Boxing",
          "description": "Products may require overboxing when there are safety concerns over sharp items, fragile items, hazardous liquids, and vinyl records. For items over 4.5 kg, use double-wall corrugated boxes."
        },
        {
          "value": "RemoveFromHanger",
          "description": "Indicates that the item cannot be shipped on a hanger."
        },
        {
          "value": "Debundle",
          "description": "Indicates requiring taking apart a set of items labeled for individual sale. Remove tape or shrink wrap that groups multiple inventory units together."
        },
        {
          "value": "SuffocationStickering",
          "description": "Poly bags with an opening of 12 cm or larger (measured when flat) must have a suffocation warning. This warning must be printed on the bag or attached as a label."
        },
        {
          "value": "CapSealing",
          "description": "To prevent leakage, product needs to have a secondary seal in one of the following types: Induction seal, safety ring, clips, heat shrink plastic band, or boxing."
        },
        {
          "value": "SetStickering",
          "description": "Products that are sets (for example, a set of six unique toy cars that is sold as one unit) must be marked as sets on their packaging. Add a label to the unit that clearly states that the products are to be received and sold as a single unit."
        },
        {
          "value": "BlankStickering",
          "description": "Indicates applying a blank sticker to obscure a bad barcode that cannot be covered by another sticker."
        },
        {
          "value": "ShipsInProductPackaging",
          "description": "Indicates that item ships in its original product packaging."
        },
        {
          "value": "NoPrep",
          "description": "Indicates that the item does not require any prep."
        }
      ]
    },
    "PrepInstructionList": {
      "type": "array",
      "description": "A list of preparation instructions to help with item sourcing decisions.",
      "items": {
        "$ref": "#/definitions/PrepInstruction"
      }
    },
    "PrepOwner": {
      "type": "string",
      "description": "Indicates who will prepare the item.",
      "enum": [
        "AMAZON",
        "SELLER"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "AMAZON",
          "description": "Indicates Amazon will prepare the item."
        },
        {
          "value": "SELLER",
          "description": "Indicates the seller will prepare the item."
        }
      ]
    },
    "Quantity": {
      "type": "integer",
      "format": "int32",
      "description": "The item quantity."
    },
    "SKUPrepInstructions": {
      "type": "object",
      "properties": {
        "SellerSKU": {
          "type": "string",
          "description": "The seller SKU of the item."
        },
        "ASIN": {
          "type": "string",
          "description": "The Amazon Standard Identification Number (ASIN) of the item."
        },
        "BarcodeInstruction": {
          "$ref": "#/definitions/BarcodeInstruction"
        },
        "PrepGuidance": {
          "$ref": "#/definitions/PrepGuidance"
        },
        "PrepInstructionList": {
          "$ref": "#/definitions/PrepInstructionList"
        },
        "AmazonPrepFeesDetailsList": {
          "$ref": "#/definitions/AmazonPrepFeesDetailsList"
        }
      },
      "description": "Labeling requirements and item preparation instructions to help you prepare items for shipment to Amazon's fulfillment network."
    },
    "SKUPrepInstructionsList": {
      "type": "array",
      "description": "A list of SKU labeling requirements and item preparation instructions.",
      "items": {
        "$ref": "#/definitions/SKUPrepInstructions"
      }
    },
    "ShipmentStatus": {
      "type": "string",
      "description": "Indicates the status of the inbound shipment. When used with the createInboundShipment operation, WORKING is the only valid value. When used with the updateInboundShipment operation, possible values are WORKING, SHIPPED or CANCELLED.",
      "enum": [
        "WORKING",
        "SHIPPED",
        "RECEIVING",
        "CANCELLED",
        "DELETED",
        "CLOSED",
        "ERROR",
        "IN_TRANSIT",
        "DELIVERED",
        "CHECKED_IN"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "WORKING",
          "description": "The shipment was created by the seller, but has not yet shipped."
        },
        {
          "value": "SHIPPED",
          "description": "The shipment was picked up by the carrier."
        },
        {
          "value": "RECEIVING",
          "description": "The shipment has arrived at the fulfillment center, but not all items have been marked as received."
        },
        {
          "value": "CANCELLED",
          "description": "The shipment was cancelled by the seller after the shipment was sent to the fulfillment center."
        },
        {
          "value": "DELETED",
          "description": "The shipment was cancelled by the seller before the shipment was sent to the  fulfillment center."
        },
        {
          "value": "CLOSED",
          "description": "The shipment has arrived at the fulfillment center and all items have been marked as received."
        },
        {
          "value": "ERROR",
          "description": "There was an error with the shipment and it was not processed by Amazon."
        },
        {
          "value": "IN_TRANSIT",
          "description": "The carrier has notified the fulfillment center that it is aware of the shipment."
        },
        {
          "value": "DELIVERED",
          "description": "The shipment was delivered by the carrier to the fulfillment center."
        },
        {
          "value": "CHECKED_IN",
          "description": "The shipment was checked-in at the receiving dock of the fulfillment center."
        }
      ]
    }
  }
}
