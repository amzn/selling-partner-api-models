{
  "swagger": "2.0",
  "info": {
    "title": "The Selling Partner API for Amazon Seller Wallet Open Banking API",
    "description": "The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.",
    "termsOfService": "http://spectrum.Amazon.com/terms/",
    "contact": {
      "name": "Selling Partner API Developer Support",
      "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
    },
    "license": {
      "name": "Apache License 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2024-03-01"
  },
  "host": "sellingpartnerapi-na.amazon.com",
  "schemes": [
    "https"
  ],
  "externalDocs": {
    "description": "Find out more about PSD",
    "url": "https://en.wikipedia.org/wiki/Payment_Services_Directive"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "Everything about Amazon Seller Wallet customer accounts"
    },
    {
      "name": "Transfer Preview",
      "description": "Access to all transfers with fees and the final amount with FX details in Amazon Seller Wallet"
    },
    {
      "name": "Transactions",
      "description": "Access to all transactions in Amazon Seller Wallet account"
    },
    {
      "name": "Transfer Schedule",
      "description": "Access to all transfer schedules in Amazon Seller Wallet account"
    }
  ],
  "paths": {
    "/finances/transfers/wallet/2024-03-01/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get all Amazon Seller Wallet accounts for the seller",
        "description": "Get all Seller Wallet accounts for a given seller.",
        "operationId": "listAccounts",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).",
            "required": true,
            "type": "string",
            "x-example": "EU"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase200"
                      }
                    }
                  },
                  "response": {
                    "accounts" : [
                      {
                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                        "accountHolderName": "John Doe",
                        "bankAccountNumberFormat": "BBAN",
                        "bankName": "Amazon Seller Wallet",
                        "bankAccountOwnershipType": "SELF",
                        "routingNumber": "000000000",
                        "bankNumberFormat": "BASIC",
                        "accountCountryCode": "US",
                        "accountCurrency": "USD",
                        "bankAccountNumberTail": "000",
                        "bankAccountHolderStatus": "ACTIVE"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/BankAccountListing"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing digitalSignature.",
                        "details": "Digital Signature is missing for the request"
                      },
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC Certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for USMarketplace"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond within given SLA"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server Throttled Request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Find particular Amazon Seller Wallet account by Amazon account identifier",
        "description": "Retrieve an Amazon Seller Wallet bank account by Amazon account identifier.",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The ID of the Amazon Seller Wallet account.",
            "required": true,
            "type": "string",
            "x-example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase200"
                      }
                    }
                  },
                  "response": {
                    "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                    "accountHolderName": "Jane Doe",
                    "bankAccountNumberFormat": "BBAN",
                    "bankName": "Amazon Seller Wallet",
                    "bankAccountOwnershipType": "SELF",
                    "routingNumber": "000000000",
                    "bankNumberFormat": "BASIC",
                    "accountCountryCode": "US",
                    "accountCurrency": "USD",
                    "bankAccountNumberTail": "000",
                    "bankAccountHolderStatus": "ACTIVE"
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/BankAccount"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing digitalSignature.",
                        "details": "Digital Signature is missing for the request"
                      },
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond within given SLA"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server Throttled Request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/accounts/{accountId}/balance": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Find balance in particular Amazon Seller Wallet account by Amazon account identifier",
        "description": "Retrieve the balance in a given Amazon Seller Wallet bank account.",
        "operationId": "listAccountBalances",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The ID of the Amazon Seller Wallet account.",
            "required": true,
            "type": "string",
            "x-example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase200"
                      }
                    }
                  },
                  "response": {
                    "balances": [
                      {
                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                        "balanceType": "AVAILABLE",
                        "balanceAmount": 123.45,
                        "balanceCurrency": "USD",
                        "lastUpdateDate": "2024-03-01T10:30:00Z"
                      },
                      {
                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                        "balanceType": "LOCKED_IN",
                        "balanceAmount": 500.00,
                        "balanceCurrency": "USD",
                        "lastUpdateDate": "2024-03-01T10:30:00Z"
                      },
                      {
                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                        "balanceType": "TOTAL",
                        "balanceAmount": 623.45,
                        "balanceCurrency": "USD",
                        "lastUpdateDate": "2024-03-01T10:30:00Z"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/BalanceListing"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond within given SLA"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server Throttled Request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transferPreview": {
      "get": {
        "tags": [
          "Transfer Preview"
        ],
        "summary": "Fetch potential fees that could be applied on a transaction on the basis of the source and destination country currency code",
        "description": "Retrieve a list of potential fees on a transaction.",
        "operationId": "getTransferPreview",
        "parameters": [
          {
            "name": "sourceCountryCode",
            "in": "query",
            "description": "Country code of the source transaction account in ISO 3166 format.",
            "required": true,
            "type": "string",
            "x-example": "US"
          },
          {
            "name": "sourceCurrencyCode",
            "in": "query",
            "description": "Currency code of the source transaction country in ISO 4217 format.",
            "required": true,
            "type": "string",
            "x-example": "USD"
          },
          {
            "name": "destinationCountryCode",
            "in": "query",
            "description": "Country code of the destination transaction account in ISO 3166 format.",
            "required": true,
            "type": "string",
            "x-example": "FR"
          },
          {
            "name": "destinationCurrencyCode",
            "in": "query",
            "description": "Currency code of the destination transaction country in ISO 4217 format.",
            "required": true,
            "type": "string",
            "x-example": "EUR"
          },
          {
            "name": "baseAmount",
            "in": "query",
            "description": "The base transaction amount without any markup fees.",
            "required": true,
            "type": "number",
            "x-example": 1000.0
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "EU"
                      },
                      "sourceCurrencyCode": {
                        "value": "EUR"
                      },
                      "destinationCountryCode": {
                        "value": "CN"
                      },
                      "destinationCurrencyCode": {
                        "value": "CNY"
                      },
                      "baseAmount": {
                        "value": 500.00
                      }
                    }
                  },
                  "response": {
                    "baseAmount": {
                      "currencyCode": "EUR",
                      "currencyAmount": 500.00
                    },
                    "fxRateDetails": {
                      "fxRateId": "UNIQUE_FX_RATE_ID_1",
                      "baseRate": 7.6915,
                      "effectiveFxRate": 7.6084,
                      "rateDirection": "BUY"
                    },
                    "transferAmount": {
                      "currencyCode": "CNY",
                      "currencyAmount": 3804.20
                    },
                    "fees": [
                      {
                        "feeId": "Unique_FeeId_001",
                        "feeType": "TRANSACTION_FEE",
                        "feeRateValue": 0.9,
                        "feeAmount": {
                          "currencyCode": "EUR",
                          "currencyAmount": 4.50
                        }
                      },
                      {
                        "feeId": "Unique_FeeId_002",
                        "feeType": "TAX",
                        "feeRateValue": 20.0,
                        "feeAmount": {
                          "currencyCode": "EUR",
                          "currencyAmount": 0.90
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferRatePreview"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "AP"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing Input Parameter.",
                        "details": "Invalid sourceCountryCode"
                      },
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing Input Parameter.",
                        "details": "Missing destinationCurrencyCode"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "US"
                      },
                      "destinationCountryCode": {
                        "value": "US"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "US"
                      },
                      "sourceCurrencyCode": {
                        "value": "USD"
                      },
                      "destinationCountryCode": {
                        "value": "US"
                      },
                      "destinationCurrencyCode": {
                        "value": "USD"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "US"
                      },
                      "destinationCountryCode": {
                        "value": "HK"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "HK"
                      },
                      "destinationCountryCode": {
                        "value": "HK"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "EU"
                      },
                      "destinationCountryCode": {
                        "value": "EU"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "CN"
                      },
                      "destinationCountryCode": {
                        "value": "CN"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "The API will return all the transactions for a given Amazon Seller Wallet account sorted by the transaction request date",
        "description": "Retrieve a list of transactions for a given Amazon Seller Wallet bank account.",
        "operationId": "listAccountTransactions",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "type": "string",
            "description": "The ID of the Amazon Seller Wallet account.",
            "required": true,
            "x-example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "A token that you use to retrieve the next page of results. The response includes `nextPageToken` when the number of results exceeds 100. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages.",
            "required": false,
            "type": "string",
            "x-example": "Next Page Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase200"
                      }
                    }
                  },
                  "response": {
                    "nextPageToken" : "3493805734095308457308475",
                    "transactions" : [ {
                      "transactionId" : "amzn.transaction.AKJBNEFNL23R84V",
                      "transactionType" : "DEBIT",
                      "transactionStatus" : "PAYEE_UNDER_REVIEW",
                      "transactionRequestDate" : "2023-09-26T02:32:59.787Z",
                      "expectedCompletionDate" : "2023-09-26T02:32:59.787Z",
                      "transactionActualCompletionDate" : "2023-09-26T02:32:59.787Z",
                      "lastUpdateDate" : "2023-09-26T02:32:59.787Z",
                      "requesterName" : "TppOrgId",
                      "transactionRequesterSource" : "TPP",
                      "transactionDescription" : "Test transaction request",
                      "transactionSourceAccount" : {
                        "accountId" : "sourceAccountIdCase200",
                        "bankAccountHolderName" : "John Doe",
                        "bankName" : "Amazon Seller Wallet",
                        "bankAccountNumberFormat" : "IBAN",
                        "bankAccountNumberTail" : "123",
                        "bankAccountCurrency" : "GBP"
                      },
                      "transactionDestinationAccount" : {
                        "bankAccountHolderName" : "Dane Shipping",
                        "bankName" : "Royal Bank of Scotland",
                        "bankAccountNumberFormat" : "IBAN",
                        "bankAccountNumberTail" : "819",
                        "bankAccountCurrency" : "GBP",
                        "bankAccountCountryCode" : "UK"
                      },
                      "transactionRequestAmount" : {
                        "currencyCode" : "EUR",
                        "currencyAmount" : 500.00
                      },
                      "transferRateDetails" : {
                        "baseAmount": {
                          "currencyCode": "EUR",
                          "currencyAmount": 500.00
                        },
                        "fxRateDetails": {
                          "fxRateId": "UNIQUE_FX_RATE_ID_1",
                          "baseRate": 7.6915,
                          "effectiveFxRate": 7.6084,
                          "rateDirection": "BUY"
                        },
                        "transferAmount": {
                          "currencyCode": "CNY",
                          "currencyAmount": 3804.20
                        },
                        "fees": [
                          {
                            "feeId": "Unique_FeeId_001",
                            "feeType": "TRANSACTION_FEE",
                            "feeRateValue": 0.9,
                            "feeAmount": {
                              "currencyCode": "EUR",
                              "currencyAmount": 4.50
                            }
                          },
                          {
                            "feeId": "Unique_FeeId_002",
                            "feeType": "TAX",
                            "feeRateValue": 20.0,
                            "feeAmount": {
                              "currencyCode": "EUR",
                              "currencyAmount": 0.90
                            }
                          }
                        ]
                      },
                      "transactionFinalAmount" : {
                        "currencyCode" : "CNY",
                        "currencyAmount" : 3804.20
                      }
                    } ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransactionListing"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a transaction request from Amazon Seller Wallet account to another customer-provided account",
        "description": "Create a transaction request from an Amazon Seller Wallet account to another customer-provided account.",
        "operationId": "createTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The payload of the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionInitiationRequest"
            }
          },
          {
            "name": "destAccountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the destination bank account details.",
            "required": true,
            "type": "string",
            "x-example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
          },
          {
            "name": "amountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the source currency transaction amount.",
            "required": true,
            "type": "string",
            "x-example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase200",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "Joane Packaging Ltd",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market Street",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "transactionId" : "amzn.transaction.ALNR19JCVWLN3E",
                    "transactionType" : "DEBIT",
                    "transactionStatus" : "PAYEE_UNDER_REVIEW",
                    "transactionRequestDate" : "2023-09-26T02:32:59.787Z",
                    "expectedCompletionDate" : "2023-09-26T02:32:59.787Z",
                    "transactionActualCompletionDate" : "2023-09-30T02:32:59.787Z",
                    "lastUpdateDate" : "2023-09-26T02:32:59.787Z",
                    "requesterName" : "TppOrgId",
                    "transactionRequesterSource" : "TPP",
                    "transactionDescription" : "Test transaction request",
                    "transactionSourceAccount" : {
                      "accountId" : "sourceAccountIdCase200",
                      "bankAccountHolderName" : "John Doe",
                      "bankName" : "Amazon Seller Wallet",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountCurrency" : "GBP"
                    },
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Johnny Packaging",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transactionRequestAmount" : {
                      "currencyCode" : "EUR",
                      "currencyAmount" : 500.00
                    },
                    "transferRateDetails" : {
                      "baseAmount": {
                        "currencyCode": "EUR",
                        "currencyAmount": 500.00
                      },
                      "fxRateDetails": {
                        "fxRateId": "UNIQUE_FX_RATE_ID_1",
                        "baseRate": 7.6915,
                        "effectiveFxRate": 7.6084,
                        "rateDirection": "BUY"
                      },
                      "transferAmount": {
                        "currencyCode": "CNY",
                        "currencyAmount": 3804.20
                      },
                      "fees": [
                        {
                          "feeId": "Unique_FeeId_001",
                          "feeType": "TRANSACTION_FEE",
                          "feeRateValue": 0.9,
                          "feeAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 4.50
                          }
                        },
                        {
                          "feeId": "Unique_FeeId_002",
                          "feeType": "TAX",
                          "feeRateValue": 20.0,
                          "feeAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 0.90
                          }
                        }
                      ]
                    },
                    "transactionFinalAmount" : {
                      "currencyCode" : "CNY",
                      "currencyAmount" : 3804.20
                    }
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/Transaction"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase400",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "Johnny Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market Street",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing signature.",
                        "details": "Missing addressDigitalSignature"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase403",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "Johnny Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market Street",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase404",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market Street",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for invalid SourceAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase408",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "addressLine2": "Unit 101",
                            "city": "City of Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "The request was well-formed (i.e., syntactically correct) but could not be processed because of some restrictions like insufficient funds, transaction limit breach, etc.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase422",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InsufficientBalance",
                        "message": "Insufficient Balance",
                        "details": "Insufficient Balance"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase429",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase500",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase503",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "city": "Edinburgh",
                            "addressLine2": "Unit 101",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Find particular Amazon Seller Wallet account transaction by Amazon transaction identifier",
        "description": "Find a transaction by the Amazon transaction identifier.",
        "operationId": "getTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "The ID of the Amazon Seller Wallet transaction.",
            "required": true,
            "type": "string",
            "x-example": "amzn1.transaction.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase200"
                      }
                    }
                  },
                  "response": {
                    "transactionId" : "amzn.transaction.AKJBNEFNL23R84V",
                    "transactionType" : "DEBIT",
                    "transactionStatus" : "PAYEE_UNDER_REVIEW",
                    "transactionRequestDate" : "2023-09-26T02:32:59.787Z",
                    "expectedCompletionDate" : "2023-09-26T02:32:59.787Z",
                    "transactionActualCompletionDate" : "2023-09-26T02:32:59.787Z",
                    "lastUpdateDate" : "2023-09-26T02:32:59.787Z",
                    "requesterName" : "TppOrgId",
                    "transactionRequesterSource" : "TPP",
                    "transactionDescription" : "Test transaction request",
                    "transactionSourceAccount" : {
                      "accountId" : "sourceAccountIdCase200",
                      "bankAccountHolderName" : "John Doe",
                      "bankName" : "Amazon Seller Wallet",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "123",
                      "bankAccountCurrency" : "GBP"
                    },
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Dane Shipping",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transactionRequestAmount" : {
                      "currencyCode" : "EUR",
                      "currencyAmount" : 500.00
                    },
                    "transferRateDetails" : {
                      "baseAmount": {
                        "currencyCode": "EUR",
                        "currencyAmount": 500.00
                      },
                      "fxRateDetails": {
                        "fxRateId": "UNIQUE_FX_RATE_ID_1",
                        "baseRate": 7.6915,
                        "effectiveFxRate": 7.6084,
                        "rateDirection": "BUY"
                      },
                      "transferAmount": {
                        "currencyCode": "CNY",
                        "currencyAmount": 3804.20
                      },
                      "fees": [
                        {
                          "feeId": "Unique_FeeId_001",
                          "feeType": "TRANSACTION_FEE",
                          "feeRateValue": 0.9,
                          "feeAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 4.50
                          }
                        },
                        {
                          "feeId": "Unique_FeeId_002",
                          "feeType": "TAX",
                          "feeRateValue": 20.0,
                          "feeAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 0.90
                          }
                        }
                      ]
                    },
                    "transactionFinalAmount" : {
                      "currencyCode" : "CNY",
                      "currencyAmount" : 3804.20
                    }
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/Transaction"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transferSchedules": {
      "get": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "The API will return all the transfer schedules for a given Amazon Seller Wallet account",
        "description": "Returns all transfer schedules of a given Amazon Seller Wallet bank account with the schedule ID in response if present.",
        "operationId": "listTransferSchedules",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "type": "string",
            "description": "The ID of the Amazon Seller Wallet account.",
            "required": true,
            "x-example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "A token that you use to retrieve the next page of results. The response includes `nextPageToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages.",
            "required": false,
            "type": "string",
            "x-example": "Next Page Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase200"
                      }
                    }
                  },
                  "response": {
                    "nextPageToken" : "3493805734095308457308475",
                    "transferSchedules" : [ {
                      "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                      "transactionType": "DEBIT",
                      "transactionSourceAccount" : {
                        "accountId" : "sourceAccountIdCase200",
                        "bankAccountHolderName" : "John Doe",
                        "bankName" : "Amazon Seller Wallet",
                        "bankAccountNumberFormat" : "IBAN",
                        "bankAccountNumberTail" : "123",
                        "bankAccountCurrency" : "GBP"
                      },
                      "transactionDestinationAccount" : {
                        "bankAccountHolderName" : "Dane Shipping",
                        "bankName" : "Royal Bank of Scotland",
                        "bankAccountNumberFormat" : "IBAN",
                        "bankAccountNumberTail" : "819",
                        "bankAccountCurrency" : "GBP",
                        "bankAccountCountryCode" : "EU"
                      },
                      "transferScheduleStatus": "ENABLED",
                      "transferScheduleInformation": {
                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                        "scheduleExpression": {
                          "scheduleExpressionType": "RECURRING",
                          "recurringFrequency": "WEEKLY"
                        },
                        "scheduleType": "TIME_BASED"
                      },
                      "paymentPreference": {
                        "paymentPreferencePaymentType": "PERCENTAGE",
                        "value": 25.5
                      },
                      "transferScheduleFailures": [{
                        "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                        "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                      }]
                    } ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferScheduleListing"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Account not found.",
                        "details": "Account doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "Create a transfer schedule request from Amazon Seller Wallet account to another customer-provided account",
        "description": "Create a transfer schedule request from an Amazon Seller Wallet account to another customer-provided account.",
        "operationId": "createTransferSchedule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The payload of the request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferScheduleRequest"
            }
          },
          {
            "name": "destAccountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the destination bank account details.",
            "required": true,
            "type": "string",
            "x-example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
          },
          {
            "name": "amountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the source currency transaction amount.",
            "required": true,
            "type": "string",
            "x-example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "transactionType": "DEBIT",
                    "transactionSourceAccount" : {
                      "accountId" : "amzn.account.AAJKBWEF193EUBKWDVCS",
                      "bankAccountHolderName" : "John Doe",
                      "bankName" : "Amazon Seller Wallet",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "123",
                      "bankAccountCurrency" : "GBP"
                    },
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Dane Shipping",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transferScheduleStatus": "ENABLED",
                    "transferScheduleInformation": {
                      "scheduleStartDate": "2024-03-01T00:00:00Z",
                      "scheduleEndDate": "2027-03-01T00:00:00Z",
                      "scheduleExpression": {
                        "scheduleExpressionType": "RECURRING",
                        "recurringFrequency": "WEEKLY"
                      },
                      "scheduleType": "TIME_BASED"
                    },
                    "paymentPreference": {
                      "paymentPreferencePaymentType": "PERCENTAGE",
                      "value": 25.5
                    },
                    "transferScheduleFailures": [{
                      "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                      "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                    }]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase400",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing signature.",
                        "details": "Missing addressDigitalSignature"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase403",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase404",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Account not found.",
                        "details": "Account doesn't exists for invalid SourceAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase408",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "Transfer schedule already exists for same source and destination account combination.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase409",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "919"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926919"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2025-03-01T00:00:00Z",
                            "scheduleEndDate": "2026-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestConflict",
                        "message": "Request Conflict",
                        "details": "Transfer schedule already exists for same source and destination account combination."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase429",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase500",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase503",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "Update a transfer schedule information. Only fields (i.e; transferScheduleInformation, paymentPreference, transferScheduleStatus) in the request body can be updated.",
        "description": "Update transfer schedule information. Returns a transfer belonging to the updated scheduled transfer request.",
        "operationId": "updateTransferSchedule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The payload of the scheduled transfer request that is to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferSchedule"
            }
          },
          {
            "name": "destAccountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the destination bank account details.",
            "required": true,
            "type": "string",
            "x-example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
          },
          {
            "name": "amountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the source currency transaction amount.",
            "required": true,
            "type": "string",
            "x-example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase200",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "transactionType": "DEBIT",
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Dane Shipping",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transferScheduleStatus": "ENABLED",
                    "transferScheduleInformation": {
                      "scheduleStartDate": "2024-03-01T00:00:00Z",
                      "scheduleEndDate": "2027-03-01T00:00:00Z",
                      "scheduleExpression": {
                        "scheduleExpressionType": "RECURRING",
                        "recurringFrequency": "WEEKLY"
                      },
                      "scheduleType": "TIME_BASED"
                    },
                    "paymentPreference": {
                      "paymentPreferencePaymentType": "PERCENTAGE",
                      "value": 25.5
                    },
                    "transferScheduleFailures": [{
                      "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                      "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                    }]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase400",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing signature.",
                        "details": "Missing addressDigitalSignature"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase403",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid request.",
                        "details": "Request body provided is invalid."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase404",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Account not found.",
                        "details": "Account doesn't exists for invalid SourceAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase408",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase429",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase500",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase503",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transferSchedules/{transferScheduleId}": {
      "get": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "Find particular Amazon Seller Wallet account transfer schedule by Amazon transfer schedule identifier",
        "description": "Find a particular Amazon Seller Wallet account transfer schedule.",
        "operationId": "getTransferSchedule",
        "parameters": [
          {
            "name": "transferScheduleId",
            "in": "path",
            "description": "The schedule ID of the Amazon Seller Wallet transfer.",
            "required": true,
            "type": "string",
            "x-example": "amzn1.transferschedule.AKNWCDNVP3FNJDCLK876"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdcase200"
                      }
                    }
                  },
                  "response": {
                    "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "transactionType": "DEBIT",
                    "transactionSourceAccount" : {
                      "accountId" : "sourceAccountIdCase200",
                      "bankAccountHolderName" : "John Doe",
                      "bankName" : "Amazon Seller Wallet",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "123",
                      "bankAccountCurrency" : "GBP"
                    },
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Dane Shipping",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transferScheduleStatus": "ENABLED",
                    "transferScheduleInformation": {
                      "scheduleStartDate": "2024-03-01T00:00:00Z",
                      "scheduleEndDate": "2027-03-01T00:00:00Z",
                      "scheduleExpression": {
                        "scheduleExpressionType": "RECURRING",
                        "recurringFrequency": "WEEKLY"
                      },
                      "scheduleType": "TIME_BASED"
                    },
                    "paymentPreference": {
                      "paymentPreferencePaymentType": "PERCENTAGE",
                      "value": 25.5
                    },
                    "transferScheduleFailures": [{
                      "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                      "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                    }]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Account not found.",
                        "details": "Account doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account",
        "description": "Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account.",
        "operationId": "deleteScheduleTransaction",
        "parameters": [
          {
            "name": "transferScheduleId",
            "description": "A unique reference ID for a scheduled transfer.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "amzn1.scheduletransfer.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the transfer schedule.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase200"
                      }
                    }
                  },
                  "response": {
                    "code" : "Successful",
                    "message" : "Deleted transfer schedule",
                    "details" : "Deleted transfer schedule for ID transferScheduleIdCase200"
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/DeleteTransferSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing signature.",
                        "details": "Missing addressDigitalSignature"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Transfer Schedule not found.",
                        "details": "Transfer schedule id doesn't exists for invalid TransferScheduleId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountHolderAddress": {
      "type": "object",
      "description": "The Address used to verify the bank account of the payee. This can be a person or business mailing address.",
      "properties": {
        "addressLine1": {
          "type": "string",
          "description": "Address Line 1 of the public address.",
          "example": "678 JFK Street"
        },
        "addressLine2": {
          "type": "string",
          "description": "Address Line 2 of the public address.",
          "example": "Unit 415"
        },
        "city": {
          "type": "string",
          "description": "City name of the public address.",
          "example": "Seattle"
        },
        "state": {
          "type": "string",
          "description": "State name of the public address. This will be state or region for CN (China) based addresses.",
          "example": "WA"
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code of the public address.",
          "example": "98109"
        },
        "country": {
          "type": "string",
          "description": "Country name of the public address.",
          "example": "United States"
        },
        "countryCode": {
          "type": "string",
          "description": "The two digit country code, in ISO 3166 format.",
          "example": "US"
        }
      },
      "example": {
        "addressLine1": "678 JFK Street",
        "city": "Seattle",
        "state": "WA",
        "postalCode": "98109",
        "countryCode": "US"
      },
      "required": [
        "addressLine1",
        "city",
        "state",
        "postalCode",
        "countryCode"
      ]
    },
    "BankAccount": {
      "type": "object",
      "description": "Details of an Amazon Seller Wallet bank account. This account is used to hold the money that a Seller Wallet customer earns by selling items.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to identify the account.",
          "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
        },
        "accountHolderName": {
          "type": "string",
          "description": "The bank account holder's name (expected to be an Amazon customer).",
          "example": "John Doe"
        },
        "bankAccountNumberFormat": {
          "description": "The format in which the bank account number is provided.",
          "$ref": "#/definitions/BankAccountNumberFormat"
        },
        "bankName": {
          "type": "string",
          "description": "The name of the bank. This value is Amazon Seller Wallet for Amazon Seller Wallet accounts.",
          "example": "Bank Of America"
        },
        "bankAccountOwnershipType": {
          "description": "Type of ownership of the bank account. This value is SELF for Amazon Seller Wallet accounts.",
          "$ref": "#/definitions/BankAccountOwnershipType"
        },
        "routingNumber": {
          "type": "string",
          "description": "Routing number for automated clearing house transfers. This value is nine consecutive zeros for Amazon Seller Wallet accounts.",
          "example": "026009593"
        },
        "bankNumberFormat": {
          "description": "Bank number format or routing number type.",
          "$ref": "#/definitions/BankNumberFormat"
        },
        "accountCountryCode": {
          "type": "string",
          "description": "The two-digit country code in ISO 3166 format.",
          "example": "US"
        },
        "accountCurrency": {
          "type": "string",
          "description": "Bank account currency code in ISO 4217 format.",
          "example": "USD"
        },
        "bankAccountNumberTail": {
          "type": "string",
          "description": "The last 3 digit of the bank account number. This value is three consecutive zeros for Amazon Seller Wallet accounts.",
          "example": "123"
        },
        "bankAccountHolderStatus": {
          "description": "The compliance status of the bank account holder.",
          "$ref": "#/definitions/BankAccountHolderStatus"
        }
      },
      "required": [
        "accountHolderName",
        "bankAccountNumberFormat",
        "bankAccountOwnershipType",
        "routingNumber",
        "bankNumberFormat",
        "accountCountryCode",
        "accountCurrency",
        "bankAccountNumberTail"
      ]
    },
    "BankAccountListing": {
      "type": "object",
      "description": "A list of bank accounts.",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "description": "A list of bank accounts.",
          "items": {
            "$ref": "#/definitions/BankAccount"
          }
        }
      }
    },
    "Balance": {
      "type": "object",
      "description": "The balance amount in the Amazon Seller Wallet bank account.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to identify the account.",
          "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
        },
        "balanceType": {
          "description": "The type of balance.",
          "$ref": "#/definitions/BalanceType"
        },
        "balanceAmount": {
          "description": "The balance amount in number format.",
          "$ref": "#/definitions/BigDecimal"
        },
        "balanceCurrency": {
          "type": "string",
          "description": "The Amazon Seller Wallet bank account currency code in ISO 4217 format.",
          "example": "USD"
        },
        "lastUpdateDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the most recent account balance update."
        }
      },
      "required": [
        "accountId",
        "balanceAmount",
        "balanceCurrency",
        "lastUpdateDate"
      ],
      "example": {
        "accountId" : "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
        "balanceType" : "AVAILABLE",
        "balanceAmount" : 123.45,
        "balanceCurrency" : "USD",
        "lastUpdateDate" : "2024-03-01T10:30:00Z"
      }
    },
    "BalanceListing": {
      "type": "object",
      "description": "A list of balances in the seller account.",
      "properties": {
        "balances": {
          "type": "array",
          "description": "A list of balances in the seller account.",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        }
      },
      "example": {
        "balances" : [ {
          "accountId" : "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
          "balanceType" : "AVAILABLE",
          "balanceAmount" : 123.45,
          "balanceCurrency" : "USD",
          "lastUpdateDate" : "2024-03-01T10:30:00Z"
        }, {
          "accountId" : "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
          "balanceType" : "LOCKED_IN",
          "balanceAmount" : 500.0,
          "balanceCurrency" : "USD",
          "lastUpdateDate" : "2024-03-01T10:30:00Z"
        }, {
          "accountId" : "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
          "balanceType" : "TOTAL",
          "balanceAmount" : 623.45,
          "balanceCurrency" : "USD",
          "lastUpdateDate" : "2024-03-01T10:30:00Z"
        } ]
      }
    },
    "BalanceType": {
      "type": "string",
      "description": "The type of bank account balance.",
      "enum": [
        "AVAILABLE",
        "LOCKED_IN",
        "LOCKED_OUT",
        "TOTAL"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "AVAILABLE",
          "description": "The available balance that is accessible to the seller."
        },
        {
          "value": "LOCKED_IN",
          "description": "The incoming balance in the seller's account."
        },
        {
          "value": "LOCKED_OUT",
          "description": "The outgoing balance from seller's account"
        },
        {
          "value": "TOTAL",
          "description": "The total balance in the seller's account."
        }
      ]
    },
    "BankAccountNumberFormat": {
      "type": "string",
      "description": "The bank account's format type.",
      "enum": [
        "IBAN",
        "BBAN"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "IBAN",
          "description": "International bank account number."
        },
        {
          "value": "BBAN",
          "description": "Basic bank account number for domestic bank accounts."
        }
      ]
    },
    "BankAccountHolderStatus": {
      "type": "string",
      "description": "The status of the Amazon Seller Wallet account holder.",
      "enum": [
        "ACTIVE",
        "INACTIVE",
        "UNDER_REVIEW",
        "VERIFICATION_FAILED"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "ACTIVE",
          "description": "The account holder is Active."
        },
        {
          "value": "INACTIVE",
          "description": "The account holder is inactive and cannot make transactions."
        },
        {
          "value": "UNDER_REVIEW",
          "description": "The account holder is currently under review."
        },
        {
          "value": "VERIFICATION_FAILED",
          "description": "The account holder KYC (Know Your Customer) verification has failed."
        }
      ]
    },
    "BankAccountOwnershipType": {
      "type": "string",
      "description": "The destination bank account's ownership type.",
      "enum": [
        "THIRD_PARTY",
        "SELF",
        "GOVERNMENT"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "THIRD_PARTY",
          "description": "The account is not officially owned by the Payment Service User who is viewing the account and initiating the transaction."
        },
        {
          "value": "SELF",
          "description": "The account is officially owned by the Payment Service User who is viewing the account and initiating the transaction."
        },
        {
          "value": "GOVERNMENT",
          "description": "The account is officially owned by a government entity and is used for service fees / tax collection."
        }
      ]
    },
    "BankNumberFormat": {
      "type": "string",
      "description": "The format of the bank number. Also known as the routing number type.",
      "enum": [
        "BIC",
        "BASIC"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "BIC",
          "description": "Business Identifier Code. In ISO_9362 format."
        },
        {
          "value": "BASIC",
          "description": "The bank number has a special format specific to the country code provided, such as ABA routing number."
        }
      ]
    },
    "BigDecimal": {
      "type": "number",
      "description": "A decimal number, such as an amount or FX rate."
    },
    "Currency": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The three-digit currency code in ISO 4217 format."
        },
        "currencyAmount": {
          "description": "The monetary value.",
          "$ref": "#/definitions/BigDecimal"
        }
      },
      "description": "A currency type and amount."
    },
    "DeleteTransferSchedule": {
      "description": "The response returned when the schedule transfer's delete request is successful.",
      "properties": {
        "code": {
          "description": "A success code that specifies that the delete operation was successful. For example, HTTP 200.",
          "type": "string"
        },
        "message": {
          "description": "A message that describes the success condition of the delete schedule transaction.",
          "type": "string"
        },
        "details": {
          "description": "Additional details that can help the caller understand the operation execution.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "type": "object"
    },
    "Error": {
      "description": "Error response returned when the request is unsuccessful.",
      "properties": {
        "code": {
          "description": "An error code that identifies the type of error that occurred.",
          "type": "string"
        },
        "message": {
          "description": "A message that describes the error condition.",
          "type": "string"
        },
        "details": {
          "description": "Additional details that can help the caller understand or fix the issue.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "type": "object"
    },
    "ErrorList": {
      "type": "object",
      "description": "A list of error responses returned when a request is unsuccessful.",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "description": "List of errors",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "FxRateDetails": {
      "type": "object",
      "required": [
        "fxRateId",
        "baseRate",
        "effectiveFxRate",
        "rateDirection"
      ],
      "properties": {
        "fxRateId": {
          "type": "string",
          "description": "The unique identifier assigned to the fees / foreign exchange rate of a transaction."
        },
        "baseRate": {
          "description": "The market foreign exchange rate.",
          "$ref": "#/definitions/BigDecimal"
        },
        "effectiveFxRate": {
          "description": "The total rate applied to the money transfer. This includes all exchange rates, markups, and fees.",
          "$ref": "#/definitions/BigDecimal"
        },
        "rateDirection": {
          "description": "Whether the customer is buying or selling the source currency.",
          "$ref": "#/definitions/RateDirection"
        }
      },
      "description": "Foreign exchange rate details.",
      "example": {
        "fxRateId": "UNIQUE_FX_RATE_ID_1",
        "baseRate": 7.20,
        "effectiveFxRate": 7.25,
        "rateDirection": "BUY"
      }
    },
    "Fee": {
      "type": "object",
      "required": [
        "feeId",
        "feeType",
        "feeRateValue",
        "feeAmount"
      ],
      "properties": {
        "feeId": {
          "type": "string",
          "description": "The unique identifier assigned to the fee."
        },
        "feeType": {
          "description": "The type of the fee.",
          "$ref": "#/definitions/FeeType"
        },
        "feeRateValue": {
          "description": "The value of the fee in percentage format.",
          "$ref": "#/definitions/BigDecimal"
        },
        "feeAmount": {
          "description": "The actual value of the fee in numeric format.",
          "$ref": "#/definitions/Currency"
        }
      },
      "description": "Details of the fee."
    },
    "FeeType": {
      "type": "string",
      "description": "The type of fee on the transaction.",
      "enum": [
        "MISCELLANEOUS_FEE",
        "TAX",
        "TRANSACTION_FEE"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "MISCELLANEOUS_FEE",
          "description": "Any other service charges or additional fee applied by a transaction executor service."
        },
        {
          "value": "TAX",
          "description": "Taxes on the transaction."
        },
        {
          "value": "TRANSACTION_FEE",
          "description": "A per-transaction fee that can be applied by a transaction executor service. This can be both international and domestic fees"
        }
      ]
    },
    "RateDirection": {
      "type": "string",
      "description": "Whether the customer is buying or selling the source currency.",
      "enum": [
        "BUY",
        "SELL"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "BUY",
          "description": "The customer is buying the source currency."
        },
        {
          "value": "SELL",
          "description": "The customer is selling the source currency."
        }
      ]
    },
    "PaymentPreference" :{
      "type": "object",
      "description": "The type of payment preference in which the transfer is being scheduled.",
      "required": [
        "paymentPreferencePaymentType",
        "value"
      ],
      "properties": {
        "paymentPreferencePaymentType": {
          "description": "The preferred payment type for the scheduled transaction. Can be `PERCENTAGE` or `AMOUNT`.",
          "$ref": "#/definitions/PaymentPreferencePaymentType"
        },
        "value": {
          "description": "The value of the payment preference.",
          "$ref": "#/definitions/BigDecimal"
        }
      }
    },
    "PaymentPreferencePaymentType": {
      "type": "string",
      "description": "The type of payment preference.",
      "enum": [
        "PERCENTAGE",
        "AMOUNT"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "PERCENTAGE",
          "description": "The scheduled transfer is a percentage of the account total."
        },
        {
          "value": "AMOUNT",
          "description": "The scheduled transfer is a specific amount."
        }
      ]
    },
    "RecurringFrequency": {
      "type": "string",
      "description": "The frequency at which the transaction is repeated.",
      "enum": [
        "BIWEEKLY",
        "DAILY",
        "MONTHLY",
        "WEEKLY"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "BIWEEKLY",
          "description": "The transfer will repeat every two weeks."
        },
        {
          "value": "DAILY",
          "description": "The transfer will repeat every day."
        },
        {
          "value": "MONTHLY",
          "description": "The transfer will repeat every month."
        },
        {
          "value": "WEEKLY",
          "description": "The transfer will repeat every week."
        }
      ]
    },
    "TransferScheduleInformation": {
      "type": "object",
      "description": "Mandatory information for initiating a schedule transfer.",
      "properties": {
        "scheduleStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the scheduled transfer.",
          "example": "2024-03-01T00:00:00Z"
        },
        "scheduleEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the scheduled transfer.",
          "example": "2027-03-01T00:00:00Z"
        },
        "scheduleExpression": {
          "description": "How often the scheduled transfer repeats.",
          "$ref": "#/definitions/ScheduleExpression"
        },
        "scheduleType": {
          "description": "The type of schedule.",
          "$ref": "#/definitions/ScheduleTransferType"
        }
      },
      "example": {
        "scheduleStartDate": "2024-03-01T00:00:00Z",
        "scheduleEndDate": "2027-03-01T00:00:00Z",
        "scheduleExpression": {
          "scheduleExpressionType": "RECURRING",
          "recurringFrequency": "WEEKLY"
        },
        "scheduleType": "TIME_BASED"
      }
    },
    "ScheduleExpression": {
      "type": "object",
      "description": "The configuration of the schedule.",
      "required": [
        "scheduleExpressionType"
      ],
      "properties": {
        "scheduleExpressionType": {
          "description": "The type of the scheduled transfer.",
          "$ref": "#/definitions/ScheduleExpressionType"
        },
        "recurringFrequency": {
          "description": "How often the scheduled transfer happens. This field is required if `scheduleExpressionType` is `RECURRING`; otherwise it should be empty.",
          "$ref": "#/definitions/RecurringFrequency"
        }
      }
    },
    "ScheduleExpressionType": {
      "type": "string",
      "description": "The type of scheduled transfer expression.",
      "enum": [
        "RECURRING",
        "ONE_TIME"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "RECURRING",
          "description": "The scheduled transfer is a recurring event."
        },
        {
          "value": "ONE_TIME",
          "description": "The scheduled transfer is a one-time event."
        }
      ]
    },
    "ScheduleTransferType": {
      "type": "string",
      "description": "The type of schedule the transfer is on. Schedules based on time patterns use EventBridge.",
      "enum": [
        "TIME_BASED"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "TIME_BASED",
          "description": "The schedule is based on time patterns using EventBridge. Supports recurring patterns (daily, weekly, biweekly, monthly) and one-time events. "
        }
      ]
    },
    "TransactionInitiationRequest": {
      "type": "object",
      "description": "Request body to initiate a transaction from a Seller Wallet bank account to another customer-defined bank account.",
      "properties": {
        "sourceAccountId": {
          "type": "string",
          "description": "The unique identifier of the source Amazon Seller Wallet bank account from which the money is debited.",
          "example": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI"
        },
        "destinationAccountId": {
          "type": "string",
          "description": "The unique identifier of the destination bank account where the money is deposited.",
          "example": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN"
        },
        "description": {
          "type": "string",
          "description": "A description of the transaction.",
          "example": "Payment to the delivery partner"
        },
        "destinationTransactionInstrument": {
          "description": "Details of the destination bank account in the transaction request.",
          "$ref": "#/definitions/TransactionInstrumentDetails"
        },
        "destinationAccountHolderAddress": {
          "description": "The address used to verify the bank account of the payee. This can be a person or business mailing address.",
          "$ref": "#/definitions/AccountHolderAddress"
        },
        "sourceAmount": {
          "description": "The transaction amount in the source account's currency format. Requests that use a currency other than source bank account currency will fail.",
          "$ref": "#/definitions/Currency"
        },
        "transferRateDetails": {
          "description": "The fees and foreign exchange rates applied to the transaction. Transfer Rate Preview is currently optional. This field is required when the third party honors the fees and rates of the Seller Wallet transaction.",
          "$ref": "#/definitions/TransferRatePreview"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the transaction was initiated in [ISO 8601 date time format](https://developer-docs.amazon.com/sp-api/docs/iso-8601).",
          "example": "2024-03-26T02:32:59.787Z"
        }
      },
      "required": [
        "sourceAccountId",
        "description",
        "destinationTransactionInstrument",
        "sourceAmount",
        "requestTime"
      ],
      "example": {
        "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
        "description": "Payment to the delivery partner",
        "sourceAmount": {
          "amount": 100.0,
          "currency": "USD"
        },
        "destinationTransactionInstrument": {
          "bankAccount": {
            "accountHolderName": "John Doe",
            "bankAccountNumberFormat": "BBAN",
            "bankAccountOwnershipType": "SELF",
            "routingNumber": "HBUKGB4B",
            "bankNumberFormat": "BASIC",
            "accountCountryCode": "CN",
            "accountCurrency": "CNY",
            "bankAccountNumberTail": "819"
          },
          "bankAccountNumber": "GB29RBOS60161331926819"
        },
        "destinationAccountHolderAddress": {
          "addressLine1": "333 Boren Ave N",
          "city": "Seattle",
          "state": "WA",
          "postalCode": "98109",
          "countryCode": "US"
        },
        "transferRateDetails" : {
          "baseAmount": {
            "currencyCode": "EUR",
            "currencyAmount": 500.00
          },
          "fxRateDetails": {
            "fxRateId": "UNIQUE_FX_RATE_ID_1",
            "baseRate": 7.6915,
            "effectiveFxRate": 7.6084,
            "rateDirection": "BUY"
          },
          "transferAmount": {
            "currencyCode": "CNY",
            "currencyAmount": 3804.20
          },
          "fees": [
            {
              "feeId": "Unique_FeeId_001",
              "feeType": "TRANSACTION_FEE",
              "feeRateValue": 0.9,
              "feeAmount": {
                "currencyCode": "EUR",
                "currencyAmount": 4.50
              }
            },
            {
              "feeId": "Unique_FeeId_002",
              "feeType": "TAX",
              "feeRateValue": 20.0,
              "feeAmount": {
                "currencyCode": "EUR",
                "currencyAmount": 0.90
              }
            }
          ]
        },
        "requestTime": "2024-03-26T02:32:59.787Z"
      }
    },
    "TransactionInstrumentDetails": {
      "type": "object",
      "description": "Details of the destination bank account in the transaction request.",
      "properties": {
        "bankAccount": {
          "description": "Details of the destination bank account.",
          "$ref": "#/definitions/BankAccount"
        },
        "bankAccountNumber": {
          "type": "string",
          "description": "The bank account number of the destination payment method.\n\n**Note:** This field is encrypted before Amazon receives it, so should not be used to generate `destAccountDigitalSignature`, and should not be included in the request signature.",
          "example": "GB29RBOS60161331926819"
        }
      },
      "required": [
        "bankAccount",
        "bankAccountNumber"
      ],
      "example": {
        "bankAccount": {
          "accountHolderName": "John Doe",
          "bankAccountNumberFormat": "IBAN",
          "bankAccountOwnershipType": "SELF",
          "routingNumber": "HBUKGB4B",
          "bankNumberFormat": "BASIC",
          "accountCountryCode": "EU",
          "accountCurrency": "EUR",
          "bankAccountNumberTail": "819"
        },
        "bankAccountNumber": "GB29RBOS60161331926819"
      }
    },
    "Transaction": {
      "type": "object",
      "description": "The current transaction status and historical details related to it.",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to the transaction."
        },
        "transactionType": {
          "description": "The type of the transaction.",
          "$ref": "#/definitions/TransactionType"
        },
        "transactionStatus": {
          "description": "The status of the transaction.",
          "$ref": "#/definitions/TransactionStatus"
        },
        "transactionRequestDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which the transaction was initiated."
        },
        "expectedCompletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expected completion date of the transaction.",
          "example": "2023-09-26T02:32:59.787Z"
        },
        "transactionActualCompletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The transaction's completion date."
        },
        "lastUpdateDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the most recent account balance update."
        },
        "requesterName": {
          "type": "string",
          "description": "The Amazon Seller Wallet customer who requested the transaction.",
          "example": "TPPOrgId"
        },
        "transactionRequesterSource": {
          "type": "string",
          "description": "The transaction initiation source. This value could be the Amazon portal or PISP name that the customer used to start the transaction."
        },
        "transactionDescription": {
          "type": "string",
          "description": "The description provided by the requester in the transaction request at time of transaction initiation."
        },
        "transactionSourceAccount": {
          "description": "The source bank account details in the transaction.",
          "$ref": "#/definitions/TransactionAccount"
        },
        "transactionDestinationAccount": {
          "description": "The destination bank account details in the transaction.",
          "$ref": "#/definitions/TransactionAccount"
        },
        "transactionRequestAmount": {
          "description": "The amount for which the transfer was initiated.",
          "$ref": "#/definitions/Currency"
        },
        "transferRateDetails": {
          "description": "The fees and rates applied on the transaction, as applicable.",
          "$ref": "#/definitions/TransferRatePreview"
        },
        "transactionFinalAmount": {
          "description": "The amount of completed transaction in the destination account currency. This value is only populated for international transactions",
          "$ref": "#/definitions/Currency"
        },
        "transactionFailureReason": {
          "type": "string",
          "description": "The reason the transaction failed, if applicable.",
          "example": "Insufficient Balance"
        }
      },
      "required": [
        "transactionId",
        "transactionType",
        "transactionStatus",
        "transactionRequestDate",
        "lastUpdateDate",
        "transactionRequesterSource",
        "transactionDescription",
        "transactionSourceAccount",
        "transactionRequestAmount",
        "transactionDestinationAccount",
        "transferRateDetails"
      ]
    },
    "TransactionAccount": {
      "type": "object",
      "description": "Details of the bank account involved in transaction.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to identify the account."
        },
        "bankAccountHolderName": {
          "type": "string",
          "description": "The account holder's name."
        },
        "bankName": {
          "type": "string",
          "description": "The name of the bank."
        },
        "bankAccountNumberFormat": {
          "description": "The format for the bank account number.",
          "$ref": "#/definitions/BankAccountNumberFormat"
        },
        "bankAccountNumberTail": {
          "type": "string",
          "description": "The last three digits of the bank account number."
        },
        "bankAccountCountryCode": {
          "type": "string",
          "description": "The two-digit country code, in ISO 3166 format. This field is optional for `transactionSourceAccount`, but is mandatory for `transactionDestinationAccount`."
        },
        "bankAccountCurrency": {
          "type": "string",
          "description": "The currency code in ISO 4217 format."
        }
      },
      "required": [
        "bankAccountHolderName",
        "bankName",
        "bankAccountNumberFormat",
        "bankAccountCurrency"
      ]
    },
    "TransactionListing": {
      "type": "object",
      "description": "A list of transactions.",
      "required": [
        "transactions"
      ],
      "properties": {
        "nextPageToken": {
          "description": "A token that you use to retrieve the next page of results. The response includes `nextPageToken` when the number of results exceeds 100. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages.",
          "type": "string",
          "example": "3493805734095308457308475"
        },
        "transactions": {
          "type": "array",
          "description": "A list of transactions.",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      }
    },
    "TransactionStatus": {
      "type": "string",
      "description": "The current status of the transaction.",
      "enum": [
        "FAILED",
        "FAILED_CREDITS_APPLIED",
        "INITIATED",
        "IN_PROGRESS",
        "PAYEE_UNDER_REVIEW",
        "SUCCESSFUL"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "FAILED",
          "description": "The transaction failed before completion."
        },
        {
          "value": "FAILED_CREDITS_APPLIED",
          "description": "The transaction failed after debit and credit had been applied back to the balance."
        },
        {
          "value": "INITIATED",
          "description": "The transaction was requested but not started yet."
        },
        {
          "value": "IN_PROGRESS",
          "description": "The transaction is in progress."
        },
        {
          "value": "PAYEE_UNDER_REVIEW",
          "description": "The destination account holder (beneficiary) is under review."
        },
        {
          "value": "SUCCESSFUL",
          "description": "The transaction is successfully processed."
        }
      ]
    },
    "TransactionType": {
      "type": "string",
      "description": "The type of transaction.",
      "enum": [
        "CREDIT",
        "DEBIT"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "CREDIT",
          "description": "Money is deposited into Amazon Seller Wallet account."
        },
        {
          "value": "DEBIT",
          "description": "Money is taken out of the Amazon Seller Wallet account."
        }
      ]
    },
    "TransferRatePreview": {
      "type": "object",
      "description": "The fees and foreign exchange rates applied to the transaction.\n\nIf the fees are in terms of the `baseAmount` (source account) currency, then the effective rate is equal to **1 - (fees * `baseRate` / `baseAmount`)**.\n\nIf the fees are in terms of the `transferAmount` (destination account) currency, then the effective rate is equal to **`baseRate` - (fees / `baseAmount`)**.\n\nIn the preceding expressions, **fees** is equal to the sum of all `feeAmount.currencyAmount` values in the `fees` array.",
      "required": [
        "baseAmount",
        "fxRateDetails",
        "transferAmount",
        "fees"
      ],
      "properties": {
        "baseAmount": {
          "description": "The base amount of the transaction.",
          "$ref": "#/definitions/Currency"
        },
        "fxRateDetails": {
          "description": "The foreign exchange rate value of the transaction.",
          "$ref": "#/definitions/FxRateDetails"
        },
        "transferAmount": {
          "description": "The final amount transferred, which includes both the fee deduction and currency conversion rate.",
          "$ref": "#/definitions/Currency"
        },
        "fees": {
          "type": "array",
          "description": "A list of fees.",
          "items": {
            "$ref": "#/definitions/Fee"
          }
        }
      }
    },
    "TransferSchedule": {
      "type": "object",
      "description": "Transfer schedule details and historical details related to it.",
      "properties": {
        "transferScheduleId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to the scheduled transfer."
        },
        "transactionType": {
          "description": "The type of transfer.",
          "$ref": "#/definitions/TransactionType"
        },
        "transactionSourceAccount": {
          "description": "Details of the source bank account in the scheduled transfer.",
          "$ref": "#/definitions/TransactionAccount"
        },
        "transactionDestinationAccount": {
          "description": "Details of the destination bank account in the scheduled transfer. Here `bankAccountCountryCode` is a required field.",
          "$ref": "#/definitions/TransactionAccount"
        },
        "transferScheduleStatus": {
          "description": "The type of transfer schedule. This information can be modified when you update a transfer schedule.",
          "$ref": "#/definitions/TransferScheduleStatus"
        },
        "transferScheduleInformation": {
          "description": "The fields required for the scheduled transfer. This information can be modified when you update a transfer schedule.",
          "$ref": "#/definitions/TransferScheduleInformation"
        },
        "paymentPreference": {
          "description": "The payment preference of the scheduled transfer. This information can be modified when you update a transfer schedule.",
          "$ref": "#/definitions/PaymentPreference"
        },
        "transferScheduleFailures": {
          "type": "array",
          "description": "A list of transfer schedule failures.",
          "items": {
            "$ref": "#/definitions/TransferScheduleFailures"
          }
        }
      },
      "required": [
        "transferScheduleId",
        "transactionType",
        "transactionDestinationAccount",
        "transferScheduleStatus",
        "transferScheduleInformation",
        "transferScheduleFailures"
      ],
      "example": {
        "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
        "transactionType": "DEBIT",
        "transactionSourceAccount" : {
          "accountId" : "sourceAccountIdCase200",
          "bankAccountHolderName" : "John Doe",
          "bankName" : "Amazon Seller Wallet",
          "bankAccountNumberFormat" : "IBAN",
          "bankAccountNumberTail" : "123",
          "bankAccountCurrency" : "GBP"
        },
        "transactionDestinationAccount" : {
          "bankAccountHolderName" : "Dane Shipping",
          "bankName" : "Royal Bank of Scotland",
          "bankAccountNumberFormat" : "IBAN",
          "bankAccountNumberTail" : "819",
          "bankAccountCurrency" : "GBP",
          "bankAccountCountryCode" : "EU"
        },
        "transferScheduleStatus": "ENABLED",
        "transferScheduleInformation": {
          "scheduleStartDate": "2024-03-01T00:00:00Z",
          "scheduleEndDate": "2027-03-01T00:00:00Z",
          "scheduleExpression": {
            "scheduleExpressionType": "RECURRING",
            "recurringFrequency": "WEEKLY"
          },
          "scheduleType": "TIME_BASED"
        },
        "paymentPreference": {
          "paymentPreferencePaymentType": "PERCENTAGE",
          "value": 25.5
        },
        "transferScheduleFailures": [{
          "transferScheduleFailureDate": "2024-04-01T10:30:00Z",
          "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
        }]
      }
    },
    "TransferScheduleFailures" : {
      "type": "object",
      "description": "The time of and reason for the transfer schedule failure.",
      "required": [
        "transferScheduleFailureDate",
        "transferScheduleFailureReason"
      ],
      "properties": {
        "transferScheduleFailureDate": {
          "type": "string",
          "format": "date-time",
          "description": "The transfer schedule failure date.",
          "x-example": "2024-03-01T10:30:00Z"
        },
        "transferScheduleFailureReason": {
          "type": "string",
          "description": "The reason listed for the failure of the transfer schedule.",
          "example": "INSUFFICIENT_BALANCE"
        }
      },
      "example": {
        "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
        "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
      }
    },
    "TransferScheduleListing": {
      "type": "object",
      "description": "A list of transfer schedules.",
      "required": [
        "transferSchedules"
      ],
      "properties": {
        "nextPageToken": {
          "description": "A token that you use to retrieve the next page of results. The response includes `nextPageToken` when the number of results exceeds 100. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages.",
          "type": "string",
          "example": "3493805734095308457308475"
        },
        "transferSchedules": {
          "type": "array",
          "description": "A list of transfer schedules.",
          "items": {
            "$ref": "#/definitions/TransferSchedule"
          }
        }
      }
    },
    "TransferScheduleRequest": {
      "type": "object",
      "description": "Request body to initiate a scheduled transfer from a Seller Wallet bank account to another customer-defined bank account.",
      "properties": {
        "sourceAccountId": {
          "type": "string",
          "description": "The unique identifier of the source Amazon Seller Wallet bank account from which money is debited.",
          "example": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI"
        },
        "sourceCurrencyCode": {
          "type": "string",
          "description": "The three-letter currency code of the source payment method country, in ISO 4217 format.",
          "example": "GBP"
        },
        "destinationAccountId": {
          "type": "string",
          "description": "The unique identifier of the destination bank account where the money is deposited.",
          "example": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN"
        },
        "destinationTransactionInstrument": {
          "description": "Details of the destination bank account in the transaction request.",
          "$ref": "#/definitions/TransactionInstrumentDetails"
        },
        "transactionType": {
          "description": "The type of the scheduled transaction.",
          "$ref": "#/definitions/TransactionType"
        },
        "transferScheduleInformation": {
          "description": "The configuration of the scheduled transfer.",
          "$ref": "#/definitions/TransferScheduleInformation"
        },
        "paymentPreference": {
          "description": "The payment preference of the scheduled transfer.",
          "$ref": "#/definitions/PaymentPreference"
        },
        "transferScheduleStatus": {
          "description": "The type of transaction schedule. This field is required when you update a transfer schedule.",
          "$ref": "#/definitions/TransferScheduleStatus"
        }
      },
      "required": [
        "sourceAccountId",
        "sourceCurrencyCode",
        "destinationAccountId",
        "destinationTransactionInstrument",
        "transactionType",
        "transferScheduleInformation",
        "paymentPreference"
      ],
      "example": {
        "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
        "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
        "sourceCurrencyCode": "USD",
        "destinationTransactionInstrument": {
          "bankAccount": {
            "accountHolderName": "John Doe",
            "bankAccountNumberFormat": "BBAN",
            "bankAccountOwnershipType": "SELF",
            "routingNumber": "HBUKGB4B",
            "bankNumberFormat": "BASIC",
            "accountCountryCode": "CN",
            "accountCurrency": "CNY",
            "bankAccountNumberTail": "819"
          },
          "bankAccountNumber": "GB29RBOS60161331926819"
        },
        "transactionType": "DEBIT",
        "transferScheduleInformation": {
          "scheduleStartDate": "2024-03-01T00:00:00Z",
          "scheduleEndDate": "2027-03-01T00:00:00Z",
          "scheduleExpression": {
            "scheduleExpressionType": "RECURRING",
            "recurringFrequency": "WEEKLY"
          },
          "scheduleType": "TIME_BASED"
        },
        "paymentPreference": {
          "paymentPreferencePaymentType": "PERCENTAGE",
          "value": 25.5
        },
        "transferScheduleStatus": "ENABLED"
      }
    },
    "TransferScheduleStatus":  {
      "type": "string",
      "description": "The schedule status of the transfer.",
      "enum": [
        "ENABLED",
        "DISABLED",
        "EXPIRED",
        "DELETED"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "ENABLED",
          "description": "The transfer schedule is enabled."
        },
        {
          "value": "DISABLED",
          "description": "The transfer schedule is disabled."
        },
        {
          "value": "EXPIRED",
          "description": "The transfer has expired and is no longer scheduled."
        },
        {
          "value": "DELETED",
          "description": "The transfer was scheduled but has been deleted."
        }
      ]
    }
  }
}
