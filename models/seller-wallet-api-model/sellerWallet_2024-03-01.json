{
  "swagger": "2.0",
  "info": {
    "title": "The Selling Partner API for Amazon Seller Wallet Open Banking API",
    "description": "The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.",
    "termsOfService": "http://spectrum.Amazon.com/terms/",
    "contact": {
      "name": "Selling Partner API Developer Support",
      "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
    },
    "license": {
      "name": "Apache License 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2024-03-01"
  },
  "host": "sellingpartnerapi-na.amazon.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "Everything about Amazon SW customer accounts"
    },
    {
      "name": "Transfer Preview",
      "description": "Access to all transfers with fees and the final amount with FX details in Amazon SW"
    },
    {
      "name": "Transactions",
      "description": "Access to all transactions in Amazon SW account"
    },
    {
      "name": "Transfer Schedule",
      "description": "Access to all transfer schedules in Amazon SW account"
    }
  ],
  "paths": {
    "/finances/transfers/wallet/2024-03-01/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get all Amazon SW accounts for the seller",
        "description": "Get Seller Wallet accounts for a seller.",
        "operationId": "listAccounts",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace for which items are returned.",
            "required": true,
            "type": "string",
            "x-example": "EU"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase200"
                      }
                    }
                  },
                  "response": {
                    "accounts" : [
                      {
                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                        "accountHolderName": "John Doe",
                        "bankAccountNumberFormat": "BBAN",
                        "bankName": "Amazon Seller Wallet",
                        "bankAccountOwnershipType": "SELF",
                        "routingNumber": "000000000",
                        "bankNumberFormat": "BASIC",
                        "accountCountryCode": "US",
                        "accountCurrency": "USD",
                        "bankAccountNumberTail": "000",
                        "bankAccountHolderStatus": "ACTIVE"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/BankAccountListing"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing digitalSignature.",
                        "details": "Digital Signature is missing for the request"
                      },
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC Certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for USMarketplace"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond within given SLA"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server Throttled Request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "marketplaceIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Find particular Amazon SW account by Amazon account identifier",
        "description": "Retrieve a Seller Wallet bank account by Amazon account identifier.",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the Amazon SW account",
            "required": true,
            "type": "string",
            "x-example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase200"
                      }
                    }
                  },
                  "response": {
                    "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                    "accountHolderName": "Jane Doe",
                    "bankAccountNumberFormat": "BBAN",
                    "bankName": "Amazon Seller Wallet",
                    "bankAccountOwnershipType": "SELF",
                    "routingNumber": "000000000",
                    "bankNumberFormat": "BASIC",
                    "accountCountryCode": "US",
                    "accountCurrency": "USD",
                    "bankAccountNumberTail": "000",
                    "bankAccountHolderStatus": "ACTIVE"
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/BankAccount"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing digitalSignature.",
                        "details": "Digital Signature is missing for the request"
                      },
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond within given SLA"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server Throttled Request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/accounts/{accountId}/balance": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Find balance in particular Amazon SW account by Amazon account identifier",
        "description": "Retrieve the balance in a given Seller Wallet bank account.",
        "operationId": "listAccountBalances",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the Amazon SW account",
            "required": true,
            "type": "string",
            "x-example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase200"
                      }
                    }
                  },
                  "response": {
                    "balances": [
                      {
                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                        "balanceType": "AVAILABLE",
                        "balanceAmount": 123.45,
                        "balanceCurrency": "USD",
                        "lastUpdateDate": "2024-03-01T10:30:00Z"
                      },
                      {
                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                        "balanceType": "LOCKED_IN",
                        "balanceAmount": 500.00,
                        "balanceCurrency": "USD",
                        "lastUpdateDate": "2024-03-01T10:30:00Z"
                      },
                      {
                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                        "balanceType": "TOTAL",
                        "balanceAmount": 623.45,
                        "balanceCurrency": "USD",
                        "lastUpdateDate": "2024-03-01T10:30:00Z"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/BalanceListing"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond within given SLA"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server Throttled Request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "accountIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transferPreview": {
      "get": {
        "tags": [
          "Transfer Preview"
        ],
        "summary": "Fetch potential fees that could be applied on a transaction on the basis of the source and destination country currency code",
        "description": "Returns list of potential fees on a transaction based on the source and destination country currency code",
        "operationId": "getTransferPreview",
        "parameters": [
          {
            "name": "sourceCountryCode",
            "in": "query",
            "description": "Represents 2 character country code of source transaction account in ISO 3166 standard format.",
            "required": true,
            "type": "string",
            "x-example": "US"
          },
          {
            "name": "sourceCurrencyCode",
            "in": "query",
            "description": "Represents 3 letter currency code in ISO 4217 standard format of the source transaction country.",
            "required": true,
            "type": "string",
            "x-example": "USD"
          },
          {
            "name": "destinationCountryCode",
            "in": "query",
            "description": "Represents 2 character country code of destination transaction account in ISO 3166 standard format.",
            "required": true,
            "type": "string",
            "x-example": "FR"
          },
          {
            "name": "destinationCurrencyCode",
            "in": "query",
            "description": "Represents 3 letter currency code in ISO 4217 standard format of the destination transaction country.",
            "required": true,
            "type": "string",
            "x-example": "EUR"
          },
          {
            "name": "baseAmount",
            "in": "query",
            "description": "Represents the base transaction amount without any markup fees, rates that will be used to get the transfer preview.",
            "required": true,
            "type": "number",
            "x-example": 1000.0
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "EU"
                      },
                      "sourceCurrencyCode": {
                        "value": "EUR"
                      },
                      "destinationCountryCode": {
                        "value": "CN"
                      },
                      "destinationCurrencyCode": {
                        "value": "CNY"
                      },
                      "baseAmount": {
                        "value": 500.00
                      }
                    }
                  },
                  "response": {
                    "baseAmount": {
                      "currencyCode": "EUR",
                      "currencyAmount": 500.00
                    },
                    "fxRateDetails": {
                      "fxRateId": "UNIQUE_FX_RATE_ID_1",
                      "baseRate": 7.6915,
                      "effectiveFxRate": 7.6084,
                      "rateDirection": "BUY"
                    },
                    "transferAmount": {
                      "currencyCode": "CNY",
                      "currencyAmount": 3804.20
                    },
                    "fees": [
                      {
                        "feeId": "Unique_FeeId_001",
                        "feeType": "TRANSACTION_FEE",
                        "feeRateValue": 0.9,
                        "feeAmount": {
                          "currencyCode": "EUR",
                          "currencyAmount": 4.50
                        }
                      },
                      {
                        "feeId": "Unique_FeeId_002",
                        "feeType": "TAX",
                        "feeRateValue": 20.0,
                        "feeAmount": {
                          "currencyCode": "EUR",
                          "currencyAmount": 0.90
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferRatePreview"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "AP"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing Input Parameter.",
                        "details": "Invalid sourceCountryCode"
                      },
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing Input Parameter.",
                        "details": "Missing destinationCurrencyCode"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "US"
                      },
                      "destinationCountryCode": {
                        "value": "US"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "US"
                      },
                      "sourceCurrencyCode": {
                        "value": "USD"
                      },
                      "destinationCountryCode": {
                        "value": "US"
                      },
                      "destinationCurrencyCode": {
                        "value": "USD"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "US"
                      },
                      "destinationCountryCode": {
                        "value": "HK"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "HK"
                      },
                      "destinationCountryCode": {
                        "value": "HK"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "EU"
                      },
                      "destinationCountryCode": {
                        "value": "EU"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sourceCountryCode": {
                        "value": "CN"
                      },
                      "destinationCountryCode": {
                        "value": "CN"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "The API will return all the transactions for a given Amazon SW account sorted by the transaction request date",
        "description": "Retrieve a list of transactions for a given Seller Wallet bank account.",
        "operationId": "listAccountTransactions",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "type": "string",
            "description": "ID of the Amazon SW account",
            "required": true,
            "x-example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "Pagination token to retrieve a specific page of results.",
            "required": false,
            "type": "string",
            "x-example": "Next Page Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase200"
                      }
                    }
                  },
                  "response": {
                    "nextPageToken" : "3493805734095308457308475",
                    "transactions" : [ {
                      "transactionId" : "amzn.transaction.AKJBNEFNL23R84V",
                      "transactionType" : "DEBIT",
                      "transactionStatus" : "PAYEE_UNDER_REVIEW",
                      "transactionRequestDate" : "2023-09-26T02:32:59.787Z",
                      "expectedCompletionDate" : "2023-09-26T02:32:59.787Z",
                      "transactionActualCompletionDate" : "2023-09-26T02:32:59.787Z",
                      "lastUpdateDate" : "2023-09-26T02:32:59.787Z",
                      "requesterName" : "TppOrgId",
                      "transactionRequesterSource" : "TPP",
                      "transactionDescription" : "Test transaction request",
                      "transactionSourceAccount" : {
                        "accountId" : "sourceAccountIdCase200",
                        "bankAccountHolderName" : "John Doe",
                        "bankName" : "Amazon Seller Wallet",
                        "bankAccountNumberFormat" : "IBAN",
                        "bankAccountNumberTail" : "123",
                        "bankAccountCurrency" : "GBP"
                      },
                      "transactionDestinationAccount" : {
                        "bankAccountHolderName" : "Dane Shipping",
                        "bankName" : "Royal Bank of Scotland",
                        "bankAccountNumberFormat" : "IBAN",
                        "bankAccountNumberTail" : "819",
                        "bankAccountCurrency" : "GBP",
                        "bankAccountCountryCode" : "UK"
                      },
                      "transactionRequestAmount" : {
                        "currencyCode" : "EUR",
                        "currencyAmount" : 500.00
                      },
                      "transferRateDetails" : {
                        "baseAmount": {
                          "currencyCode": "EUR",
                          "currencyAmount": 500.00
                        },
                        "fxRateDetails": {
                          "fxRateId": "UNIQUE_FX_RATE_ID_1",
                          "baseRate": 7.6915,
                          "effectiveFxRate": 7.6084,
                          "rateDirection": "BUY"
                        },
                        "transferAmount": {
                          "currencyCode": "CNY",
                          "currencyAmount": 3804.20
                        },
                        "fees": [
                          {
                            "feeId": "Unique_FeeId_001",
                            "feeType": "TRANSACTION_FEE",
                            "feeRateValue": 0.9,
                            "feeAmount": {
                              "currencyCode": "EUR",
                              "currencyAmount": 4.50
                            }
                          },
                          {
                            "feeId": "Unique_FeeId_002",
                            "feeType": "TAX",
                            "feeRateValue": 20.0,
                            "feeAmount": {
                              "currencyCode": "EUR",
                              "currencyAmount": 0.90
                            }
                          }
                        ]
                      },
                      "transactionFinalAmount" : {
                        "currencyCode" : "CNY",
                        "currencyAmount" : 3804.20
                      }
                    } ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransactionListing"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a transaction request from Amazon SW account to another customer provided account",
        "description": "Create a transaction request from a Seller Wallet account to another customer-provided account.",
        "operationId": "createTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Defines the actual payload of the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionInitiationRequest"
            }
          },
          {
            "name": "destAccountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the destination bank account details.",
            "required": true,
            "type": "string",
            "x-example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
          },
          {
            "name": "amountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the source currency transaction amount.",
            "required": true,
            "type": "string",
            "x-example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase200",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "Joane Packaging Ltd",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market Street",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "transactionId" : "amzn.transaction.ALNR19JCVWLN3E",
                    "transactionType" : "DEBIT",
                    "transactionStatus" : "PAYEE_UNDER_REVIEW",
                    "transactionRequestDate" : "2023-09-26T02:32:59.787Z",
                    "expectedCompletionDate" : "2023-09-26T02:32:59.787Z",
                    "transactionActualCompletionDate" : "2023-09-30T02:32:59.787Z",
                    "lastUpdateDate" : "2023-09-26T02:32:59.787Z",
                    "requesterName" : "TppOrgId",
                    "transactionRequesterSource" : "TPP",
                    "transactionDescription" : "Test transaction request",
                    "transactionSourceAccount" : {
                      "accountId" : "sourceAccountIdCase200",
                      "bankAccountHolderName" : "John Doe",
                      "bankName" : "Amazon Seller Wallet",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountCurrency" : "GBP"
                    },
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Johnny Packaging",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transactionRequestAmount" : {
                      "currencyCode" : "EUR",
                      "currencyAmount" : 500.00
                    },
                    "transferRateDetails" : {
                      "baseAmount": {
                        "currencyCode": "EUR",
                        "currencyAmount": 500.00
                      },
                      "fxRateDetails": {
                        "fxRateId": "UNIQUE_FX_RATE_ID_1",
                        "baseRate": 7.6915,
                        "effectiveFxRate": 7.6084,
                        "rateDirection": "BUY"
                      },
                      "transferAmount": {
                        "currencyCode": "CNY",
                        "currencyAmount": 3804.20
                      },
                      "fees": [
                        {
                          "feeId": "Unique_FeeId_001",
                          "feeType": "TRANSACTION_FEE",
                          "feeRateValue": 0.9,
                          "feeAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 4.50
                          }
                        },
                        {
                          "feeId": "Unique_FeeId_002",
                          "feeType": "TAX",
                          "feeRateValue": 20.0,
                          "feeAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 0.90
                          }
                        }
                      ]
                    },
                    "transactionFinalAmount" : {
                      "currencyCode" : "CNY",
                      "currencyAmount" : 3804.20
                    }
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/Transaction"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase400",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "Johnny Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market Street",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing signature.",
                        "details": "Missing addressDigitalSignature"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase403",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "Johnny Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market Street",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase404",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market Street",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for invalid SourceAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase408",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "addressLine2": "Unit 101",
                            "city": "City of Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "The request was well-formed (i.e., syntactically correct) but could not be processed because of some restrictions like insufficient funds, transaction limit breach, etc.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase422",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InsufficientBalance",
                        "message": "Insufficient Balance",
                        "details": "Insufficient Balance"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase429",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase500",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "addressLine2": "Unit 101",
                            "city": "Edinburgh",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body":{
                        "value": {
                          "sourceAccountId":"sourceAccountIdCase503",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankAccountNumberFormat": "IBAN",
                              "bankName": "Royal Bank of Scotland",
                              "bankAccountOwnershipType": "THIRD_PARTY",
                              "routingNumber": "RBOSGB2L",
                              "bankNumberFormat": "BASIC",
                              "accountCountryCode": "GB",
                              "accountCurrency": "GBP",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "destinationAccountHolderAddress": {
                            "addressLine1": "4 East Market St",
                            "city": "Edinburgh",
                            "addressLine2": "Unit 101",
                            "state": "Alba",
                            "postalCode": "EH88BG",
                            "country": "United Kingdom",
                            "countryCode": "UK"
                          },
                          "sourceAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 1000.0
                          },
                          "requestTime": "2023-09-26T01:21:53.002Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Find particular Amazon SW account transaction by Amazon transaction identifier",
        "description": "Returns a transaction",
        "operationId": "getTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "ID of the Amazon SW transaction",
            "required": true,
            "type": "string",
            "x-example": "amzn1.transaction.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase200"
                      }
                    }
                  },
                  "response": {
                    "transactionId" : "amzn.transaction.AKJBNEFNL23R84V",
                    "transactionType" : "DEBIT",
                    "transactionStatus" : "PAYEE_UNDER_REVIEW",
                    "transactionRequestDate" : "2023-09-26T02:32:59.787Z",
                    "expectedCompletionDate" : "2023-09-26T02:32:59.787Z",
                    "transactionActualCompletionDate" : "2023-09-26T02:32:59.787Z",
                    "lastUpdateDate" : "2023-09-26T02:32:59.787Z",
                    "requesterName" : "TppOrgId",
                    "transactionRequesterSource" : "TPP",
                    "transactionDescription" : "Test transaction request",
                    "transactionSourceAccount" : {
                      "accountId" : "sourceAccountIdCase200",
                      "bankAccountHolderName" : "John Doe",
                      "bankName" : "Amazon Seller Wallet",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "123",
                      "bankAccountCurrency" : "GBP"
                    },
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Dane Shipping",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transactionRequestAmount" : {
                      "currencyCode" : "EUR",
                      "currencyAmount" : 500.00
                    },
                    "transferRateDetails" : {
                      "baseAmount": {
                        "currencyCode": "EUR",
                        "currencyAmount": 500.00
                      },
                      "fxRateDetails": {
                        "fxRateId": "UNIQUE_FX_RATE_ID_1",
                        "baseRate": 7.6915,
                        "effectiveFxRate": 7.6084,
                        "rateDirection": "BUY"
                      },
                      "transferAmount": {
                        "currencyCode": "CNY",
                        "currencyAmount": 3804.20
                      },
                      "fees": [
                        {
                          "feeId": "Unique_FeeId_001",
                          "feeType": "TRANSACTION_FEE",
                          "feeRateValue": 0.9,
                          "feeAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 4.50
                          }
                        },
                        {
                          "feeId": "Unique_FeeId_002",
                          "feeType": "TAX",
                          "feeRateValue": 20.0,
                          "feeAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 0.90
                          }
                        }
                      ]
                    },
                    "transactionFinalAmount" : {
                      "currencyCode" : "CNY",
                      "currencyAmount" : 3804.20
                    }
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/Transaction"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "BankAccount not found.",
                        "details": "BankAccount doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transactionId": {
                        "value": "transactionIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transferSchedules": {
      "get": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "The API will return all the transfer schedules for a given Amazon SW account",
        "description": "Retrieve transfer schedules of a Seller Wallet bank account.",
        "operationId": "listTransferSchedules",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "type": "string",
            "description": "ID of the Amazon SW account",
            "required": true,
            "x-example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "Pagination token to retrieve a specific page of results.",
            "required": false,
            "type": "string",
            "x-example": "Next Page Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase200"
                      }
                    }
                  },
                  "response": {
                    "nextPageToken" : "3493805734095308457308475",
                    "transferSchedules" : [ {
                      "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                      "transactionType": "DEBIT",
                      "transactionSourceAccount" : {
                        "accountId" : "sourceAccountIdCase200",
                        "bankAccountHolderName" : "John Doe",
                        "bankName" : "Amazon Seller Wallet",
                        "bankAccountNumberFormat" : "IBAN",
                        "bankAccountNumberTail" : "123",
                        "bankAccountCurrency" : "GBP"
                      },
                      "transactionDestinationAccount" : {
                        "bankAccountHolderName" : "Dane Shipping",
                        "bankName" : "Royal Bank of Scotland",
                        "bankAccountNumberFormat" : "IBAN",
                        "bankAccountNumberTail" : "819",
                        "bankAccountCurrency" : "GBP",
                        "bankAccountCountryCode" : "EU"
                      },
                      "transferScheduleStatus": "ENABLED",
                      "transferScheduleInformation": {
                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                        "scheduleExpression": {
                          "scheduleExpressionType": "RECURRING",
                          "recurringFrequency": "WEEKLY"
                        },
                        "scheduleType": "TIME_BASED"
                      },
                      "paymentPreference": {
                        "paymentPreferencePaymentType": "PERCENTAGE",
                        "value": 25.5
                      },
                      "transferScheduleFailures": [{
                        "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                        "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                      }]
                    } ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferScheduleListing"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Account not found.",
                        "details": "Account doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "accountId": {
                        "value": "sourceAccountIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "Create a transfer schedule request from Amazon SW account to another customer provided account",
        "description": "Create a transfer schedule request from a Seller Wallet account to another customer-provided account.",
        "operationId": "createTransferSchedule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Defines the actual payload of the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferScheduleRequest"
            }
          },
          {
            "name": "destAccountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the destination bank account details.",
            "required": true,
            "type": "string",
            "x-example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
          },
          {
            "name": "amountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the source currency transaction amount.",
            "required": true,
            "type": "string",
            "x-example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "transactionType": "DEBIT",
                    "transactionSourceAccount" : {
                      "accountId" : "amzn.account.AAJKBWEF193EUBKWDVCS",
                      "bankAccountHolderName" : "John Doe",
                      "bankName" : "Amazon Seller Wallet",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "123",
                      "bankAccountCurrency" : "GBP"
                    },
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Dane Shipping",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transferScheduleStatus": "ENABLED",
                    "transferScheduleInformation": {
                      "scheduleStartDate": "2024-03-01T00:00:00Z",
                      "scheduleEndDate": "2027-03-01T00:00:00Z",
                      "scheduleExpression": {
                        "scheduleExpressionType": "RECURRING",
                        "recurringFrequency": "WEEKLY"
                      },
                      "scheduleType": "TIME_BASED"
                    },
                    "paymentPreference": {
                      "paymentPreferencePaymentType": "PERCENTAGE",
                      "value": 25.5
                    },
                    "transferScheduleFailures": [{
                      "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                      "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                    }]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase400",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing signature.",
                        "details": "Missing addressDigitalSignature"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase403",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase404",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Account not found.",
                        "details": "Account doesn't exists for invalid SourceAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase408",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "Transfer schedule already exists for same source and destination account combination.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase409",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "919"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926919"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2025-03-01T00:00:00Z",
                            "scheduleEndDate": "2026-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestConflict",
                        "message": "Request Conflict",
                        "details": "Transfer schedule already exists for same source and destination account combination."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase429",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase500",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "sourceAccountId": "sourceAccountIdCase503",
                          "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                          "sourceCurrencyCode": "USD",
                          "destinationTransactionInstrument": {
                            "bankAccount": {
                              "accountHolderName": "John Doe",
                              "bankNumberFormat": "IBAN",
                              "bankAccountOwnershipType": "SELF_ACCOUNT",
                              "routingNumber": "HBUKGB4B",
                              "accountCountryCode": "EU",
                              "accountCurrency": "EUR",
                              "bankAccountNumberTail": "819"
                            },
                            "bankAccountNumber": "GB29RBOS60161331926819"
                          },
                          "transactionType": "DEBIT",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleStatus": "ENABLED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "Update a transfer schedule information. Only fields (i.e; transferScheduleInformation, paymentPreference, transferScheduleStatus) in the request body can be updated.",
        "description": "Returns a transfer belonging to the updated scheduled transfer request",
        "operationId": "updateTransferSchedule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Defines the actual payload of the scheduled transfer request that is to be updated.\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferSchedule"
            }
          },
          {
            "name": "destAccountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the destination bank account details.",
            "required": true,
            "type": "string",
            "x-example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
          },
          {
            "name": "amountDigitalSignature",
            "in": "header",
            "description": "Digital signature for the source currency transaction amount.",
            "required": true,
            "type": "string",
            "x-example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase200",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "transactionType": "DEBIT",
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Dane Shipping",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transferScheduleStatus": "ENABLED",
                    "transferScheduleInformation": {
                      "scheduleStartDate": "2024-03-01T00:00:00Z",
                      "scheduleEndDate": "2027-03-01T00:00:00Z",
                      "scheduleExpression": {
                        "scheduleExpressionType": "RECURRING",
                        "recurringFrequency": "WEEKLY"
                      },
                      "scheduleType": "TIME_BASED"
                    },
                    "paymentPreference": {
                      "paymentPreferencePaymentType": "PERCENTAGE",
                      "value": 25.5
                    },
                    "transferScheduleFailures": [{
                      "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                      "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                    }]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase400",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing signature.",
                        "details": "Missing addressDigitalSignature"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase403",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid request.",
                        "details": "Request body provided is invalid."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase404",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Account not found.",
                        "details": "Account doesn't exists for invalid SourceAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase408",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase429",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase500",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "transferScheduleId": "transferScheduleIdCase503",
                          "transactionType": "DEBIT",
                          "transactionDestinationAccount" : {
                            "bankAccountHolderName" : "Dane Shipping",
                            "bankName" : "Royal Bank of Scotland",
                            "bankAccountNumberFormat" : "IBAN",
                            "bankAccountNumberTail" : "819",
                            "bankAccountCurrency" : "GBP",
                            "bankAccountCountryCode" : "EU"
                          },
                          "transferScheduleStatus": "ENABLED",
                          "transferScheduleInformation": {
                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                            "scheduleExpression": {
                              "scheduleExpressionType": "RECURRING",
                              "recurringFrequency": "WEEKLY"
                            },
                            "scheduleType": "TIME_BASED"
                          },
                          "paymentPreference": {
                            "paymentPreferencePaymentType": "PERCENTAGE",
                            "value": 25.5
                          },
                          "transferScheduleFailures": [{
                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                          }]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "Delete a transaction request that is scheduled from Amazon SW account to another customer provided account",
        "description": "Delete a transaction request that is scheduled from a Seller Wallet account to another customer-provided account.",
        "operationId": "deleteScheduleTransaction",
        "parameters": [
          {
            "name": "transferScheduleId",
            "description": "A unique reference id for a scheduled transfer",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "amzn1.scheduletransfer.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the transfer schedule.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase200"
                      }
                    }
                  },
                  "response": {
                    "code" : "Successful",
                    "message" : "Deleted transfer schedule",
                    "details" : "Deleted transfer schedule for ID transferScheduleIdCase200"
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/DeleteTransferSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing signature.",
                        "details": "Missing addressDigitalSignature"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Transfer Schedule not found.",
                        "details": "Transfer schedule id doesn't exists for invalid TransferScheduleId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/transfers/wallet/2024-03-01/transferSchedules/{transferScheduleId}": {
      "get": {
        "tags": [
          "Transfer Schedule"
        ],
        "summary": "Find particular Amazon SW account transfer schedule by Amazon transfer schedule identifier",
        "description": "Find a particular Seller Wallet account transfer schedule.",
        "operationId": "getTransferSchedule",
        "parameters": [
          {
            "name": "transferScheduleId",
            "in": "path",
            "description": "Schedule ID of the Amazon SW transfer",
            "required": true,
            "type": "string",
            "x-example": "amzn1.transferschedule.AKNWCDNVP3FNJDCLK876"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdcase200"
                      }
                    }
                  },
                  "response": {
                    "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "transactionType": "DEBIT",
                    "transactionSourceAccount" : {
                      "accountId" : "sourceAccountIdCase200",
                      "bankAccountHolderName" : "John Doe",
                      "bankName" : "Amazon Seller Wallet",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "123",
                      "bankAccountCurrency" : "GBP"
                    },
                    "transactionDestinationAccount" : {
                      "bankAccountHolderName" : "Dane Shipping",
                      "bankName" : "Royal Bank of Scotland",
                      "bankAccountNumberFormat" : "IBAN",
                      "bankAccountNumberTail" : "819",
                      "bankAccountCurrency" : "GBP",
                      "bankAccountCountryCode" : "EU"
                    },
                    "transferScheduleStatus": "ENABLED",
                    "transferScheduleInformation": {
                      "scheduleStartDate": "2024-03-01T00:00:00Z",
                      "scheduleEndDate": "2027-03-01T00:00:00Z",
                      "scheduleExpression": {
                        "scheduleExpressionType": "RECURRING",
                        "recurringFrequency": "WEEKLY"
                      },
                      "scheduleType": "TIME_BASED"
                    },
                    "paymentPreference": {
                      "paymentPreferencePaymentType": "PERCENTAGE",
                      "value": 25.5
                    },
                    "transferScheduleFailures": [{
                      "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                      "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                    }]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/TransferSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or Missing wacCertificate.",
                        "details": "WAC certificate is missing for the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedRequest",
                        "message": "Invalid WAC certificate.",
                        "details": "NCA Status for the certificate is invalid"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "Account not found.",
                        "details": "Account doesn't exists for InvalidAccountId"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "408": {
            "description": "Request Timed Out.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase408"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestTimedOut",
                        "message": "Request Timed Out",
                        "details": "Server did not respond in time"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RequestThrottled",
                        "message": "Request Throttled",
                        "details": "Server throttled the request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalServerError",
                        "message": "Internal Server Error",
                        "details": "Internal Server Error Occurred"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "transferScheduleId": {
                        "value": "transferScheduleIdCase503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Server Unavailable",
                        "details": "Server is not accepting request"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountHolderAddress": {
      "type": "object",
      "description": "Address for bank account verification of the Payee. For example, this can be a person or business mailing address\n",
      "properties": {
        "addressLine1": {
          "type": "string",
          "description": "Address Line 1 of the public address\n",
          "example": "678 JFK Street"
        },
        "addressLine2": {
          "type": "string",
          "description": "Address Line 2 of the public address\n",
          "example": "Unit 415"
        },
        "city": {
          "type": "string",
          "description": "City name of the public address\n",
          "example": "Seattle"
        },
        "state": {
          "type": "string",
          "description": "State name of the public address. This is the state or region for China-based addresses.",
          "example": "WA"
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code of the public address\n",
          "example": "98109"
        },
        "country": {
          "type": "string",
          "description": "Country name of the public address\n",
          "example": "United States"
        },
        "countryCode": {
          "type": "string",
          "description": "The two digit country code, in ISO 3166 format.\n",
          "example": "US"
        }
      },
      "example": {
        "addressLine1": "678 JFK Street",
        "city": "Seattle",
        "state": "WA",
        "postalCode": "98109",
        "countryCode": "US"
      },
      "required": [
        "addressLine1",
        "city",
        "state",
        "postalCode",
        "countryCode"
      ]
    },
    "BankAccount": {
      "type": "object",
      "description": "Details of an Amazon SW bank account, used to hold money earned by a SW customer by selling items. NOTE: Not including account_links, short cut links to the account balance and transactions -> since not mandatory\n",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to identify the account\n",
          "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
        },
        "accountHolderName": {
          "type": "string",
          "description": "BankAccount holder's name (expected to be Amazon customer)\n",
          "example": "John Doe"
        },
        "bankAccountNumberFormat": {
          "description": "Format in which the Bank BankAccount is provided\n",
          "$ref": "#/definitions/BankAccountNumberFormat"
        },
        "bankName": {
          "type": "string",
          "description": "The name of the bank, for all Amazon Seller Wallet account the value will be Amazon Seller Wallet\n",
          "example": "Bank Of America"
        },
        "bankAccountOwnershipType": {
          "description": "Type of the Bank BankAccount is provided, for all Amazon Seller Wallet account the value will be SELF\n",
          "$ref": "#/definitions/BankAccountOwnershipType"
        },
        "routingNumber": {
          "type": "string",
          "description": "Routing number for automated clearing house transfers, for all Amazon Seller Wallet account the value will be denoted by nine cosecutive 0's, \n",
          "example": "026009593"
        },
        "bankNumberFormat": {
          "description": "Bank account number format or routing number type.\n",
          "$ref": "#/definitions/BankNumberFormat"
        },
        "accountCountryCode": {
          "type": "string",
          "description": "The two digit country code, in ISO 3166 format.\n",
          "example": "US"
        },
        "accountCurrency": {
          "type": "string",
          "description": "BankAccount currency code in ISO 4217 format\n",
          "example": "USD"
        },
        "bankAccountNumberTail": {
          "type": "string",
          "description": "Last 3 digit of the bank account number, for all Amazon Seller Wallet account the value will be three consecutive 0's\n",
          "example": "666"
        },
        "bankAccountHolderStatus": {
          "description": "Bank account holder compliance status\n",
          "$ref": "#/definitions/BankAccountHolderStatus"
        }
      },
      "required": [
        "accountHolderName",
        "bankAccountNumberFormat",
        "bankAccountOwnershipType",
        "routingNumber",
        "bankNumberFormat",
        "accountCountryCode",
        "accountCurrency",
        "bankAccountNumberTail"
      ]
    },
    "BankAccountListing": {
      "type": "object",
      "description": "Struct that holds collection of accounts.",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "description": "Collection that holds BankAccount\n",
          "items": {
            "$ref": "#/definitions/BankAccount"
          }
        }
      }
    },
    "Balance": {
      "type": "object",
      "description": "Specifies the balance amount in the Amazon SW bank account",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to identify the account\n",
          "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
        },
        "balanceType": {
          "description": "Type of the balance\n",
          "$ref": "#/definitions/BalanceType"
        },
        "balanceAmount": {
          "description": "The balance amount in number format\n",
          "$ref": "#/definitions/BigDecimal"
        },
        "balanceCurrency": {
          "type": "string",
          "description": "The Amazon SW bank account currency code in ISO 4217 format\n",
          "example": "USD"
        },
        "lastUpdateDate": {
          "type": "string",
          "format": "date-time",
          "description": "The last update date on the account balance\n"
        }
      },
      "required": [
        "accountId",
        "balanceAmount",
        "balanceCurrency",
        "lastUpdateDate"
      ],
      "example": {
        "accountId" : "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
        "balanceType" : "AVAILABLE",
        "balanceAmount" : 123.45,
        "balanceCurrency" : "USD",
        "lastUpdateDate" : "2024-03-01T10:30:00Z"
      }
    },
    "BalanceListing": {
      "type": "object",
      "description": "Struct that holds list of balances on the seller account.",
      "properties": {
        "balances": {
          "type": "array",
          "description": "Collection that holds list of balances on the account\n",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        }
      },
      "example": {
        "balances" : [ {
          "accountId" : "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
          "balanceType" : "AVAILABLE",
          "balanceAmount" : 123.45,
          "balanceCurrency" : "USD",
          "lastUpdateDate" : "2024-03-01T10:30:00Z"
        }, {
          "accountId" : "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
          "balanceType" : "LOCKED_IN",
          "balanceAmount" : 500.0,
          "balanceCurrency" : "USD",
          "lastUpdateDate" : "2024-03-01T10:30:00Z"
        }, {
          "accountId" : "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
          "balanceType" : "TOTAL",
          "balanceAmount" : 623.45,
          "balanceCurrency" : "USD",
          "lastUpdateDate" : "2024-03-01T10:30:00Z"
        } ]
      }
    },
    "BalanceType": {
      "type": "string",
      "description": "Represent a bank account balance type.",
      "enum": [
        "AVAILABLE",
        "LOCKED_IN",
        "LOCKED_OUT",
        "TOTAL"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "AVAILABLE",
          "description": "Available balance that is accessible to the seller."
        },
        {
          "value": "LOCKED_IN",
          "description": "The incoming balance in sellers account."
        },
        {
          "value": "LOCKED_OUT",
          "description": "The outgoing balance from sellers account"
        },
        {
          "value": "TOTAL",
          "description": "Total balance in the sellers account."
        }
      ]
    },
    "BankAccountNumberFormat": {
      "type": "string",
      "description": "The format of the bank account number.",
      "enum": [
        "IBAN",
        "BBAN"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "IBAN",
          "description": "International Bank BankAccount Number."
        },
        {
          "value": "BBAN",
          "description": "Basic Bank BankAccount Number which is Domestic bank accounts."
        }
      ]
    },
    "BankAccountHolderStatus": {
      "type": "string",
      "description": "Represents status of the Amazon Seller Wallet accountholder",
      "enum": [
        "ACTIVE",
        "INACTIVE",
        "UNDER_REVIEW",
        "VERIFICATION_FAILED"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "ACTIVE",
          "description": "BankAccount holder is Active."
        },
        {
          "value": "INACTIVE",
          "description": "BankAccount holder is Inactive and cannot be used for transactions."
        },
        {
          "value": "UNDER_REVIEW",
          "description": "BankAccount holder is currently under review."
        },
        {
          "value": "VERIFICATION_FAILED",
          "description": "BankAccount holder KYC(Know Your Customer) verification has failed."
        }
      ]
    },
    "BankAccountOwnershipType": {
      "type": "string",
      "description": "Represents destination bank account's ownership type.",
      "enum": [
        "THIRD_PARTY",
        "SELF",
        "GOVERNMENT"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "THIRD_PARTY",
          "description": "BankAccount is not officially owned by the Payment Service User who is viewing the account and initiating the transaction."
        },
        {
          "value": "SELF",
          "description": "BankAccount officially owned by the Payment Service User who is viewing the account and initiating the transaction."
        },
        {
          "value": "GOVERNMENT",
          "description": "BankAccount officially owned by some Government entity and is used for service fee / tax collection."
        }
      ]
    },
    "BankNumberFormat": {
      "type": "string",
      "description": "Represents a format of a bank number also called routing number type",
      "enum": [
        "BIC",
        "BASIC"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "BIC",
          "description": "Business Identifier Code. In ISO 9362 format."
        },
        {
          "value": "BASIC",
          "description": "Basic means the bank number has a special format specific to the country code provided, such as ABA routing number."
        }
      ]
    },
    "BigDecimal": {
      "type": "number",
      "description": "A decimal number such as amount or FX rate."
    },
    "Currency": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The three-digit currency code in ISO 4217 format."
        },
        "currencyAmount": {
          "description": "The monetary value.",
          "$ref": "#/definitions/BigDecimal"
        }
      },
      "description": "A currency type and amount."
    },
    "DeleteTransferSchedule": {
      "description": "Response returned when the schedule transfer's delete request is successful.",
      "properties": {
        "code": {
          "description": "A success code that specifies the delete operation was successful. eg:HTTP 200.",
          "type": "string"
        },
        "message": {
          "description": "A message that describes the success condition of the delete schedule transaction.",
          "type": "string"
        },
        "details": {
          "description": "Additional details that can help the caller understand the operation execution.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "type": "object"
    },
    "Error": {
      "description": "Error response returned when the request is unsuccessful.",
      "properties": {
        "code": {
          "description": "An error code that identifies the type of error that occurred.",
          "type": "string"
        },
        "message": {
          "description": "A message that describes the error condition.",
          "type": "string"
        },
        "details": {
          "description": "Additional details that can help the caller understand or fix the issue.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "type": "object"
    },
    "ErrorList": {
      "type": "object",
      "description": "A list of error responses returned when a request is unsuccessful.",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "description": "List of errors\n",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "FxRateDetails": {
      "type": "object",
      "required": [
        "fxRateId",
        "baseRate",
        "effectiveFxRate",
        "rateDirection"
      ],
      "properties": {
        "fxRateId": {
          "type": "string",
          "description": "Unique identifier assigned to the fees/foreign exchange Rate of a transaction.\n"
        },
        "baseRate": {
          "description": "This is the rate that will be market foreign exchange rate. For example: 1USD -> 86.0 INR.\n",
          "$ref": "#/definitions/BigDecimal"
        },
        "effectiveFxRate": {
          "description": "Displays the foreign exchange rate which will be all rates and fees baked in (i.e; markup fees), example: market fx rate and international transaction fee.\n",
          "$ref": "#/definitions/BigDecimal"
        },
        "rateDirection": {
          "description": "Rate Direction can refer to the way final amount is calculated.\n",
          "$ref": "#/definitions/RateDirection"
        }
      },
      "description": "Foreign exchange rate details displayed when transfer preview is requested.\n",
      "example": {
        "fxRateId": "UNIQUE_FX_RATE_ID_1",
        "baseRate": 7.20,
        "effectiveFxRate": 7.25,
        "rateDirection": "BUY"
      }
    },
    "Fee": {
      "type": "object",
      "required": [
        "feeId",
        "feeType",
        "feeRateValue",
        "feeAmount"
      ],
      "properties": {
        "feeId": {
          "type": "string",
          "description": "Unique identifier assigned to the Fee.\n"
        },
        "feeType": {
          "description": "Displays type of the Fee.\n",
          "$ref": "#/definitions/FeeType"
        },
        "feeRateValue": {
          "description": "Value of the fee that is applied which is always be defined in PERCENTAGE format. For instance 5% fee.\n",
          "$ref": "#/definitions/BigDecimal"
        },
        "feeAmount": {
          "description": "Displays actual value of the fee in numeric format.\n",
          "$ref": "#/definitions/Currency"
        }
      },
      "description": "If the fees is in baseAmount (sourceAccount) currency, effectiveRate =  (baseAmount - sum(fees.feeAmount.currencyAmount)) * baseRate) / baseAmount. If the fees is in transferAmount (destinationAccount) currency, effectiveRate =  (( baseAmount * baseRate ) -  sum(fees.feeAmount.currencyAmount )) / baseAmount\n"
    },
    "FeeType": {
      "type": "string",
      "description": "Represents different types of fees that can be applied on a transaction.",
      "enum": [
        "MISCELLANEOUS_FEE",
        "TAX",
        "TRANSACTION_FEE"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "MISCELLANEOUS_FEE",
          "description": "Represents any other service charges or additional fee applied by a transaction executor service."
        },
        {
          "value": "TAX",
          "description": "Represents tax fees if applied on any transaction."
        },
        {
          "value": "TRANSACTION_FEE",
          "description": "Represents a per transaction fee that can be applied by a transaction executor service. This can be both INTERNATIONAL and DOMESTIC fees"
        }
      ]
    },
    "RateDirection": {
      "type": "string",
      "description": "Represents the rate direction at which the transaction is performed.",
      "enum": [
        "BUY",
        "SELL"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "BUY",
          "description": "Buy value represents the rate if customer is buying the source currency.\n"
        },
        {
          "value": "SELL",
          "description": "Sell value represents the rate if customer is selling the source currency.\n"
        }
      ]
    },
    "PaymentPreference" :{
      "type": "object",
      "description": "Payment preference type in which transfer is being scheduled\n",
      "required": [
        "paymentPreferencePaymentType",
        "value"
      ],
      "properties": {
        "paymentPreferencePaymentType": {
          "description": "Specifies the preferred payment type for the scheduled transaction eg:PERCENTAGE of certain total amount in account\n",
          "$ref": "#/definitions/PaymentPreferencePaymentType"
        },
        "value": {
          "description": "This field would be used to populate the value of the payment preference. If Percentage its 5% if amount then it will be like 100$\n",
          "$ref": "#/definitions/BigDecimal"
        }
      }
    },
    "PaymentPreferencePaymentType": {
      "type": "string",
      "description": "Represent a type of payment preference.",
      "enum": [
        "PERCENTAGE",
        "AMOUNT"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "PERCENTAGE",
          "description": "The schedule transfer in percentage."
        },
        {
          "value": "AMOUNT",
          "description": "The schedule transfer in amount value."
        }
      ]
    },
    "RecurringFrequency": {
      "type": "string",
      "description": "Represent parameters to specify recurrence of the scheduled transfer.",
      "enum": [
        "BIWEEKLY",
        "DAILY",
        "MONTHLY",
        "WEEKLY"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "BIWEEKLY",
          "description": "The transfer repeats every two weeks."
        },
        {
          "value": "DAILY",
          "description": "The transfer repeats every day."
        },
        {
          "value": "MONTHLY",
          "description": "The transfer repeats every month."
        },
        {
          "value": "WEEKLY",
          "description": "The transfer repeats every week."
        }
      ]
    },
    "TransferScheduleInformation": {
      "type": "object",
      "description": "Parameters containing information required for initiating a schedule transfer\n",
      "properties": {
        "scheduleStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "Field to specify start date of the scheduled transfer\n",
          "example": "2024-03-01T00:00:00Z"
        },
        "scheduleEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "Field to specify end date of the scheduled transfer\n",
          "example": "2027-03-01T00:00:00Z"
        },
        "scheduleExpression": {
          "description": "Field to specify expression for how often the schedule transfer repeats. Refer to this documentation: https://docs.aws.amazon.com/scheduler/latest/APIReference/API_CreateSchedule.html\n",
          "$ref": "#/definitions/ScheduleExpression"
        },
        "scheduleType": {
          "description": "Field to specify type of the transfer being scheduled",
          "$ref": "#/definitions/ScheduleTransferType"
        }
      },
      "example": {
        "scheduleStartDate": "2024-03-01T00:00:00Z",
        "scheduleEndDate": "2027-03-01T00:00:00Z",
        "scheduleExpression": {
          "scheduleExpressionType": "RECURRING",
          "recurringFrequency": "WEEKLY"
        },
        "scheduleType": "TIME_BASED"
      }
    },
    "ScheduleExpression": {
      "type": "object",
      "description": "Parameters containing information of the expression that defines when the schedule runs. The following formats are supported.\n",
      "required": [
        "scheduleExpressionType"
      ],
      "properties": {
        "scheduleExpressionType": {
          "description": "Field to specify type of the scheduled transfer\n",
          "$ref": "#/definitions/ScheduleExpressionType"
        },
        "recurringFrequency": {
          "description": "Field to specify recurrence of the scheduled transfer. Recurring frequency is mandatory if scheduleExpressionType is set as RECURRING otherwise it should be empty field.\n",
          "$ref": "#/definitions/RecurringFrequency"
        }
      }
    },
    "ScheduleExpressionType": {
      "type": "string",
      "description": "Represent a type of schedule transfer expression.",
      "enum": [
        "RECURRING",
        "ONE_TIME"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "RECURRING",
          "description": "The schedule transfer is a recurring event. example: monthly schedule transfer."
        },
        {
          "value": "ONE_TIME",
          "description": "Creates a one-time schedule transfer."
        }
      ]
    },
    "ScheduleTransferType": {
      "type": "string",
      "description": "Defines the type of schedule trigger used for executing transfers. Schedule based on time patterns using EventBridge.\n",
      "enum": [
        "TIME_BASED"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "TIME_BASED",
          "description": "Schedule based on time patterns using EventBridge. Supports recurring patterns (daily, weekly, biweekly, monthly) and one-time future executions. \n"
        }
      ]
    },
    "TransactionInitiationRequest": {
      "type": "object",
      "description": "Request body to initiate a transaction from a SW bank account to another customer defined bank account\n",
      "properties": {
        "sourceAccountId": {
          "type": "string",
          "description": "The unique identifier of the source Amazon SW bank account from where the money needs to be debited\n",
          "example": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI"
        },
        "destinationAccountId": {
          "type": "string",
          "description": "Optional field to specify the unique identifier of the destination bank account where the money needs to be deposited\n",
          "example": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN"
        },
        "description": {
          "type": "string",
          "description": "Optional field to specify description for the transaction\n",
          "example": "Payment to the delivery partner"
        },
        "destinationTransactionInstrument": {
          "description": "Destination bank account details of the transaction request\n",
          "$ref": "#/definitions/TransactionInstrumentDetails"
        },
        "destinationAccountHolderAddress": {
          "description": "Destination bank account details of the transaction request\n",
          "$ref": "#/definitions/AccountHolderAddress"
        },
        "sourceAmount": {
          "description": "The transaction amount in the source account's currency format. Requests that use a currency other than the source bank account currency fail.",
          "$ref": "#/definitions/Currency"
        },
        "transferRateDetails": {
          "description": "The fees and foreign exchange rates that apply to the transaction. Transfer Rate Preview is currently optional. This field is required when the third party honors the fees and rates of the Seller Wallet transaction.",
          "$ref": "#/definitions/TransferRatePreview"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time",
          "description": "The transaction initiation request time in date-time format\n",
          "example": "2024-03-26T02:32:59.787Z"
        }
      },
      "required": [
        "sourceAccountId",
        "description",
        "destinationTransactionInstrument",
        "sourceAmount",
        "requestTime"
      ],
      "example": {
        "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
        "description": "Payment to the delivery partner",
        "sourceAmount": {
          "amount": 100.0,
          "currency": "USD"
        },
        "destinationTransactionInstrument": {
          "bankAccount": {
            "accountHolderName": "John Doe",
            "bankAccountNumberFormat": "BBAN",
            "bankAccountOwnershipType": "SELF",
            "routingNumber": "HBUKGB4B",
            "bankNumberFormat": "BASIC",
            "accountCountryCode": "CN",
            "accountCurrency": "CNY",
            "bankAccountNumberTail": "819"
          },
          "bankAccountNumber": "GB29RBOS60161331926819"
        },
        "destinationAccountHolderAddress": {
          "addressLine1": "333 Boren Ave N",
          "city": "Seattle",
          "state": "WA",
          "postalCode": "98109",
          "countryCode": "US"
        },
        "transferRateDetails" : {
          "baseAmount": {
            "currencyCode": "EUR",
            "currencyAmount": 500.00
          },
          "fxRateDetails": {
            "fxRateId": "UNIQUE_FX_RATE_ID_1",
            "baseRate": 7.6915,
            "effectiveFxRate": 7.6084,
            "rateDirection": "BUY"
          },
          "transferAmount": {
            "currencyCode": "CNY",
            "currencyAmount": 3804.20
          },
          "fees": [
            {
              "feeId": "Unique_FeeId_001",
              "feeType": "TRANSACTION_FEE",
              "feeRateValue": 0.9,
              "feeAmount": {
                "currencyCode": "EUR",
                "currencyAmount": 4.50
              }
            },
            {
              "feeId": "Unique_FeeId_002",
              "feeType": "TAX",
              "feeRateValue": 20.0,
              "feeAmount": {
                "currencyCode": "EUR",
                "currencyAmount": 0.90
              }
            }
          ]
        },
        "requestTime": "2024-03-26T02:32:59.787Z"
      }
    },
    "TransactionInstrumentDetails": {
      "type": "object",
      "description": "Request body to create transaction instrument, Amazon performs validation and screening (anti-money laundering measuers) on all the transaction instruments before executing a transaction thus it requires transaction instrument holder's contact details as well\n",
      "properties": {
        "bankAccount": {
          "description": "Specifies the destination bank account details where the money needs to be deposited\n",
          "$ref": "#/definitions/BankAccount"
        },
        "bankAccountNumber": {
          "type": "string",
          "description": "This field would be used to populate the bank account number of the destination payment method. The field is intentionally not included in any other Schemas since Amazon internal systems will never receive it in unencrypted format, so field won't be part of the request signature\n",
          "example": "GB29RBOS60161331926819"
        }
      },
      "required": [
        "bankAccount",
        "bankAccountNumber"
      ],
      "example": {
        "bankAccount": {
          "accountHolderName": "John Doe",
          "bankAccountNumberFormat": "IBAN",
          "bankAccountOwnershipType": "SELF",
          "routingNumber": "HBUKGB4B",
          "bankNumberFormat": "BASIC",
          "accountCountryCode": "EU",
          "accountCurrency": "EUR",
          "bankAccountNumberTail": "819"
        },
        "bankAccountNumber": "GB29RBOS60161331926819"
      }
    },
    "Transaction": {
      "type": "object",
      "description": "The current transaction status and related historical details.",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to the transaction\n"
        },
        "transactionType": {
          "description": "Type of the transaction\n",
          "$ref": "#/definitions/TransactionType"
        },
        "transactionStatus": {
          "description": "Execution Status of the transaction\n",
          "$ref": "#/definitions/TransactionStatus"
        },
        "transactionRequestDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the transaction was initiated."
        },
        "expectedCompletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expected completion date of a transaction, for existing active Payees (Trusted Beneficiaries) it will be 24 hours but for new destination bank accounts the value could go up to 5 days\n",
          "example": "2023-09-26T02:32:59.787Z"
        },
        "transactionActualCompletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Transaction completion date\n"
        },
        "lastUpdateDate": {
          "type": "string",
          "format": "date-time",
          "description": "The last update date on the transaction\n"
        },
        "requesterName": {
          "type": "string",
          "description": "Amazon SW customer who requested the transaction\n",
          "example": "TPPOrgId"
        },
        "transactionRequesterSource": {
          "type": "string",
          "description": "The transaction initiation source. This value is either the Amazon portal or PISP name that the customer used to start the transaction."
        },
        "transactionDescription": {
          "type": "string",
          "description": "A description of the transaction that the requester provides when they initiate the transaction."
        },
        "transactionSourceAccount": {
          "description": "Source bank account details in the transaction\n",
          "$ref": "#/definitions/TransactionAccount"
        },
        "transactionDestinationAccount": {
          "description": "Destination bank account details in the transaction\n",
          "$ref": "#/definitions/TransactionAccount"
        },
        "transactionRequestAmount": {
          "description": "Specifies the amount for which the transfer was initiated",
          "$ref": "#/definitions/Currency"
        },
        "transferRateDetails": {
          "description": "The fees and rates that apply to the transaction, as applicable.",
          "$ref": "#/definitions/TransferRatePreview"
        },
        "transactionFinalAmount": {
          "description": "Specifies the amount of completed transaction in the destination account currency, this will be populated only for international transactions",
          "$ref": "#/definitions/Currency"
        },
        "transactionFailureReason": {
          "type": "string",
          "description": "Description in case the transaction fails before completion\n",
          "example": "Insufficient Balance"
        }
      },
      "required": [
        "transactionId",
        "transactionType",
        "transactionStatus",
        "transactionRequestDate",
        "lastUpdateDate",
        "transactionRequesterSource",
        "transactionDescription",
        "transactionSourceAccount",
        "transactionRequestAmount",
        "transactionDestinationAccount",
        "transferRateDetails"
      ]
    },
    "TransactionAccount": {
      "type": "object",
      "description": "Details of the bank account involved in the transaction.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to identify the account\n"
        },
        "bankAccountHolderName": {
          "type": "string",
          "description": "BankAccount holder's name\n"
        },
        "bankName": {
          "type": "string",
          "description": "The name of the bank\n"
        },
        "bankAccountNumberFormat": {
          "description": "Bank account format\n",
          "$ref": "#/definitions/BankAccountNumberFormat"
        },
        "bankAccountNumberTail": {
          "type": "string",
          "description": "Last 3 digit of the bank account number\n"
        },
        "bankAccountCountryCode": {
          "type": "string",
          "description": "The two digit country code, in ISO 3166 format. This field is OPTIONAL for transactionSourceAccount object but is MANDATORY field for transactionDestinationAccount\n"
        },
        "bankAccountCurrency": {
          "type": "string",
          "description": "The currency code in ISO 4217 format\n"
        }
      },
      "required": [
        "bankAccountHolderName",
        "bankName",
        "bankAccountNumberFormat",
        "bankAccountCurrency"
      ]
    },
    "TransactionListing": {
      "type": "object",
      "description": "Struct that holds collection of transactions.",
      "required": [
        "transactions"
      ],
      "properties": {
        "nextPageToken": {
          "description": "If present, use this pagination token to retrieve the next page of supply sources, if not provided the API will return same response. The field will only be provided when the list is greater than 100.",
          "type": "string",
          "example": "3493805734095308457308475"
        },
        "transactions": {
          "type": "array",
          "description": "Collection that holds Transaction\n",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      }
    },
    "TransactionStatus": {
      "type": "string",
      "description": "Represents current status of the transaction.",
      "enum": [
        "FAILED",
        "FAILED_CREDITS_APPLIED",
        "INITIATED",
        "IN_PROGRESS",
        "PAYEE_UNDER_REVIEW",
        "SUCCESSFUL"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "FAILED",
          "description": "Transaction failed before completion."
        },
        {
          "value": "FAILED_CREDITS_APPLIED",
          "description": "Transaction failed after debit and credit has been applied back to the balance."
        },
        {
          "value": "INITIATED",
          "description": "Transaction is requested but not started yet."
        },
        {
          "value": "IN_PROGRESS",
          "description": "Transaction is in progress."
        },
        {
          "value": "PAYEE_UNDER_REVIEW",
          "description": "Represents that the destination account holder (beneficiary) is under review."
        },
        {
          "value": "SUCCESSFUL",
          "description": "Transaction is successfully processed."
        }
      ]
    },
    "TransactionType": {
      "type": "string",
      "description": "Represent type of transaction.",
      "enum": [
        "CREDIT",
        "DEBIT"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "CREDIT",
          "description": "Money is deposited into the Seller Wallet account."
        },
        {
          "value": "DEBIT",
          "description": "Money is taken out of the Seller Wallet account."
        }
      ]
    },
    "TransferRatePreview": {
      "type": "object",
      "description": "The fees and foreign exchange rates that apply to the transaction.\n\nIf the fees are in terms of the `baseAmount` (source account) currency, then the effective rate is equal to **1 - (fees * `baseRate` / `baseAmount`)**.\n\nIf the fees are in terms of the `transferAmount` (destination account) currency, then the effective rate is equal to **`baseRate` - (fees / `baseAmount`)**.\n\nIn the preceding expressions, **fees** is equal to the sum of all `feeAmount.currencyAmount` values in the `fees` array.",
      "required": [
        "baseAmount",
        "fxRateDetails",
        "transferAmount",
        "fees"
      ],
      "properties": {
        "baseAmount": {
          "description": "Base amount of the transaction.\n",
          "$ref": "#/definitions/Currency"
        },
        "fxRateDetails": {
          "description": "The foreign exchange rate value of the transaction.\n",
          "$ref": "#/definitions/FxRateDetails"
        },
        "transferAmount": {
          "description": "The final amount reflects both the fee deduction and currency conversion rate exchange\n",
          "$ref": "#/definitions/Currency"
        },
        "fees": {
          "type": "array",
          "description": "List of fees\n",
          "items": {
            "$ref": "#/definitions/Fee"
          }
        }
      }
    },
    "TransferSchedule": {
      "type": "object",
      "description": "Transfer schedule details and related historical details.",
      "properties": {
        "transferScheduleId": {
          "type": "string",
          "description": "The unique identifier provided by Amazon to the scheduled transfer\n"
        },
        "transactionType": {
          "description": "Type of the transfer\n",
          "$ref": "#/definitions/TransactionType"
        },
        "transactionSourceAccount": {
          "description": "Source bank account details in the scheduled transfer\n",
          "$ref": "#/definitions/TransactionAccount"
        },
        "transactionDestinationAccount": {
          "description": "Destination bank account details in the scheduled transfer. Here bankAccountCountryCode is a MANDATORY field\n",
          "$ref": "#/definitions/TransactionAccount"
        },
        "transferScheduleStatus": {
          "description": "Type of the transfer schedule. This information can be modified when updating a transfer schedule.\n",
          "$ref": "#/definitions/TransferScheduleStatus"
        },
        "transferScheduleInformation": {
          "description": "Fields required for the scheduled transfer. This information can be modified when updating a transfer schedule.\n",
          "$ref": "#/definitions/TransferScheduleInformation"
        },
        "paymentPreference": {
          "description": "Payment preference of the scheduled transfer. This information can be modified when updating a transfer schedule.\n",
          "$ref": "#/definitions/PaymentPreference"
        },
        "transferScheduleFailures": {
          "type": "array",
          "description": "Collection that holds Transfer Schedules that has been cancelled or failed due to certain reasons.\n",
          "items": {
            "$ref": "#/definitions/TransferScheduleFailures"
          }
        }
      },
      "required": [
        "transferScheduleId",
        "transactionType",
        "transactionDestinationAccount",
        "transferScheduleStatus",
        "transferScheduleInformation",
        "transferScheduleFailures"
      ],
      "example": {
        "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
        "transactionType": "DEBIT",
        "transactionSourceAccount" : {
          "accountId" : "sourceAccountIdCase200",
          "bankAccountHolderName" : "John Doe",
          "bankName" : "Amazon Seller Wallet",
          "bankAccountNumberFormat" : "IBAN",
          "bankAccountNumberTail" : "123",
          "bankAccountCurrency" : "GBP"
        },
        "transactionDestinationAccount" : {
          "bankAccountHolderName" : "Dane Shipping",
          "bankName" : "Royal Bank of Scotland",
          "bankAccountNumberFormat" : "IBAN",
          "bankAccountNumberTail" : "819",
          "bankAccountCurrency" : "GBP",
          "bankAccountCountryCode" : "EU"
        },
        "transferScheduleStatus": "ENABLED",
        "transferScheduleInformation": {
          "scheduleStartDate": "2024-03-01T00:00:00Z",
          "scheduleEndDate": "2027-03-01T00:00:00Z",
          "scheduleExpression": {
            "scheduleExpressionType": "RECURRING",
            "recurringFrequency": "WEEKLY"
          },
          "scheduleType": "TIME_BASED"
        },
        "paymentPreference": {
          "paymentPreferencePaymentType": "PERCENTAGE",
          "value": 25.5
        },
        "transferScheduleFailures": [{
          "transferScheduleFailureDate": "2024-04-01T10:30:00Z",
          "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
        }]
      }
    },
    "TransferScheduleFailures" : {
      "type": "object",
      "description": "Specifies the balance amount in the Amazon SW bank account",
      "required": [
        "transferScheduleFailureDate",
        "transferScheduleFailureReason"
      ],
      "properties": {
        "transferScheduleFailureDate": {
          "type": "string",
          "format": "date-time",
          "description": "The transfer schedule cancellation date\n",
          "x-example": "2024-03-01T10:30:00Z"
        },
        "transferScheduleFailureReason": {
          "type": "string",
          "description": "The statement/reasoning listed for the cancellation of the transfer schedule\n",
          "example": "INSUFFICIENT_BALANCE"
        }
      },
      "example": {
        "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
        "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
      }
    },
    "TransferScheduleListing": {
      "type": "object",
      "description": "Struct that holds collection of transfer schedules.",
      "required": [
        "transferSchedules"
      ],
      "properties": {
        "nextPageToken": {
          "description": "If present, use this pagination token to retrieve the next page of supply sources, if not provided the API will return same response. The field will only be provided when the list is greater than 100.",
          "type": "string",
          "example": "3493805734095308457308475"
        },
        "transferSchedules": {
          "type": "array",
          "description": "Collection that holds list of Transfer Schedules\n",
          "items": {
            "$ref": "#/definitions/TransferSchedule"
          }
        }
      }
    },
    "TransferScheduleRequest": {
      "type": "object",
      "description": "Request body to initiate a scheduled transfer from a SW bank account to another customer defined bank account\n",
      "properties": {
        "sourceAccountId": {
          "type": "string",
          "description": "The unique identifier of the source Amazon SW bank account from where the money needs to be debited\n",
          "example": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI"
        },
        "sourceCurrencyCode": {
          "type": "string",
          "description": "Represents 3 letter currency code in ISO 4217 standard format of the source payment method country\n",
          "example": "GBP"
        },
        "destinationAccountId": {
          "type": "string",
          "description": "Optional field to specify the unique identifier of the destination bank account where the money needs to be deposited\n",
          "example": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN"
        },
        "destinationTransactionInstrument": {
          "description": "Destination bank account details of the transaction request\n",
          "$ref": "#/definitions/TransactionInstrumentDetails"
        },
        "transactionType": {
          "description": "Type of the scheduled transaction\n",
          "$ref": "#/definitions/TransactionType"
        },
        "transferScheduleInformation": {
          "description": "Fields required for the scheduled transfer\n",
          "$ref": "#/definitions/TransferScheduleInformation"
        },
        "paymentPreference": {
          "description": "Payment preference of the scheduled transfer\n",
          "$ref": "#/definitions/PaymentPreference"
        },
        "transferScheduleStatus": {
          "description": "Type of the transaction schedule which is mandatory field in request body if a transfer schedule needs to be updated\n",
          "$ref": "#/definitions/TransferScheduleStatus"
        }
      },
      "required": [
        "sourceAccountId",
        "sourceCurrencyCode",
        "destinationAccountId",
        "destinationTransactionInstrument",
        "transactionType",
        "transferScheduleInformation",
        "paymentPreference"
      ],
      "example": {
        "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
        "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
        "sourceCurrencyCode": "USD",
        "destinationTransactionInstrument": {
          "bankAccount": {
            "accountHolderName": "John Doe",
            "bankAccountNumberFormat": "BBAN",
            "bankAccountOwnershipType": "SELF",
            "routingNumber": "HBUKGB4B",
            "bankNumberFormat": "BASIC",
            "accountCountryCode": "CN",
            "accountCurrency": "CNY",
            "bankAccountNumberTail": "819"
          },
          "bankAccountNumber": "GB29RBOS60161331926819"
        },
        "transactionType": "DEBIT",
        "transferScheduleInformation": {
          "scheduleStartDate": "2024-03-01T00:00:00Z",
          "scheduleEndDate": "2027-03-01T00:00:00Z",
          "scheduleExpression": {
            "scheduleExpressionType": "RECURRING",
            "recurringFrequency": "WEEKLY"
          },
          "scheduleType": "TIME_BASED"
        },
        "paymentPreference": {
          "paymentPreferencePaymentType": "PERCENTAGE",
          "value": 25.5
        },
        "transferScheduleStatus": "ENABLED"
      }
    },
    "TransferScheduleStatus":  {
      "type": "string",
      "description": "Represents the schedule status of the transfer.",
      "enum": [
        "ENABLED",
        "DISABLED",
        "EXPIRED",
        "DELETED"
      ],
      "x-docgen-enum-table-extension": [
        {
          "value": "ENABLED",
          "description": "Represents the status of the transfer schedule that is enabled."
        },
        {
          "value": "DISABLED",
          "description": "Represents the status of the transfer schedule that is disabled."
        },
        {
          "value": "EXPIRED",
          "description": "Represents the status of the transfer that has expired and not scheduled anymore."
        },
        {
          "value": "DELETED",
          "description": "Represents the status of the transfer that was scheduled but has been deleted."
        }
      ]
    }
  }
}
