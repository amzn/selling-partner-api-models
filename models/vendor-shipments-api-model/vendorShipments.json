{
    "swagger": "2.0",
    "info": {
        "description": "The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.",
        "version": "v1",
        "title": "Selling Partner API for Retail Procurement Shipments",
        "contact": {
            "name": "Selling Partner API Developer Support",
            "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
        },
        "license": {
            "name": "Apache License 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "host": "sellingpartnerapi-na.amazon.com",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/vendor/shipping/v1/shipmentConfirmations": {
            "post": {
                "tags": [
                    "vendorShipping"
                ],
                "description": "Submits one or more shipment confirmations for vendor orders.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "SubmitShipmentConfirmations",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsRequest",
                            "example": {
                                "shipmentConfirmations": [
                                    {
                                        "shipmentIdentifier": "00050003",
                                        "shipmentConfirmationType": "Original",
                                        "shipmentType": "LessThanTruckLoad",
                                        "shipmentStructure": "PalletizedStandardCase",
                                        "transportationDetails": {
                                            "transportationMode": "Road",
                                            "billOfLadingNumber": "02440000"
                                        },
                                        "shipmentConfirmationDate": "2019-08-07T19:56:45.632Z",
                                        "shippedDate": "2019-08-07T19:56:45.632Z",
                                        "estimatedDeliveryDate": "2019-08-07T19:56:45.632Z",
                                        "sellingParty": {
                                            "partyId": "VENDORCODE"
                                        },
                                        "shipFromParty": {
                                            "address": {
                                                "name": "ABC electronics warehouse",
                                                "addressLine1": "DEF 1st street",
                                                "city": "Lisses",
                                                "stateOrRegion": "abcland",
                                                "postalCode": "91090",
                                                "countryCode": "DE"
                                            },
                                            "partyId": "VENDORWAREHOUSECODE"
                                        },
                                        "shipToParty": {
                                            "partyId": "AMZWAREHOUSECODE"
                                        },
                                        "shipmentMeasurements": {
                                            "grossShipmentWeight": {
                                                "unitOfMeasure": "Kg",
                                                "value": "120.45"
                                            },
                                            "shipmentVolume": {
                                                "unitOfMeasure": "CuFt",
                                                "value": "2.4"
                                            },
                                            "palletCount": 1
                                        },
                                        "shippedItems": [
                                            {
                                                "itemSequenceNumber": "001",
                                                "vendorProductIdentifier": "9782700001659",
                                                "shippedQuantity": {
                                                    "amount": 100,
                                                    "unitOfMeasure": "Eaches",
                                                    "unitSize": 1
                                                },
                                                "itemDetails": {
                                                    "purchaseOrderNumber": "1BBBAAAA",
                                                    "lotNumber": "1045",
                                                    "maximumRetailPrice": {
                                                        "currencyCode": "EUR",
                                                        "amount": "299.00"
                                                    },
                                                    "handlingCode": "Oversized"
                                                }
                                            }
                                        ],
                                        "cartons": [
                                            {
                                                "cartonIdentifiers": [
                                                    {
                                                        "containerIdentificationType": "SSCC",
                                                        "containerIdentificationNumber": "00102234567666698888"
                                                    }
                                                ],
                                                "cartonSequenceNumber": "001",
                                                "items": [
                                                    {
                                                        "itemReference": "001",
                                                        "shippedQuantity": {
                                                            "amount": 25,
                                                            "unitOfMeasure": "Eaches",
                                                            "unitSize": 1
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "cartonIdentifiers": [
                                                    {
                                                        "containerIdentificationType": "SSCC",
                                                        "containerIdentificationNumber": "00102234567666699999"
                                                    }
                                                ],
                                                "cartonSequenceNumber": "002",
                                                "items": [
                                                    {
                                                        "itemReference": "001",
                                                        "shippedQuantity": {
                                                            "amount": 25,
                                                            "unitOfMeasure": "Eaches",
                                                            "unitSize": 1
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "cartonIdentifiers": [
                                                    {
                                                        "containerIdentificationType": "SSCC",
                                                        "containerIdentificationNumber": "00102234567666696666"
                                                    }
                                                ],
                                                "cartonSequenceNumber": "003",
                                                "items": [
                                                    {
                                                        "itemReference": "001",
                                                        "shippedQuantity": {
                                                            "amount": 25,
                                                            "unitOfMeasure": "Eaches",
                                                            "unitSize": 1
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "cartonIdentifiers": [
                                                    {
                                                        "containerIdentificationType": "SSCC",
                                                        "containerIdentificationNumber": "00102234567666697777"
                                                    }
                                                ],
                                                "cartonSequenceNumber": "004",
                                                "items": [
                                                    {
                                                        "itemReference": "001",
                                                        "shippedQuantity": {
                                                            "amount": 25,
                                                            "unitOfMeasure": "Eaches",
                                                            "unitSize": 1
                                                        }
                                                    }
                                                ]
                                            }
                                        ],
                                        "pallets": [
                                            {
                                                "palletIdentifiers": [
                                                    {
                                                        "containerIdentificationType": "SSCC",
                                                        "containerIdentificationNumber": "00102234567898098745"
                                                    }
                                                ],
                                                "tier": 2,
                                                "block": 2,
                                                "dimensions": {
                                                    "length": "1.2",
                                                    "width": "0.8",
                                                    "height": "1",
                                                    "unitOfMeasure": "In"
                                                },
                                                "weight": {
                                                    "unitOfMeasure": "Kg",
                                                    "value": "120.45"
                                                },
                                                "cartonReferenceDetails": {
                                                    "cartonCount": 4,
                                                    "cartonReferenceNumbers": [
                                                        "001",
                                                        "002",
                                                        "003",
                                                        "004"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "payload": {
                                    "transactionId": {
                                        "description": "GUID assigned by Amazon to identify this transaction. It will be used in Transaction Status API as reference to get status of this transaction.",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "shipmentConfirmations": [
                                                        {
                                                            "shipmentIdentifier": "TestShipmentConfirmation202",
                                                            "shipmentConfirmationDate": "2021-03-11T12:38:23.388Z",
                                                            "sellingParty": {
                                                                "partyId": "ABCD1"
                                                            },
                                                            "shipFromParty": {
                                                                "partyId": "EFGH1"
                                                            },
                                                            "shipToParty": {
                                                                "partyId": "JKL1"
                                                            },
                                                            "shipmentConfirmationType": "Original",
                                                            "shippedItems": [
                                                                {
                                                                    "itemSequenceNumber": "001",
                                                                    "shippedQuantity": {
                                                                        "amount": 100,
                                                                        "unitOfMeasure": "Eaches"
                                                                    },
                                                                    "itemDetails": {
                                                                        "purchaseOrderNumber": "TestOrder202"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "payload": {
                                            "transactionId": "20190905010908-8a3b6901-ef20-412f-9270-21c021796605"
                                        }
                                    }
                                },
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {}
                                        }
                                    },
                                    "response": {
                                        "payload": {
                                            "transactionId": "mock-TransactionId-20190905010908-8a3b6901-ef20-412f-9270-21c021796605"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "body": {
                                            "value": {
                                                "shipmentConfirmations": [
                                                    {
                                                        "shipmentIdentifier": "MOCKSHIPMENTID"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "response": {
                                    "errors": [
                                        {
                                            "code": "InvalidInput",
                                            "message": "Invalid Shipment ID"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    }
                }
            },
            "parameters": []
        },
        "/vendor/shipping/v1/shipments": {
            "post": {
                "tags": [
                    "vendorShipping"
                ],
                "description": "Submits one or more shipment request for vendor Orders.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "SubmitShipments",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubmitShipments"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "body": {
                                            "value": {
                                                "shipments": [
                                                    {
                                                        "vendorShipmentIdentifier": "00050003",
                                                        "buyerReferenceNumber": "1234567",
                                                        "transactionType": "New",
                                                        "transactionDate": "2019-08-07T19:56:45.632",
                                                        "shipmentFreightTerm": "Collect",
                                                        "sellingParty": {
                                                            "partyId": "PQRSS"
                                                        },
                                                        "shipFromParty": {
                                                            "address": {
                                                                "name": "ABC electronics warehouse",
                                                                "addressLine1": "DEF 1st street",
                                                                "city": "Lisses",
                                                                "stateOrRegion": "abcland",
                                                                "postalCode": "91090",
                                                                "countryCode": "DE"
                                                            },
                                                            "partyId": "999US"
                                                        },
                                                        "shipToParty": {
                                                            "partyId": "ABCDF"
                                                        },
                                                        "shipmentMeasurements": {
                                                            "totalCartonCount": 30,
                                                            "totalPalletStackable": 30,
                                                            "totalPalletNonStackable": 30,
                                                            "shipmentWeight": {
                                                                "unitOfMeasure": "Kg",
                                                                "value": "120.45"
                                                            },
                                                            "shipmentVolume": {
                                                                "unitOfMeasure": "CuFt",
                                                                "value": "2.4"
                                                            }
                                                        },
                                                        "collectFreightPickupDetails": {
                                                            "requestedPickUp": "2019-08-07T19:56:45.632"
                                                        },
                                                        "purchaseOrders": [
                                                            {
                                                                "purchaseOrderNumber": "1BBBAAAA",
                                                                "items": [
                                                                    {
                                                                        "itemSequenceNumber": "001",
                                                                        "vendorProductIdentifier": "9782700001659",
                                                                        "buyerProductIdentifier": "9782700001610",
                                                                        "shippedQuantity": {
                                                                            "amount": 100,
                                                                            "unitOfMeasure": "Eaches",
                                                                            "unitSize": 1
                                                                        },
                                                                        "maximumRetailPrice": {
                                                                            "currencyCode": "USD",
                                                                            "amount": "90.80"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        ],
                                                        "importDetails": {
                                                            "methodOfPayment": "PaidByBuyer",
                                                            "sealNumber": "0010101",
                                                            "route": {
                                                                "stops": [
                                                                    {
                                                                        "functionCode": "PortOfDischarge",
                                                                        "locationIdentification": {
                                                                            "type": "string",
                                                                            "locationCode": "string",
                                                                            "countryCode": "US"
                                                                        },
                                                                        "arrivalTime": "2021-07-12T22:22:25.038Z",
                                                                        "departureTime": "2021-07-12T22:22:25.038Z"
                                                                    }
                                                                ]
                                                            },
                                                            "importContainers": "string",
                                                            "billableWeight": {
                                                                "unitOfMeasure": "G",
                                                                "value": "string"
                                                            },
                                                            "estimatedShipByDate": "2021-07-12T22:22:25.038Z"
                                                        },
                                                        "containers": [
                                                            {
                                                                "containerType": "carton",
                                                                "containerSequenceNumber": "001",
                                                                "containerIdentifiers": [
                                                                    {
                                                                        "containerIdentificationType": "SSCC",
                                                                        "containerIdentificationNumber": "4251245123534"
                                                                    }
                                                                ],
                                                                "trackingNumber": "1Z69663R0347795889",
                                                                "dimensions": {
                                                                    "length": "12",
                                                                    "width": "12",
                                                                    "height": "12",
                                                                    "unitOfMeasure": "IN"
                                                                },
                                                                "weight": {
                                                                    "unitOfMeasure": "KG",
                                                                    "value": "10"
                                                                },
                                                                "packedItems": [
                                                                    {
                                                                        "itemSequenceNumber": "001",
                                                                        "buyerProductIdentifier": "B07DFVDRAA",
                                                                        "vendorProductIdentifier": "12312412421",
                                                                        "packedQuantity": {
                                                                            "amount": 1,
                                                                            "unitOfMeasure": "Each"
                                                                        },
                                                                        "itemDetails": {
                                                                            "purchaseOrderNumber": "MBvnLr0fw",
                                                                            "lotNumber": "10101010",
                                                                            "expiry": {
                                                                                "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                                                                "expiryDate": "2021-07-12T22:22:25.038Z",
                                                                                "expiryAfterDuration": {
                                                                                    "durationUnit": "Days",
                                                                                    "durationValue": 0
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "containerType": "pallet",
                                                                "containerSequenceNumber": "002",
                                                                "containerIdentifiers": [
                                                                    {
                                                                        "containerIdentificationType": "SSCC",
                                                                        "containerIdentificationNumber": "ATR123213216"
                                                                    }
                                                                ],
                                                                "trackingNumber": "TRACK12345",
                                                                "dimensions": {
                                                                    "length": "12",
                                                                    "width": "12",
                                                                    "height": "12",
                                                                    "unitOfMeasure": "IN"
                                                                },
                                                                "weight": {
                                                                    "unitOfMeasure": "KG",
                                                                    "value": "10"
                                                                },
                                                                "tier": 2,
                                                                "block": 2,
                                                                "innerContainersDetails": {
                                                                    "containerCount": 10,
                                                                    "containerSequenceNumbers": [
                                                                        {
                                                                            "containerSequenceNumber": "002"
                                                                        },
                                                                        {
                                                                            "containerSequenceNumber": "003"
                                                                        }
                                                                    ]
                                                                },
                                                                "packedItems": [
                                                                    {
                                                                        "itemSequenceNumber": "001",
                                                                        "buyerProductIdentifier": "B07DFVDRAA",
                                                                        "vendorProductIdentifier": "12312412421",
                                                                        "packedQuantity": {
                                                                            "amount": 1,
                                                                            "unitOfMeasure": "Each"
                                                                        },
                                                                        "itemDetails": {
                                                                            "purchaseOrderNumber": "MBvnLr0fw",
                                                                            "lotNumber": "101001",
                                                                            "expiry": {
                                                                                "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                                                                "expiryDate": "2021-07-12T22:22:25.038Z",
                                                                                "expiryAfterDuration": {
                                                                                    "durationUnit": "Days",
                                                                                    "durationValue": 0
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        ],
                                                        "transportationDetails": {
                                                            "shipMode": "LessThanTruckLoad",
                                                            "transportationMode": "Road",
                                                            "shippedDate": "2019-08-07T19:56:45.632",
                                                            "estimatedDeliveryDate": "2019-08-07T19:56:45.632",
                                                            "shipmentDeliveryDate": "2019-08-07T19:56:45.632",
                                                            "carrierDetails": {
                                                                "name": "UPS",
                                                                "phone": "1234567890",
                                                                "email": "abc@xyz.com",
                                                                "code": "string",
                                                                "shipmentReferenceNumber": "TRACK123123"
                                                            },
                                                            "billOfLadingNumber": "1234567890"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "transactionId": "mock-TransactionId-5a3066ab-e904-42bd-b6ae-bc70ca1c37e6-20210728234390"
                                    }
                                }
                            },
                            {
                                "request": {
                                    "parameters": {
                                        "body": {
                                            "value": {
                                                "shipments": [
                                                    {
                                                        "vendorShipmentIdentifier": "00050003",
                                                        "buyerReferenceNumber": "1234567",
                                                        "transactionType": "Cancel",
                                                        "transactionDate": "2019-08-07T19:56:45.632",
                                                        "shipmentFreightTerm": "Collect",
                                                        "sellingParty": {
                                                            "partyId": "PQRSS"
                                                        },
                                                        "shipFromParty": {
                                                            "address": {
                                                                "name": "ABC electronics warehouse",
                                                                "addressLine1": "DEF 1st street",
                                                                "city": "Lisses",
                                                                "stateOrRegion": "abcland",
                                                                "postalCode": "91090",
                                                                "countryCode": "DE"
                                                            },
                                                            "partyId": "999US"
                                                        },
                                                        "shipToParty": {
                                                            "partyId": "ABCDF"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "transactionId": "mock-TransactionId-5a3066ab-e904-42bd-b6ae-bc70ca1c37e6-20210728234390"
                                    }
                                }
                            },
                            {
                                "request": {
                                    "parameters": {
                                        "body": {}
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "transactionId": "mock-TransactionId-a3066ab-e904-42bd-b6ae-bc70ca1c37e6-20210728234395"
                                    }
                                }
                            }
                        ]
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "body": {
                                            "value": {
                                                "shipments": [
                                                    {
                                                        "vendorShipmentIdentifier": "MOCKSHIPID"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "response": {
                                    "errors": [
                                        {
                                            "code": "InvalidInput",
                                            "message": "Invalid Vendor Shipment ID"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "schema": {
                            "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "vendorShipping"
                ],
                "description": "Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "GetShipmentDetails",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit to the number of records returned. Default value is 50 records.",
                        "required": false,
                        "type": "integer",
                        "maximum": 50,
                        "minimum": 1,
                        "format": "int64"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort in ascending or descending order by purchase order creation date.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "ASC",
                                "description": "Sort in ascending order by shipment creation date."
                            },
                            {
                                "value": "DESC",
                                "description": "Sort in descending order by shipment creation date."
                            }
                        ]
                    },
                    {
                        "name": "nextToken",
                        "in": "query",
                        "description": "Used for pagination when there are more shipments than the specified result size limit.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdAfter",
                        "in": "query",
                        "description": "Get Shipment Details that became available after this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Get Shipment Details that became available before this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "shipmentConfirmedBefore",
                        "in": "query",
                        "description": "Get Shipment Details by passing Shipment confirmed create Date Before. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "shipmentConfirmedAfter",
                        "in": "query",
                        "description": "Get Shipment Details by passing Shipment confirmed create Date After. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "packageLabelCreatedBefore",
                        "in": "query",
                        "description": "Get Shipment Details by passing Package label create Date by buyer. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "packageLabelCreatedAfter",
                        "in": "query",
                        "description": "Get Shipment Details by passing Package label create Date After by buyer. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "shippedBefore",
                        "in": "query",
                        "description": "Get Shipment Details by passing Shipped Date Before. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "shippedAfter",
                        "in": "query",
                        "description": "Get Shipment Details by passing Shipped Date After. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "estimatedDeliveryBefore",
                        "in": "query",
                        "description": "Get Shipment Details by passing Estimated Delivery Date Before. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "estimatedDeliveryAfter",
                        "in": "query",
                        "description": "Get Shipment Details by passing Estimated Delivery Date Before. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "shipmentDeliveryBefore",
                        "in": "query",
                        "description": "Get Shipment Details by passing Shipment Delivery Date Before. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "shipmentDeliveryAfter",
                        "in": "query",
                        "description": "Get Shipment Details by passing Shipment Delivery Date After. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "requestedPickUpBefore",
                        "in": "query",
                        "description": "Get Shipment Details by passing Before Requested pickup date. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "requestedPickUpAfter",
                        "in": "query",
                        "description": "Get Shipment Details by passing After Requested pickup date. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "scheduledPickUpBefore",
                        "in": "query",
                        "description": "Get Shipment Details by passing Before scheduled pickup date. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "scheduledPickUpAfter",
                        "in": "query",
                        "description": "Get Shipment Details by passing After Scheduled pickup date. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "currentShipmentStatus",
                        "in": "query",
                        "description": "Get Shipment Details by passing Current shipment status.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "vendorShipmentIdentifier",
                        "in": "query",
                        "description": "Get Shipment Details by passing Vendor Shipment ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "buyerReferenceNumber",
                        "in": "query",
                        "description": "Get Shipment Details by passing buyer Reference ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "buyerWarehouseCode",
                        "in": "query",
                        "description": "Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sellerWarehouseCode",
                        "in": "query",
                        "description": "Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "payload": {
                                    "pagination": {
                                        "nextToken": "MDAwMDAwMDAwMQ=="
                                    },
                                    "shipments": [
                                        {
                                            "vendorShipmentIdentifier": "00050003",
                                            "buyerReferenceNumber": "1234567",
                                            "currentShipmentStatus": "CarrierAssigned",
                                            "currentshipmentStatusDate": "2019-08-09T19:56:45.632",
                                            "shipmentStatusDetails": [
                                                {
                                                    "shipmentStatus": "CarrierAssigned",
                                                    "shipmentStatusDate": "2019-08-09T19:56:45.632"
                                                },
                                                {
                                                    "shipmentStatus": "TransportationRequested",
                                                    "shipmentStatusDate": "2019-07-07T19:56:45.632"
                                                },
                                                {
                                                    "shipmentStatus": "Created",
                                                    "shipmentStatusDate": "2019-07-06T19:56:45.632"
                                                }
                                            ],
                                            "shipmentCreateDate": "2019-07-07T19:56:45.632",
                                            "shipmentConfirmDate": "2019-08-07T19:56:45.632",
                                            "packageLabelCreateDate": "2019-08-07T19:56:45.632",
                                            "shipmentFreightTerm": "Collect",
                                            "sellingParty": {
                                                "partyId": "998US"
                                            },
                                            "shipFromParty": {
                                                "address": {
                                                    "name": "ABC electronics warehouse",
                                                    "addressLine1": "DEF 1st street",
                                                    "city": "Lisses",
                                                    "stateOrRegion": "abcland",
                                                    "postalCode": "91090",
                                                    "countryCode": "DE"
                                                },
                                                "partyId": "ABCD12"
                                            },
                                            "shipToParty": {
                                                "partyId": "999US"
                                            },
                                            "shipmentMeasurements": {
                                                "totalCartonCount": 30,
                                                "totalPalletStackable": 30,
                                                "totalPalletNonStackable": 30,
                                                "shipmentWeight": {
                                                    "unitOfMeasure": "Kg",
                                                    "value": "120.45"
                                                },
                                                "shipmentVolume": {
                                                    "unitOfMeasure": "CuFt",
                                                    "value": "2.4"
                                                }
                                            },
                                            "collectFreightPickupDetails": {
                                                "requestedPickUp": "2019-08-07T19:56:45.632",
                                                "scheduledPickUp": "2019-08-07T19:56:45.632",
                                                "carrierAssignmentDate": "2019-08-07T19:56:45.632"
                                            },
                                            "purchaseOrders": [
                                                {
                                                    "purchaseOrderNumber": "1BBBAAAA",
                                                    "purchaseOrderDate": "2019-08-06T19:56:45.632",
                                                    "shipWindow": "08/25/2021 - 08/31/2021",
                                                    "items": [
                                                        {
                                                            "itemSequenceNumber": "001",
                                                            "vendorProductIdentifier": "9782700001659",
                                                            "buyerProductIdentifier": "9782700001690",
                                                            "shippedQuantity": {
                                                                "amount": 100,
                                                                "unitOfMeasure": "Eaches",
                                                                "unitSize": 1
                                                            },
                                                            "maximumRetailPrice": {
                                                                "currencyCode": "USD",
                                                                "amount": "12345"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ],
                                            "importDetails": {
                                                "methodOfPayment": "PaidByBuyer",
                                                "sealNumber": "1232142132",
                                                "route": {
                                                    "stops": [
                                                        {
                                                            "functionCode": "PortOfDischarge",
                                                            "locationIdentification": {
                                                                "type": "string",
                                                                "locationCode": "string",
                                                                "countryCode": "US"
                                                            },
                                                            "arrivalTime": "2021-07-12T22:22:25.038Z",
                                                            "departureTime": "2021-07-12T22:22:25.038Z"
                                                        }
                                                    ]
                                                },
                                                "importContainers": "string",
                                                "billableWeight": {
                                                    "unitOfMeasure": "G",
                                                    "value": "10"
                                                },
                                                "estimatedShipByDate": "2021-07-12T22:22:25.038Z",
                                                "handlingInstructions": "Oversized"
                                            },
                                            "containers": [
                                                {
                                                    "containerType": "carton",
                                                    "containerSequenceNumber": "001",
                                                    "containerIdentifiers": [
                                                        {
                                                            "containerIdentificationType": "SSCC",
                                                            "containerIdentificationNumber": "213124134213"
                                                        }
                                                    ],
                                                    "trackingNumber": "XXXX",
                                                    "dimensions": {
                                                        "length": "12",
                                                        "width": "12",
                                                        "height": "12",
                                                        "unitOfMeasure": "IN"
                                                    },
                                                    "weight": {
                                                        "unitOfMeasure": "KG",
                                                        "value": "10"
                                                    },
                                                    "packedItems": [
                                                        {
                                                            "itemSequenceNumber": "001",
                                                            "buyerProductIdentifier": "B07DFVDRAA",
                                                            "vendorProductIdentifier": "12312412421",
                                                            "packedQuantity": {
                                                                "amount": 1,
                                                                "unitOfMeasure": "Each"
                                                            },
                                                            "itemDetails": {
                                                                "purchaseOrderNumber": "string",
                                                                "lotNumber": "string",
                                                                "expiry": {
                                                                    "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                                                    "expiryDate": "2021-07-12T22:22:25.038Z",
                                                                    "expiryAfterDuration": {
                                                                        "durationUnit": "Days",
                                                                        "durationValue": 0
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "containerType": "pallet",
                                                            "containerSequenceNumber": "002",
                                                            "containerIdentifiers": [
                                                                {
                                                                    "containerIdentificationType": "SSCC",
                                                                    "containerIdentificationNumber": "ARK123214214213"
                                                                }
                                                            ],
                                                            "trackingNumber": "TRACK001",
                                                            "dimensions": {
                                                                "length": "12",
                                                                "width": "12",
                                                                "height": "12",
                                                                "unitOfMeasure": "IN"
                                                            },
                                                            "weight": {
                                                                "unitOfMeasure": "KG",
                                                                "value": "10"
                                                            },
                                                            "tier": 2,
                                                            "block": 2,
                                                            "innerContainersDetails": {
                                                                "containerCount": 10,
                                                                "containerSequenceNumbers": [
                                                                    {
                                                                        "containerSequenceNumber": "002"
                                                                    },
                                                                    {
                                                                        "containerSequenceNumber": "003"
                                                                    }
                                                                ]
                                                            },
                                                            "packedItems": [
                                                                {
                                                                    "itemSequenceNumber": "001",
                                                                    "buyerProductIdentifier": "B07DFVDRAA",
                                                                    "vendorProductIdentifier": "12312412421",
                                                                    "packedQuantity": {
                                                                        "amount": 1,
                                                                        "unitOfMeasure": "Each"
                                                                    },
                                                                    "itemDetails": {
                                                                        "purchaseOrderNumber": "string",
                                                                        "lotNumber": "string",
                                                                        "expiry": {
                                                                            "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                                                            "expiryDate": "2021-07-12T22:22:25.038Z",
                                                                            "expiryAfterDuration": {
                                                                                "durationUnit": "Days",
                                                                                "durationValue": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "transportationDetails": {
                                                "shipMode": "LessThanTruckLoad",
                                                "transportationMode": "Road",
                                                "shippedDate": "2019-08-07T19:56:45.632",
                                                "estimatedDeliveryDate": "2019-08-07T19:56:45.632",
                                                "shipmentDeliveryDate": "2019-08-07T19:56:45.632",
                                                "carrierDetails": {
                                                    "name": "UPS",
                                                    "phone": "1234567890",
                                                    "email": "abc@xyz.com",
                                                    "code": "string",
                                                    "shipmentReferenceNumber": "TRACK001"
                                                },
                                                "billOfLadingNumber": "string"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "vendorShipmentIdentifier": {
                                            "value": "12345678"
                                        }
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "pagination": {
                                            "nextToken": "MDAwMDAwMDAwMQ=="
                                        },
                                        "shipments": [
                                            {
                                                "vendorShipmentIdentifier": "00050003",
                                                "buyerReferenceNumber": "1234567",
                                                "currentShipmentStatus": "Created",
                                                "currentshipmentStatusDate": "2019-08-07T19:56:45.632",
                                                "shipmentStatusDetails": [
                                                    {
                                                        "shipmentStatus": "Created",
                                                        "shipmentStatusDate": "2019-08-07T19:56:45.632"
                                                    }
                                                ],
                                                "shipmentCreateDate": "2019-07-07T19:56:45.632",
                                                "shipmentConfirmDate": "2019-08-07T19:56:45.632",
                                                "packageLabelCreateDate": "2019-08-07T19:56:45.632",
                                                "shipmentFreightTerm": "Collect",
                                                "sellingParty": {
                                                    "partyId": "998US"
                                                },
                                                "shipFromParty": {
                                                    "address": {
                                                        "name": "ABC electronics warehouse",
                                                        "addressLine1": "DEF 1st street",
                                                        "city": "Lisses",
                                                        "stateOrRegion": "abcland",
                                                        "postalCode": "91090",
                                                        "countryCode": "DE"
                                                    },
                                                    "partyId": "ABCD12"
                                                },
                                                "shipToParty": {
                                                    "partyId": "999US"
                                                },
                                                "shipmentMeasurements": {
                                                    "totalCartonCount": 30,
                                                    "totalPalletStackable": 30,
                                                    "totalPalletNonStackable": 30,
                                                    "shipmentWeight": {
                                                        "unitOfMeasure": "Kg",
                                                        "value": "120.45"
                                                    },
                                                    "shipmentVolume": {
                                                        "unitOfMeasure": "CuFt",
                                                        "value": "2.4"
                                                    }
                                                },
                                                "collectFreightPickupDetails": {
                                                    "requestedPickUp": "2019-08-07T19:56:45.632",
                                                    "scheduledPickUp": "2019-08-07T19:56:45.632",
                                                    "carrierAssignmentDate": "2019-08-07T19:56:45.632"
                                                },
                                                "purchaseOrders": [
                                                    {
                                                        "purchaseOrderNumber": "1BBBAAAA",
                                                        "purchaseOrderDate": "2019-08-07T19:56:45.632",
                                                        "shipWindow": "08/25/2021 - 08/31/2021",
                                                        "items": [
                                                            {
                                                                "itemSequenceNumber": "001",
                                                                "vendorProductIdentifier": "9782700001659",
                                                                "buyerProductIdentifier": "9782700001690",
                                                                "shippedQuantity": {
                                                                    "amount": 100,
                                                                    "unitOfMeasure": "Eaches",
                                                                    "unitSize": 1
                                                                },
                                                                "maximumRetailPrice": {
                                                                    "currencyCode": "USD",
                                                                    "amount": "12345"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "importDetails": {
                                                    "methodOfPayment": "PaidByBuyer",
                                                    "sealNumber": "1232142132",
                                                    "route": {
                                                        "stops": [
                                                            {
                                                                "functionCode": "PortOfDischarge",
                                                                "locationIdentification": {
                                                                    "type": "string",
                                                                    "locationCode": "string",
                                                                    "countryCode": "US"
                                                                },
                                                                "arrivalTime": "2021-07-12T22:22:25.038Z",
                                                                "departureTime": "2021-07-12T22:22:25.038Z"
                                                            }
                                                        ]
                                                    },
                                                    "importContainers": "string",
                                                    "billableWeight": {
                                                        "unitOfMeasure": "G",
                                                        "value": "10"
                                                    },
                                                    "estimatedShipByDate": "2021-07-12T22:22:25.038Z",
                                                    "handlingInstructions": "Oversized"
                                                },
                                                "containers": [
                                                    {
                                                        "containerType": "carton",
                                                        "containerSequenceNumber": "001",
                                                        "containerIdentifiers": [
                                                            {
                                                                "containerIdentificationType": "SSCC",
                                                                "containerIdentificationNumber": "213124134213"
                                                            }
                                                        ],
                                                        "trackingNumber": "XXXX",
                                                        "dimensions": {
                                                            "length": "12",
                                                            "width": "12",
                                                            "height": "12",
                                                            "unitOfMeasure": "IN"
                                                        },
                                                        "weight": {
                                                            "unitOfMeasure": "KG",
                                                            "value": "10"
                                                        },
                                                        "packedItems": [
                                                            {
                                                                "itemSequenceNumber": "001",
                                                                "buyerProductIdentifier": "B07DFVDRAA",
                                                                "vendorProductIdentifier": "12312412421",
                                                                "packedQuantity": {
                                                                    "amount": 1,
                                                                    "unitOfMeasure": "Each"
                                                                },
                                                                "itemDetails": {
                                                                    "purchaseOrderNumber": "string",
                                                                    "lotNumber": "string",
                                                                    "expiry": {
                                                                        "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                                                        "expiryDate": "2021-07-12T22:22:25.038Z",
                                                                        "expiryAfterDuration": {
                                                                            "durationUnit": "Days",
                                                                            "durationValue": 0
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "containerType": "pallet",
                                                        "containerSequenceNumber": "002",
                                                        "containerIdentifiers": [
                                                            {
                                                                "containerIdentificationType": "SSCC",
                                                                "containerIdentificationNumber": "ARK123214214213"
                                                            }
                                                        ],
                                                        "trackingNumber": "TRACK001",
                                                        "dimensions": {
                                                            "length": "12",
                                                            "width": "12",
                                                            "height": "12",
                                                            "unitOfMeasure": "IN"
                                                        },
                                                        "weight": {
                                                            "unitOfMeasure": "KG",
                                                            "value": "10"
                                                        },
                                                        "tier": 2,
                                                        "block": 2,
                                                        "innerContainersDetails": {
                                                            "containerCount": 10,
                                                            "containerSequenceNumbers": [
                                                                {
                                                                    "containerSequenceNumber": "002"
                                                                },
                                                                {
                                                                    "containerSequenceNumber": "003"
                                                                }
                                                            ]
                                                        },
                                                        "packedItems": [
                                                            {
                                                                "itemSequenceNumber": "001",
                                                                "buyerProductIdentifier": "B07DFVDRAA",
                                                                "vendorProductIdentifier": "12312412421",
                                                                "packedQuantity": {
                                                                    "amount": 1,
                                                                    "unitOfMeasure": "Each"
                                                                },
                                                                "itemDetails": {
                                                                    "purchaseOrderNumber": "123142341",
                                                                    "lotNumber": "A12312412",
                                                                    "expiry": {
                                                                        "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                                                        "expiryDate": "2021-07-12T22:22:25.038Z",
                                                                        "expiryAfterDuration": {
                                                                            "durationUnit": "Days",
                                                                            "durationValue": 0
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "transportationDetails": {
                                                    "shipMode": "LessThanTruckLoad",
                                                    "transportationMode": "Road",
                                                    "shippedDate": "2019-08-07T19:56:45.632",
                                                    "estimatedDeliveryDate": "2019-08-07T19:56:45.632",
                                                    "shipmentDeliveryDate": "2019-08-07T19:56:45.632",
                                                    "carrierDetails": {
                                                        "name": "UPS",
                                                        "phone": "1234567890",
                                                        "email": "abc@xyz.com",
                                                        "code": "1-1231",
                                                        "shipmentReferenceNumber": "TRACK001"
                                                    },
                                                    "billOfLadingNumber": "12534233421"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "vendorShipmentIdentifier": {
                                            "value": "null"
                                        }
                                    }
                                },
                                "response": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "vendor Shipment Identifier cannot be null"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentDetailsResponse"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    }
                }
            }
        },
        "/vendor/shipping/v1/transportLabels": {
            "get": {
                "tags": [
                    "vendorShipping"
                ],
                "description": "Returns transport Labels based on the filters that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "GetShipmentLabels",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit to the number of records returned. Default value is 50 records.",
                        "required": false,
                        "type": "integer",
                        "maximum": 50,
                        "minimum": 1,
                        "format": "int64"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort in ascending or descending order by transport label creation date.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "ASC",
                                "description": "Sort in ascending order by transport label creation date."
                            },
                            {
                                "value": "DESC",
                                "description": "Sort in descending order by transport label creation date."
                            }
                        ]
                    },
                    {
                        "name": "nextToken",
                        "in": "query",
                        "description": "Used for pagination when there are more transport label than the specified result size limit.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "labelCreatedAfter",
                        "in": "query",
                        "description": "transport Labels that became available after this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "labelcreatedBefore",
                        "in": "query",
                        "description": "transport Labels that became available before this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "buyerReferenceNumber",
                        "in": "query",
                        "description": "Get transport labels by passing Buyer Reference Number to retreive the corresponding transport label.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "vendorShipmentIdentifier",
                        "in": "query",
                        "description": "Get transport labels by passing Vendor Shipment ID to retreive the corresponding transport label.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sellerWarehouseCode",
                        "in": "query",
                        "description": "Get Shipping labels based Vendor Warehouse code. This value should be same as 'shipFromParty.partyId' in the Shipment.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "examples": {
                            "application/json": {
                                "payload": {
                                    "pagination": {
                                        "nextToken": "MDAwMDAwMDAwMQ=="
                                    },
                                    "transportLabels": [
                                        {
                                            "labelCreateDateTime": "1628505423212",
                                            "shipmentInformation": {
                                                "vendorDetails": {
                                                    "sellingParty": {
                                                        "partyId": "WHF47"
                                                    },
                                                    "vendorShipmentId": "7822"
                                                },
                                                "buyerReferenceNumber": "14511336331",
                                                "shipToParty": {
                                                    "partyId": "LAX9"
                                                },
                                                "shipFromParty": {
                                                    "partyId": "0-55767831",
                                                    "address": {
                                                        "name": "Wheeler Bros., Inc. HQ",
                                                        "addressLine1": "384 Drum Ave",
                                                        "addressLine2": "",
                                                        "addressLine3": "",
                                                        "city": "Somerset",
                                                        "stateOrRegion": "PA",
                                                        "postalCode": "15501",
                                                        "countryCode": "US"
                                                    }
                                                },
                                                "masterTrackingId": "1ZR873R70319165935",
                                                "totalLabelCount": 1,
                                                "shipMode": "SmallParcel"
                                            },
                                            "labelData": [
                                                {
                                                    "labelSequenceNumber": 1,
                                                    "labelFormat": "PDF",
                                                    "carrierCode": "UPSN",
                                                    "trackingId": "1ZR873R70319165935",
                                                    "label": ""
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "vendorShipmentIdentifier": {
                                            "value": "12345678"
                                        }
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "labelCreateDateTime": "1628505423212",
                                        "shipmentInformation": {
                                            "vendorDetails": {
                                                "sellingParty": {
                                                    "partyId": "WHF47"
                                                },
                                                "vendorShipmentId": "7822"
                                            },
                                            "buyerReferenceNumber": "14511336331",
                                            "shipToParty": {
                                                "partyId": "LAX9"
                                            },
                                            "shipFromParty": {
                                                "partyId": "0-55767831",
                                                "address": {
                                                    "name": "Wheeler Bros., Inc. HQ",
                                                    "addressLine1": "384 Drum Ave",
                                                    "addressLine2": "Suite 123",
                                                    "addressLine3": "DOOR 1",
                                                    "city": "Somerset",
                                                    "stateOrRegion": "PA",
                                                    "postalCode": "15501",
                                                    "countryCode": "US"
                                                }
                                            },
                                            "masterTrackingId": "1ZR873R70319165935",
                                            "totalLabelCount": 1,
                                            "shipMode": "SmallParcel"
                                        },
                                        "labelData": [
                                            {
                                                "labelSequenceNumber": 1,
                                                "labelFormat": "PDF",
                                                "carrierCode": "UPSN",
                                                "trackingId": "1ZR873R70319165935",
                                                "label": ""
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "code": "InvalidRequest",
                                        "message": "The request is invalid."
                                    }
                                ]
                            }
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "vendorShipmentIdentifier": {
                                            "value": "null"
                                        }
                                    }
                                },
                                "response": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "vendor Shipment Identifier cannot be null"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "schema": {
                            "$ref": "#/definitions/GetShipmentLabels"
                        },
                        "headers": {
                            "x-amzn-RateLimit-Limit": {
                                "type": "string",
                                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
                            },
                            "x-amzn-RequestId": {
                                "type": "string",
                                "description": "Unique request reference identifier."
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "SubmitShipmentConfirmationsRequest": {
            "type": "object",
            "properties": {
                "shipmentConfirmations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ShipmentConfirmation"
                    }
                }
            },
            "description": "The request schema for the SubmitShipmentConfirmations operation."
        },
        "SubmitShipments": {
            "type": "object",
            "properties": {
                "shipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Shipment"
                    }
                }
            },
            "description": "The request schema for the SubmitTransportRequestConfirmations operation."
        },
        "GetShipmentDetailsResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/definitions/ShipmentDetails"
                },
                "errors": {
                    "$ref": "#/definitions/ErrorList"
                }
            },
            "description": "The response schema for the GetShipmentDetails operation."
        },
        "GetShipmentLabels": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/definitions/transportationLabels"
                },
                "errors": {
                    "$ref": "#/definitions/ErrorList"
                }
            },
            "description": "The response schema for the GetShipmentLabels operation."
        },
        "ShipmentDetails": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                },
                "shipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Shipment"
                    }
                }
            }
        },
        "transportationLabels": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                },
                "transportLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transportLabel"
                    }
                }
            }
        },
        "Pagination": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "type": "string",
                    "description": "A generated string used to pass information to your next request. If NextToken is returned, pass the value of NextToken to the next request. If NextToken is not returned, there are no more order items to return."
                }
            }
        },
        "ShipmentConfirmation": {
            "type": "object",
            "required": [
                "sellingParty",
                "shipFromParty",
                "shipToParty",
                "shipmentConfirmationDate",
                "shipmentConfirmationType",
                "shipmentIdentifier",
                "shippedItems"
            ],
            "properties": {
                "shipmentIdentifier": {
                    "type": "string",
                    "description": "Unique shipment ID (not used over the last 365 days)."
                },
                "shipmentConfirmationType": {
                    "type": "string",
                    "description": "Indicates if this shipment confirmation is the initial confirmation, or intended to replace an already posted shipment confirmation. If replacing an existing shipment confirmation, be sure to provide the identical shipmentIdentifier and sellingParty information as in the previous confirmation.",
                    "enum": [
                        "Original",
                        "Replace"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Original",
                            "description": "Initial shipment confirmation message."
                        },
                        {
                            "value": "Replace",
                            "description": "Replace the original shipment confirmation message."
                        }
                    ]
                },
                "shipmentType": {
                    "type": "string",
                    "description": "The type of shipment.",
                    "enum": [
                        "TruckLoad",
                        "LessThanTruckLoad",
                        "SmallParcel"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "TruckLoad",
                            "description": "Truckload shipping is the movement of large amounts of homogeneous cargo, generally the amount necessary to fill an entire semi-trailer or intermodal container."
                        },
                        {
                            "value": "LessThanTruckLoad",
                            "description": "Shipping does not fill the entire truck."
                        },
                        {
                            "value": "SmallParcel",
                            "description": "Small parcel shipments are under 70 pounds per and shipped in your own packaging or carrier supplied boxes."
                        }
                    ]
                },
                "shipmentStructure": {
                    "type": "string",
                    "description": "Shipment hierarchical structure.",
                    "enum": [
                        "PalletizedAssortmentCase",
                        "LooseAssortmentCase",
                        "PalletOfItems",
                        "PalletizedStandardCase",
                        "LooseStandardCase",
                        "MasterPallet",
                        "MasterCase"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "PalletizedAssortmentCase",
                            "description": "Shipment -> Order -> Pallet/Tare -> Carton/Package -> Item"
                        },
                        {
                            "value": "LooseAssortmentCase",
                            "description": "Shipment -> Order -> Carton/Package -> Item"
                        },
                        {
                            "value": "PalletOfItems",
                            "description": "Shipment -> Order -> Pallet/Tare -> Item"
                        },
                        {
                            "value": "PalletizedStandardCase",
                            "description": "Shipment -> Order -> Pallet/Tare -> Item -> Carton/Package"
                        },
                        {
                            "value": "LooseStandardCase",
                            "description": "Shipment -> Order -> Item -> Carton/Package"
                        },
                        {
                            "value": "MasterPallet",
                            "description": "Shipment -> Pallet/Tare -> Order -> Item"
                        },
                        {
                            "value": "MasterCase",
                            "description": "Shipment -> Carton/Package -> Order -> Item"
                        }
                    ]
                },
                "transportationDetails": {
                    "description": "Transportation details for this shipment.",
                    "$ref": "#/definitions/TransportationDetails"
                },
                "amazonReferenceNumber": {
                    "type": "string",
                    "description": "The Amazon Reference Number is a unique identifier generated by Amazon for all Collect/WePay shipments when you submit  a routing request. This field is mandatory for Collect/WePay shipments."
                },
                "shipmentConfirmationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date on which the shipment confirmation was submitted."
                },
                "shippedDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time of the departure of the shipment from the vendor's location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the buyer destination warehouse, whichever is sooner. Shipped date mentioned in the shipment confirmation should not be in the future."
                },
                "estimatedDeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time on which the shipment is estimated to reach buyer's warehouse. It needs to be an estimate based on the average transit time between ship from location and the destination. The exact appointment time will be provided by the buyer and is potentially not known when creating the shipment confirmation."
                },
                "sellingParty": {
                    "description": "Name/Address and tax details of the selling party.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "shipFromParty": {
                    "description": "Name/Address and tax details of the ship from party.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "shipToParty": {
                    "description": "Name/Address of the destination warehouse where the shipment is being shipped to.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "shipmentMeasurements": {
                    "$ref": "#/definitions/ShipmentMeasurements"
                },
                "importDetails": {
                    "description": "Provide these fields only if this shipment is a direct import.",
                    "$ref": "#/definitions/ImportDetails"
                },
                "shippedItems": {
                    "type": "array",
                    "description": "A list of the items in this shipment and their associated details. If any of the item detail fields are common at a carton or a pallet level, provide them at the corresponding carton or pallet level.",
                    "items": {
                        "$ref": "#/definitions/Item"
                    }
                },
                "cartons": {
                    "type": "array",
                    "description": "A list of the cartons in this shipment.",
                    "items": {
                        "$ref": "#/definitions/Carton"
                    }
                },
                "pallets": {
                    "type": "array",
                    "description": "A list of the pallets in this shipment.",
                    "items": {
                        "$ref": "#/definitions/Pallet"
                    }
                }
            }
        },
        "Shipment": {
            "type": "object",
            "required": [
                "sellingParty",
                "shipFromParty",
                "shipToParty",
                "transactionDate",
                "transactionType",
                "vendorShipmentIdentifier"
            ],
            "properties": {
                "vendorShipmentIdentifier": {
                    "type": "string",
                    "description": "Unique Transportation ID created by Vendor (Should not be used over the last 365 days)."
                },
                "transactionType": {
                    "type": "string",
                    "description": "Indicates the type of  transportation request such as (New,Cancel,Confirm and PackageLabelRequest). Each transactiontype has a unique set of operation and there are corresponding details to be populated for each operation.",
                    "enum": [
                        "New",
                        "Cancel"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "New",
                            "description": "Initial shipment Request."
                        },
                        {
                            "value": "Cancel",
                            "description": "Cancel existing shipment Request message. should be used only to cancel Shipment request"
                        },
                        {
                            "value": "Confirm",
                            "description": "Confirm the original Transport Request confirmation message."
                        },
                        {
                            "value": "PackageLabelRequest",
                            "description": "Label request the original Transport Request confirmation message."
                        }
                    ]
                },
                "buyerReferenceNumber": {
                    "type": "string",
                    "description": "The buyer Reference Number is a unique identifier generated by buyer for all Collect/WePay shipments when you submit a transportation request. This field is mandatory for Collect/WePay shipments."
                },
                "transactionDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date on which the transportation request was submitted."
                },
                "currentShipmentStatus": {
                    "type": "string",
                    "description": "Indicates the current shipment status.",
                    "enum": [
                        "Created",
                        "TransportationRequested",
                        "CarrierAssigned",
                        "Shipped"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Created",
                            "description": "Shipment request was received by buyer."
                        },
                        {
                            "value": "Transportation requested",
                            "description": "Buyer to confirm with the carrier for pickup"
                        },
                        {
                            "value": "Carrier assigned",
                            "description": "Shipment is assigned to a carrier for pickup from vendor warehouse to Buyer FC / Warehouse."
                        },
                        {
                            "value": "Shipped",
                            "description": "Shipment sent to buyer warehouse."
                        }
                    ]
                },
                "currentshipmentStatusDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when the last status was updated."
                },
                "shipmentStatusDetails": {
                    "type": "array",
                    "description": "Indicates the list of current shipment status details and when the last update was received from carrier this is available on shipment Details response.",
                    "items": {
                        "$ref": "#/definitions/ShipmentStatusDetails"
                    }
                },
                "shipmentCreateDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time of the shipment request created by vendor."
                },
                "shipmentConfirmDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time of the departure of the shipment from the vendor's location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the Buyer destination warehouse, whichever is sooner. Shipped date mentioned in the shipment confirmation should not be in the future."
                },
                "packageLabelCreateDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time of the package label created for the shipment by buyer."
                },
                "shipmentFreightTerm": {
                    "type": "string",
                    "description": "Indicates if this transportation request is WePay/Collect or TheyPay/Prepaid. This is a mandatory information.",
                    "enum": [
                        "Collect",
                        "Prepaid"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Collect",
                            "description": "Buyer Pays / We Pay for the the transportation. Buyer pays for the shipment and provides Vendor and picks up shipment from vendor warehouse / location"
                        },
                        {
                            "value": "Prepaid",
                            "description": "Vendor pays / They Pay for the transportation. Vendor pays for the shipment and ships the goods to buyer warehouse / location"
                        }
                    ]
                },
                "sellingParty": {
                    "description": "Name/Address and tax details of the selling party.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "shipFromParty": {
                    "description": "Name/Address and tax details of the ship from party.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "shipToParty": {
                    "description": "Name/Address of the destination warehouse where the shipment is being shipped to.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "shipmentMeasurements": {
                    "description": "Indicates the shipment measurement details on how many cartons and pallets and the total transportation weight and volume as part of this request. This is a mandatory detail which will help determining the transportation cost, truck allocations and route determination efficiently.",
                    "$ref": "#/definitions/TransportShipmentMeasurements"
                },
                "collectFreightPickupDetails": {
                    "description": "Indicates the earliest pickup date for the transportation from vendor warehouse. This information is mandatory to be filled for requesting transportation from Buyer (WePay/Collect).",
                    "$ref": "#/definitions/collectFreightPickupDetails"
                },
                "purchaseOrders": {
                    "type": "array",
                    "description": "Indicates the purchase orders involved for the transportation request. This group is an array create 1 for each PO and list their corresponding items. This information is used for deciding the route,truck allocation and storage efficiently. This is a mandatory information for Buyer performing transportation from vendor warehouse (WePay/Collect)",
                    "items": {
                        "$ref": "#/definitions/purchaseOrders"
                    }
                },
                "importDetails": {
                    "description": "Provide these fields only if this shipment is a direct import.",
                    "$ref": "#/definitions/ImportDetails"
                },
                "containers": {
                    "type": "array",
                    "description": "A list of the items in this transportation and their associated inner container details. If any of the item detail fields are common at a carton or a pallet level, provide them at the corresponding carton or pallet level.",
                    "items": {
                        "$ref": "#/definitions/containers"
                    }
                },
                "transportationDetails": {
                    "description": "Transportation details this a mandatory information which states delivery date, shipping date and carrier details.",
                    "$ref": "#/definitions/TransportationDetails"
                }
            }
        },
        "transportLabel": {
            "type": "object",
            "properties": {
                "labelCreateDateTime": {
                    "type": "string",
                    "description": "Date on which label is created."
                },
                "shipmentInformation": {
                    "description": "Indicates the shipment Information details like warehouse and business reference details like ARN, Selling Party detail and Vendor Warehouse details",
                    "$ref": "#/definitions/ShipmentInformation"
                },
                "labelData": {
                    "type": "array",
                    "description": "Indicates the label data,format and type associated .",
                    "items": {
                        "$ref": "#/definitions/LabelData"
                    }
                }
            }
        },
        "ShipmentMeasurements": {
            "type": "object",
            "properties": {
                "grossShipmentWeight": {
                    "description": "Gross weight of the shipment.",
                    "$ref": "#/definitions/Weight"
                },
                "shipmentVolume": {
                    "description": "Gross Volume of the shipment.",
                    "$ref": "#/definitions/Volume"
                },
                "cartonCount": {
                    "type": "integer",
                    "description": "Number of cartons present in the shipment. Provide the cartonCount only for non-palletized shipments."
                },
                "palletCount": {
                    "type": "integer",
                    "description": "Number of pallets present in the shipment. Provide the palletCount only for palletized shipments."
                }
            },
            "description": "Shipment measurement details."
        },
        "ShipmentInformation": {
            "type": "object",
            "properties": {
                "vendorDetails": {
                    "description": "Vendor Details requesting for Shipment Label",
                    "$ref": "#/definitions/VendorDetails"
                },
                "buyerReferenceNumber": {
                    "type": "string",
                    "description": "Buyer Reference number which is a unique number."
                },
                "shipToParty": {
                    "description": "Name/Address of the destination warehouse where the shipment is being shipped to.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "shipFromParty": {
                    "description": "Name/Address of the destination warehouse where the shipment is being shipped to.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "warehouseId": {
                    "type": "string",
                    "description": "Vendor Warehouse ID from where the shipment is scheduled to be picked up by buyer / Carrier."
                },
                "masterTrackingId": {
                    "type": "string",
                    "description": "Unique Id with  which  the shipment can be tracked for Small Parcels."
                },
                "totalLabelCount": {
                    "type": "integer",
                    "description": "Number of Labels that are created as part of this shipment."
                },
                "shipMode": {
                    "type": "string",
                    "description": "Type of shipment whether it is Small Parcel",
                    "enum": [
                        "SmallParcel",
                        "LTL"
                    ]
                }
            },
            "description": "Shipment Information details for Label request."
        },
        "LabelData": {
            "type": "object",
            "properties": {
                "labelSequenceNumber": {
                    "type": "integer",
                    "description": "Label list sequence number"
                },
                "labelFormat": {
                    "type": "string",
                    "description": "Type of the label format like PDF",
                    "enum": [
                        "PDF"
                    ]
                },
                "carrierCode": {
                    "type": "string",
                    "description": "Unique identification for  the carrier like UPS,DHL,USPS..etc"
                },
                "trackingId": {
                    "type": "string",
                    "description": "Tracking Id for the transportation."
                },
                "label": {
                    "type": "string",
                    "description": "Label created as part of the transportation and it is base64 encoded"
                }
            },
            "description": "Label details as part of the transport label response"
        },
        "VendorDetails": {
            "type": "object",
            "properties": {
                "sellingParty": {
                    "description": "Name/Address and tax details of the selling party.",
                    "$ref": "#/definitions/PartyIdentification"
                },
                "vendorShipmentId": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Unique vendor shipment id which is not used in last 365 days"
                }
            },
            "description": "Vendor Details as part of Label response."
        },
        "ShipmentStatusDetails": {
            "type": "object",
            "properties": {
                "shipmentStatus": {
                    "type": "string",
                    "description": "Current status of the shipment on whether it is picked up or scheduled.",
                    "enum": [
                        "Created",
                        "TransportationRequested",
                        "CarrierAssigned",
                        "Shipped"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Created",
                            "description": "Shipment request was received by buyer."
                        },
                        {
                            "value": "Transportation requested",
                            "description": "Buyer to confirm with the carrier for pickup"
                        },
                        {
                            "value": "Carrier assigned",
                            "description": "Shipment is assigned to a carrier for pickup from vendor warehouse to Buyer FC / Warehouse."
                        },
                        {
                            "value": "Shipped",
                            "description": "Shipment done to buyer warehouse."
                        }
                    ]
                },
                "shipmentStatusDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time on last status update received for the shipment"
                }
            },
            "description": "Shipment Status details."
        },
        "TransportShipmentMeasurements": {
            "type": "object",
            "properties": {
                "totalCartonCount": {
                    "type": "integer",
                    "description": "Total number of cartons present in the shipment. Provide the cartonCount only for non-palletized shipments."
                },
                "totalPalletStackable": {
                    "type": "integer",
                    "description": "Total number of Stackable Pallets present in the shipment."
                },
                "totalPalletNonStackable": {
                    "type": "integer",
                    "description": "Total number of Non Stackable Pallets present in the shipment."
                },
                "shipmentWeight": {
                    "description": "Total Weight of the shipment.",
                    "$ref": "#/definitions/Weight"
                },
                "shipmentVolume": {
                    "description": "Total Volume of the shipment.",
                    "$ref": "#/definitions/Volume"
                }
            },
            "description": "Shipment measurement details."
        },
        "collectFreightPickupDetails": {
            "type": "object",
            "properties": {
                "requestedPickUp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date on which the items can be picked up from vendor warehouse by Buyer used for WePay/Collect vendors."
                },
                "scheduledPickUp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date on which the items are scheduled to be picked from vendor warehouse by Buyer used for WePay/Collect vendors."
                },
                "carrierAssignmentDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date on which the carrier is being scheduled to pickup items from vendor warehouse by Byer used for WePay/Collect vendors."
                }
            },
            "description": "Transport Request pickup date from Vendor Warehouse by Buyer"
        },
        "purchaseOrders": {
            "type": "object",
            "properties": {
                "purchaseOrderNumber": {
                    "type": "string",
                    "description": "Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment."
                },
                "purchaseOrderDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment."
                },
                "shipWindow": {
                    "type": "string",
                    "description": "Date range in which shipment is expected for these purchase orders."
                },
                "items": {
                    "type": "array",
                    "description": "A list of the items that are associated to the PO in this transport and their associated details.",
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderItems"
                    }
                }
            },
            "description": "Transport Request pickup date"
        },
        "TransportationDetails": {
            "type": "object",
            "properties": {
                "shipMode": {
                    "type": "string",
                    "description": "The type of shipment.",
                    "enum": [
                        "TruckLoad",
                        "LessThanTruckLoad",
                        "SmallParcel"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "TruckLoad",
                            "description": "Truckload shipping is the movement of large amounts of homogeneous cargo, generally the amount necessary to fill an entire semi-trailer or intermodal container."
                        },
                        {
                            "value": "LessThanTruckLoad",
                            "description": "Shipping does not fill the entire truck."
                        },
                        {
                            "value": "SmallParcel",
                            "description": "Small parcel shipments are under 70 pounds per parcel and shipped with your own packaging or carrier supplied boxes."
                        }
                    ]
                },
                "transportationMode": {
                    "type": "string",
                    "description": "The mode of transportation for this shipment.",
                    "enum": [
                        "Road",
                        "Air",
                        "Ocean"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Road",
                            "description": "The mode of transportation is by Road (on a truck)."
                        },
                        {
                            "value": "Air",
                            "description": "The mode of transportation is by Air (on a plane)."
                        },
                        {
                            "value": "Ocean",
                            "description": "The mode of transportation is by Ocean (on a ship)."
                        }
                    ]
                },
                "shippedDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when shipment is performed by the Vendor to Buyer"
                },
                "estimatedDeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Estimated Date on which shipment will be delivered from Vendor to Buyer"
                },
                "shipmentDeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date on which shipment will be delivered from Vendor to Buyer"
                },
                "carrierDetails": {
                    "description": "Indicates the carrier details and their contact informations",
                    "$ref": "#/definitions/CarrierDetails"
                },
                "billOfLadingNumber": {
                    "type": "string",
                    "description": "Bill Of Lading (BOL) number is the unique number assigned by the vendor. The BOL present in the Shipment Confirmation message ideally matches the paper BOL provided with the shipment, but that is no must. Instead of BOL, an alternative reference number (like Delivery Note Number) for the shipment can also be sent in this field."
                }
            }
        },
        "CarrierDetails": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The field is used to represent the carrier used for performing the shipment."
                },
                "code": {
                    "type": "string",
                    "description": "Code that identifies the carrier for the shipment. The Standard Carrier Alpha Code (SCAC) is a unique two to four letter code used to identify a carrier. Carrier SCAC codes are assigned and maintained by the NMFTA (National Motor Freight Association)."
                },
                "phone": {
                    "type": "string",
                    "description": "The field is used to represent the Carrier contact number."
                },
                "email": {
                    "type": "string",
                    "description": "The field is used to represent the carrier Email id."
                },
                "shipmentReferenceNumber": {
                    "type": "string",
                    "description": "The field is also known as PRO number is a unique number assigned by the carrier. It is used to identify and track the shipment that goes out for delivery. This field is mandatory for US, CA, MX shipment confirmations."
                }
            }
        },
        "ImportDetails": {
            "type": "object",
            "properties": {
                "methodOfPayment": {
                    "type": "string",
                    "description": "This is used for import purchase orders only. If the recipient requests, this field will contain the shipment method of payment.",
                    "enum": [
                        "PaidByBuyer",
                        "CollectOnDelivery",
                        "DefinedByBuyerAndSeller",
                        "FOBPortOfCall",
                        "PrepaidBySeller",
                        "PaidBySeller"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "PaidByBuyer",
                            "description": "Buyer pays for shipping."
                        },
                        {
                            "value": "CollectOnDelivery",
                            "description": "Buyer pays for shipping on delivery."
                        },
                        {
                            "value": "DefinedByBuyerAndSeller",
                            "description": "Shipping costs paid as agreed upon between buyer and seller."
                        },
                        {
                            "value": "FOBPortOfCall",
                            "description": "Seller pays for transportation incl. loading, shipping."
                        },
                        {
                            "value": "PrepaidBySeller",
                            "description": "Seller prepays for shipping."
                        },
                        {
                            "value": "PaidBySeller",
                            "description": "Seller pays for shipping."
                        }
                    ]
                },
                "sealNumber": {
                    "type": "string",
                    "description": "The container's seal number."
                },
                "route": {
                    "description": "The route and stop details for this shipment.",
                    "$ref": "#/definitions/Route"
                },
                "importContainers": {
                    "type": "string",
                    "description": "Types and numbers of container(s) for import purchase orders. Can be a comma-separated list if shipment has multiple containers.",
                    "maxLength": 64
                },
                "billableWeight": {
                    "description": "Billable weight of the direct imports shipment.",
                    "$ref": "#/definitions/Weight"
                },
                "estimatedShipByDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date on which the shipment is expected to be shipped. This value should not be in the past and not more than 60 days out in the future."
                },
                "handlingInstructions": {
                    "type": "string",
                    "description": "Identification of the instructions on how specified item/carton/pallet should be handled.",
                    "enum": [
                        "Oversized",
                        "Fragile",
                        "Food",
                        "HandleWithCare"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Oversized",
                            "description": "A package weighing 150 pounds or less and measuring greater than 130 inches in length and girth is classified as an oversized package."
                        },
                        {
                            "value": "Fragile",
                            "description": "A package containing easily breakable items."
                        },
                        {
                            "value": "Food",
                            "description": "A package containing edible items."
                        },
                        {
                            "value": "HandleWithCare",
                            "description": "A package containing fragile or dangerous items."
                        }
                    ]
                }
            }
        },
        "containers": {
            "type": "object",
            "required": [
                "containerIdentifiers",
                "containerType"
            ],
            "properties": {
                "containerType": {
                    "type": "string",
                    "description": "The type of container.",
                    "enum": [
                        "carton",
                        "pallet"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "carton",
                            "description": "A carton is a box or container usually made of liquid packaging board, paperboard and sometimes of corrugated fiberboard"
                        },
                        {
                            "value": "pallet",
                            "description": "A flat transport structure which supports goods in a stable fashion while being lifted by a forklift."
                        }
                    ]
                },
                "containerSequenceNumber": {
                    "type": "string",
                    "description": "An integer that must be submitted for multi-box shipments only, where one item may come in separate packages."
                },
                "containerIdentifiers": {
                    "type": "array",
                    "description": "A list of carton identifiers.",
                    "items": {
                        "$ref": "#/definitions/ContainerIdentification"
                    }
                },
                "trackingNumber": {
                    "type": "string",
                    "description": "The tracking number used for identifying the shipment."
                },
                "dimensions": {
                    "$ref": "#/definitions/Dimensions"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                },
                "tier": {
                    "type": "integer",
                    "description": "Number of layers per pallet."
                },
                "block": {
                    "type": "integer",
                    "description": "Number of cartons per layer on the pallet."
                },
                "innerContainersDetails": {
                    "$ref": "#/definitions/InnerContainersDetails"
                },
                "packedItems": {
                    "type": "array",
                    "description": "A list of packed items.",
                    "items": {
                        "$ref": "#/definitions/PackedItems"
                    }
                }
            }
        },
        "PackedItems": {
            "type": "object",
            "properties": {
                "itemSequenceNumber": {
                    "type": "string",
                    "description": "Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level."
                },
                "buyerProductIdentifier": {
                    "type": "string",
                    "description": "Buyer Standard Identification Number (ASIN) of an item."
                },
                "vendorProductIdentifier": {
                    "type": "string",
                    "description": "The vendor selected product identification of the item. Should be the same as was sent in the purchase order."
                },
                "packedQuantity": {
                    "description": "Total item quantity shipped in this shipment.",
                    "$ref": "#/definitions/ItemQuantity"
                },
                "itemDetails": {
                    "$ref": "#/definitions/PackageItemDetails"
                }
            },
            "description": "Details of the item being shipped."
        },
        "Item": {
            "type": "object",
            "required": [
                "itemSequenceNumber",
                "shippedQuantity"
            ],
            "properties": {
                "itemSequenceNumber": {
                    "type": "string",
                    "description": "Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level."
                },
                "amazonProductIdentifier": {
                    "type": "string",
                    "description": "Buyer Standard Identification Number (ASIN) of an item."
                },
                "vendorProductIdentifier": {
                    "type": "string",
                    "description": "The vendor selected product identification of the item. Should be the same as was sent in the purchase order."
                },
                "shippedQuantity": {
                    "description": "Total item quantity shipped in this shipment.",
                    "$ref": "#/definitions/ItemQuantity"
                },
                "itemDetails": {
                    "$ref": "#/definitions/ItemDetails"
                }
            },
            "description": "Details of the item being shipped."
        },
        "PurchaseOrderItems": {
            "type": "object",
            "required": [
                "itemSequenceNumber",
                "shippedQuantity"
            ],
            "properties": {
                "itemSequenceNumber": {
                    "type": "string",
                    "description": "Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level."
                },
                "buyerProductIdentifier": {
                    "type": "string",
                    "description": "Amazon Standard Identification Number (ASIN) for a SKU"
                },
                "vendorProductIdentifier": {
                    "type": "string",
                    "description": "The vendor selected product identification of the item. Should be the same as was sent in the purchase order."
                },
                "shippedQuantity": {
                    "description": "Total item quantity shipped in this shipment.",
                    "$ref": "#/definitions/ItemQuantity"
                },
                "maximumRetailPrice": {
                    "$ref": "#/definitions/Money"
                }
            },
            "description": "Details of the item being shipped."
        },
        "Carton": {
            "type": "object",
            "required": [
                "cartonSequenceNumber",
                "items"
            ],
            "properties": {
                "cartonIdentifiers": {
                    "type": "array",
                    "description": "A list of carton identifiers.",
                    "items": {
                        "$ref": "#/definitions/ContainerIdentification"
                    }
                },
                "cartonSequenceNumber": {
                    "type": "string",
                    "description": "Carton sequence number for the carton. The first carton will be 001, the second 002, and so on. This number is used as a reference to refer to this carton from the pallet level."
                },
                "dimensions": {
                    "$ref": "#/definitions/Dimensions"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                },
                "trackingNumber": {
                    "type": "string",
                    "description": "This is required to be provided for every carton in the small parcel shipments."
                },
                "items": {
                    "type": "array",
                    "description": "A list of container item details.",
                    "items": {
                        "$ref": "#/definitions/ContainerItem"
                    }
                }
            },
            "description": "Details of the carton/package being shipped."
        },
        "InnerContainersDetails": {
            "type": "object",
            "properties": {
                "containerCount": {
                    "type": "integer",
                    "description": "Total containers as part of the shipment"
                },
                "containerSequenceNumbers": {
                    "type": "array",
                    "description": "Container sequence numbers that are involved in this shipment.",
                    "items": {
                        "$ref": "#/definitions/ContainerSequenceNumbers"
                    }
                }
            },
            "description": "Details of the innerContainersDetails."
        },
        "ContainerSequenceNumbers": {
            "type": "object",
            "properties": {
                "containerSequenceNumber": {
                    "type": "string",
                    "description": "A list of containers shipped"
                }
            }
        },
        "Pallet": {
            "type": "object",
            "required": [
                "palletIdentifiers"
            ],
            "properties": {
                "palletIdentifiers": {
                    "type": "array",
                    "description": "A list of pallet identifiers.",
                    "items": {
                        "$ref": "#/definitions/ContainerIdentification"
                    }
                },
                "tier": {
                    "type": "integer",
                    "description": "Number of layers per pallet. Only applicable to container type Pallet."
                },
                "block": {
                    "type": "integer",
                    "description": "Number of cartons per layer on the pallet. Only applicable to container type Pallet."
                },
                "dimensions": {
                    "$ref": "#/definitions/Dimensions"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                },
                "cartonReferenceDetails": {
                    "description": "Carton reference details.",
                    "$ref": "#/definitions/CartonReferenceDetails"
                },
                "items": {
                    "type": "array",
                    "description": "A list of container item details.",
                    "items": {
                        "$ref": "#/definitions/ContainerItem"
                    }
                }
            },
            "description": "Details of the Pallet/Tare being shipped."
        },
        "ItemDetails": {
            "type": "object",
            "properties": {
                "purchaseOrderNumber": {
                    "type": "string",
                    "description": "The purchase order number for the shipment being confirmed. If the items in this shipment belong to multiple purchase order numbers that are in particular carton or pallet within the shipment, then provide the purchaseOrderNumber at the appropriate carton or pallet level. Formatting Notes: 8-character alpha-numeric code."
                },
                "lotNumber": {
                    "type": "string",
                    "description": "The batch or lot number associates an item with information the manufacturer considers relevant for traceability of the trade item to which the Element String is applied. The data may refer to the trade item itself or to items contained. This field is mandatory for all perishable items."
                },
                "expiry": {
                    "description": "Either expiryDate or mfgDate and expiryAfterDuration are mandatory for perishable items.",
                    "$ref": "#/definitions/Expiry"
                },
                "maximumRetailPrice": {
                    "description": "Maximum retail price of the item being shipped.",
                    "$ref": "#/definitions/Money"
                },
                "handlingCode": {
                    "type": "string",
                    "description": "Identification of the instructions on how specified item/carton/pallet should be handled.",
                    "enum": [
                        "Oversized",
                        "Fragile",
                        "Food",
                        "HandleWithCare"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Oversized",
                            "description": "A package weighing 150 pounds or less and measuring greater than 130 inches in length and girth is classified as an oversized package."
                        },
                        {
                            "value": "Fragile",
                            "description": "A package containing easily breakable items."
                        },
                        {
                            "value": "Food",
                            "description": "A package containing edible items."
                        },
                        {
                            "value": "HandleWithCare",
                            "description": "A package containing fragile or dangerous items."
                        }
                    ]
                }
            },
            "description": "Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate."
        },
        "PackageItemDetails": {
            "type": "object",
            "properties": {
                "purchaseOrderNumber": {
                    "type": "string",
                    "description": "The purchase order number for the shipment being confirmed. If the items in this shipment belong to multiple purchase order numbers that are in particular carton or pallet within the shipment, then provide the purchaseOrderNumber at the appropriate carton or pallet level. Formatting Notes: 8-character alpha-numeric code."
                },
                "lotNumber": {
                    "type": "string",
                    "description": "The batch or lot number associates an item with information the manufacturer considers relevant for traceability of the trade item to which the Element String is applied. The data may refer to the trade item itself or to items contained. This field is mandatory for all perishable items."
                },
                "expiry": {
                    "description": "Either expiryDate or mfgDate and expiryAfterDuration are mandatory for perishable items.",
                    "$ref": "#/definitions/Expiry"
                }
            },
            "description": "Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate."
        },
        "PurchaseOrderItemDetails": {
            "type": "object",
            "properties": {
                "maximumRetailPrice": {
                    "description": "Maximum retail price of the item being shipped.",
                    "$ref": "#/definitions/Money"
                }
            },
            "description": "Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate."
        },
        "ContainerIdentification": {
            "type": "object",
            "required": [
                "containerIdentificationNumber",
                "containerIdentificationType"
            ],
            "properties": {
                "containerIdentificationType": {
                    "type": "string",
                    "description": "The container identification type.",
                    "enum": [
                        "SSCC",
                        "AMZNCC",
                        "GTIN",
                        "BPS",
                        "CID"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "SSCC",
                            "description": "2 Digit Application Identifier (00) followed by unique 18-digit Serial Shipment Container Code (SSCC) to be included to define a pallet/carton and to identify its contents."
                        },
                        {
                            "value": "AMZNCC",
                            "description": "Amazon Container Code - a substitute for a SSCC that is generated by Amazon for small vendors and associated with a pallet/carton label."
                        },
                        {
                            "value": "GTIN",
                            "description": "Global Trade Identification Number (part of the standard GS1 barcoding and product identification system)."
                        },
                        {
                            "value": "BPS",
                            "description": "Barcode Packing Slip."
                        },
                        {
                            "value": "CID",
                            "description": "Container identifier for import shipments."
                        }
                    ]
                },
                "containerIdentificationNumber": {
                    "type": "string",
                    "description": "Container identification number that adheres to the definition of the container identification type."
                }
            }
        },
        "ContainerItem": {
            "type": "object",
            "required": [
                "itemReference",
                "shippedQuantity"
            ],
            "properties": {
                "itemReference": {
                    "type": "string",
                    "description": "The reference number for the item. Please provide the itemSequenceNumber from the 'items' segment to refer to that item's details here."
                },
                "shippedQuantity": {
                    "description": "Total item quantity shipped in this carton/pallet.",
                    "$ref": "#/definitions/ItemQuantity"
                },
                "itemDetails": {
                    "$ref": "#/definitions/ItemDetails"
                }
            },
            "description": "Carton/Pallet level details for the item."
        },
        "CartonReferenceDetails": {
            "type": "object",
            "required": [
                "cartonReferenceNumbers"
            ],
            "properties": {
                "cartonCount": {
                    "type": "integer",
                    "description": "Pallet level carton count is mandatory for single item pallet and optional for mixed item pallet."
                },
                "cartonReferenceNumbers": {
                    "type": "array",
                    "description": "Array of reference numbers for the carton that are part of this pallet/shipment. Please provide the cartonSequenceNumber from the 'cartons' segment to refer to that carton's details here.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PartyIdentification": {
            "type": "object",
            "required": [
                "partyId"
            ],
            "properties": {
                "address": {
                    "description": "Identification of the party by address.",
                    "$ref": "#/definitions/Address"
                },
                "partyId": {
                    "type": "string",
                    "description": "Assigned identification for the party."
                },
                "taxRegistrationDetails": {
                    "type": "array",
                    "description": "Tax registration details of the entity.",
                    "items": {
                        "$ref": "#/definitions/TaxRegistrationDetails"
                    }
                }
            }
        },
        "TaxRegistrationDetails": {
            "type": "object",
            "required": [
                "taxRegistrationNumber",
                "taxRegistrationType"
            ],
            "properties": {
                "taxRegistrationType": {
                    "type": "string",
                    "description": "Tax registration type for the entity.",
                    "enum": [
                        "VAT",
                        "GST"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "VAT",
                            "description": "Value-added tax."
                        },
                        {
                            "value": "GST",
                            "description": "Goods and Services tax."
                        }
                    ]
                },
                "taxRegistrationNumber": {
                    "type": "string",
                    "description": "Tax registration number for the entity. For example, VAT ID."
                }
            },
            "description": "Tax registration details of the entity."
        },
        "Address": {
            "type": "object",
            "required": [
                "addressLine1",
                "countryCode",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the person, business or institution at that address."
                },
                "addressLine1": {
                    "type": "string",
                    "description": "First line of the address."
                },
                "addressLine2": {
                    "type": "string",
                    "description": "Additional street address information, if required."
                },
                "addressLine3": {
                    "type": "string",
                    "description": "Additional street address information, if required."
                },
                "city": {
                    "type": "string",
                    "description": "The city where the person, business or institution is located."
                },
                "county": {
                    "type": "string",
                    "description": "The county where person, business or institution is located."
                },
                "district": {
                    "type": "string",
                    "description": "The district where person, business or institution is located."
                },
                "stateOrRegion": {
                    "type": "string",
                    "description": "The state or region where person, business or institution is located."
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation."
                },
                "countryCode": {
                    "type": "string",
                    "description": "The two digit country code in ISO 3166-1 alpha-2 format."
                },
                "phone": {
                    "type": "string",
                    "description": "The phone number of the person, business or institution located at that address."
                }
            },
            "description": "Address of the party."
        },
        "Route": {
            "type": "object",
            "required": [
                "stops"
            ],
            "properties": {
                "stops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Stop"
                    }
                }
            },
            "description": "This is used only for direct import shipment confirmations."
        },
        "Stop": {
            "type": "object",
            "required": [
                "functionCode"
            ],
            "properties": {
                "functionCode": {
                    "type": "string",
                    "description": "Provide the function code.",
                    "enum": [
                        "PortOfDischarge",
                        "FreightPayableAt",
                        "PortOfLoading"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "PortOfDischarge",
                            "description": "Port of Discharge is a place where a vessel discharges or unloads some or all of its shipments."
                        },
                        {
                            "value": "FreightPayableAt",
                            "description": "Place where the payment for the freight is made."
                        },
                        {
                            "value": "PortOfLoading",
                            "description": "The port where goods are put on a ship."
                        }
                    ]
                },
                "locationIdentification": {
                    "$ref": "#/definitions/Location"
                },
                "arrivalTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the arrival of the cargo."
                },
                "departureTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the departure of the cargo."
                }
            },
            "description": "Contractual or operational port or point relevant to the movement of the cargo."
        },
        "Location": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of location identification."
                },
                "locationCode": {
                    "type": "string",
                    "description": "Location code."
                },
                "countryCode": {
                    "type": "string",
                    "description": "The two digit country code. In ISO 3166-1 alpha-2 format."
                }
            },
            "description": "Location identifier."
        },
        "Dimensions": {
            "type": "object",
            "required": [
                "height",
                "length",
                "unitOfMeasure",
                "width"
            ],
            "properties": {
                "length": {
                    "description": "The length of the container.",
                    "$ref": "#/definitions/Decimal"
                },
                "width": {
                    "description": "The width of the container.",
                    "$ref": "#/definitions/Decimal"
                },
                "height": {
                    "description": "The height of the container.",
                    "$ref": "#/definitions/Decimal"
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "The unit of measure for dimensions.",
                    "enum": [
                        "In",
                        "Ft",
                        "Meter",
                        "Yard"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "In",
                            "description": "Inches"
                        },
                        {
                            "value": "Ft",
                            "description": "Feet"
                        },
                        {
                            "value": "Meter",
                            "description": "Meters"
                        },
                        {
                            "value": "Yard",
                            "description": "Yards"
                        }
                    ]
                }
            },
            "description": "Physical dimensional measurements of a container."
        },
        "Volume": {
            "type": "object",
            "required": [
                "unitOfMeasure",
                "value"
            ],
            "properties": {
                "unitOfMeasure": {
                    "type": "string",
                    "description": "The unit of measurement.",
                    "enum": [
                        "CuFt",
                        "CuIn",
                        "CuM",
                        "CuY"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "CuFt",
                            "description": "Cubic feet."
                        },
                        {
                            "value": "CuIn",
                            "description": "Cubic inches."
                        },
                        {
                            "value": "CuM",
                            "description": "Cubic meter."
                        },
                        {
                            "value": "CuY",
                            "description": "Cubic yard."
                        }
                    ]
                },
                "value": {
                    "description": "The measurement value.",
                    "$ref": "#/definitions/Decimal"
                }
            },
            "description": "The volume of the shipment."
        },
        "Weight": {
            "type": "object",
            "required": [
                "unitOfMeasure",
                "value"
            ],
            "properties": {
                "unitOfMeasure": {
                    "type": "string",
                    "description": "The unit of measurement.",
                    "enum": [
                        "G",
                        "Kg",
                        "Oz",
                        "Lb"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "G",
                            "description": "Grams"
                        },
                        {
                            "value": "Kg",
                            "description": "Kilograms"
                        },
                        {
                            "value": "Oz",
                            "description": "Ounces"
                        },
                        {
                            "value": "Lb",
                            "description": "Pounds"
                        }
                    ]
                },
                "value": {
                    "description": "The measurement value.",
                    "$ref": "#/definitions/Decimal"
                }
            },
            "description": "The weight of the shipment."
        },
        "Money": {
            "type": "object",
            "required": [
                "amount",
                "currencyCode"
            ],
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Three digit currency code in ISO 4217 format."
                },
                "amount": {
                    "$ref": "#/definitions/Decimal"
                }
            },
            "description": "An amount of money, including units in the form of currency."
        },
        "Decimal": {
            "type": "string",
            "description": "A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\\d*))(\\.\\d+)?([eE][+-]?\\d+)?$`."
        },
        "ItemQuantity": {
            "type": "object",
            "required": [
                "amount",
                "unitOfMeasure"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "Amount of units shipped for a specific item at a shipment level. If the item is present only in certain cartons or pallets within the shipment, please provide this at the appropriate carton or pallet level."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Unit of measure for the shipped quantity.",
                    "enum": [
                        "Cases",
                        "Eaches"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Cases",
                            "description": "Packing of individual items into a case."
                        },
                        {
                            "value": "Eaches",
                            "description": "Individual items."
                        }
                    ]
                },
                "unitSize": {
                    "type": "integer",
                    "description": "The case size, in the event that we ordered using cases. Otherwise, 1."
                }
            },
            "description": "Details of item quantity."
        },
        "packedQuantity": {
            "type": "object",
            "required": [
                "amount",
                "unitOfMeasure"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "Amount of units shipped for a specific item at a shipment level. If the item is present only in certain cartons or pallets within the shipment, please provide this at the appropriate carton or pallet level."
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Unit of measure for the shipped quantity.",
                    "enum": [
                        "Cases",
                        "Eaches"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Cases",
                            "description": "Packing of individual items into a case."
                        },
                        {
                            "value": "Eaches",
                            "description": "Individual items."
                        }
                    ]
                },
                "unitSize": {
                    "type": "integer",
                    "description": "The case size, in the event that we ordered using cases. Otherwise, 1."
                }
            },
            "description": "Details of item quantity."
        },
        "Expiry": {
            "type": "object",
            "properties": {
                "manufacturerDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Production, packaging or assembly date determined by the manufacturer. Its meaning is determined based on the trade item context."
                },
                "expiryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that determines the limit of consumption or use of a product. Its meaning is determined based on the trade item context."
                },
                "expiryAfterDuration": {
                    "description": "Duration after manufacturing date during which the product is valid for consumption.",
                    "$ref": "#/definitions/Duration"
                }
            }
        },
        "Duration": {
            "type": "object",
            "required": [
                "durationUnit",
                "durationValue"
            ],
            "properties": {
                "durationUnit": {
                    "type": "string",
                    "description": "Unit for duration.",
                    "enum": [
                        "Days",
                        "Months"
                    ],
                    "x-docgen-enum-table-extension": [
                        {
                            "value": "Days",
                            "description": "Days"
                        },
                        {
                            "value": "Months",
                            "description": "Months"
                        }
                    ]
                },
                "durationValue": {
                    "type": "integer",
                    "description": "Value for the duration in terms of the durationUnit."
                }
            }
        },
        "SubmitShipmentConfirmationsResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "description": "The response payload for the SubmitShipmentConfirmations operation.",
                    "$ref": "#/definitions/TransactionReference"
                },
                "errors": {
                    "$ref": "#/definitions/ErrorList"
                }
            },
            "description": "The response schema for the SubmitShipmentConfirmations operation."
        },
        "TransactionReference": {
            "type": "object",
            "properties": {
                "transactionId": {
                    "type": "string",
                    "description": "GUID assigned by Buyer to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction."
                }
            }
        },
        "ErrorList": {
            "type": "array",
            "description": "A list of error responses returned when a request is unsuccessful.",
            "items": {
                "$ref": "#/definitions/Error"
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "An error code that identifies the type of error that occurred."
                },
                "message": {
                    "type": "string",
                    "description": "A message that describes the error condition."
                },
                "details": {
                    "type": "string",
                    "description": "Additional details that can help the caller understand or fix the issue."
                }
            },
            "description": "Error response returned when the request is unsuccessful."
        }
    }
}