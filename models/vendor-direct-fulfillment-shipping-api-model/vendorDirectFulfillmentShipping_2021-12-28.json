{
  "swagger": "2.0",
  "info": {
    "description": "The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.",
    "version": "2021-12-28",
    "title": "Selling Partner API for Direct Fulfillment Shipping",
    "contact": {
      "name": "Selling Partner API Developer Support",
      "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
    },
    "license": {
      "name": "Apache License 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "sellingpartnerapi-na.amazon.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/vendor/directFulfillment/shipping/2021-12-28/shippingLabels": {
      "get": {
        "tags": [
          "vendorShippingLabels"
        ],
        "description": "Returns a list of shipping labels created during the time frame that you specify. You define that time frame using the createdAfter and createdBefore parameters. You must use both of these parameters. The date range to search must not be more than 7 days.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShippingLabels",
        "parameters": [
          {
            "name": "shipFromPartyId",
            "in": "query",
            "description": "The vendor warehouseId for order fulfillment. If not specified, the result will contain orders for all warehouses.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of records returned.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Shipping labels that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Shipping labels that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort ASC or DESC by order creation date.",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by order creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by order creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there are more ship labels than the specified result size limit. The token value is returned in the previous API call.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ShippingLabelList"
            },
            "examples": {
              "pagination": {
                "nextToken": "MDAwMDAwMDAwMQ=="
              },
              "shippingLabels": [
                {
                  "purchaseOrderNumber": "2JK3S9VCE",
                  "sellingParty": {
                    "partyId": "999US"
                  },
                  "shipFromParty": {
                    "partyId": "ABCD"
                  },
                  "labelFormat": "PNG",
                  "labelData": [
                    {
                      "packageIdentifier": "PKG001",
                      "trackingNumber": "1Z6A34Y60369738804",
                      "shipMethod": "UPS_GR_RES",
                      "shipMethodName": "UPS Ground Residential",
                      "content": "Base 64 encoded string goes here "
                    }
                  ]
                },
                {
                  "purchaseOrderNumber": "2JK3S9VD",
                  "sellingParty": {
                    "partyId": "999US"
                  },
                  "shipFromParty": {
                    "partyId": "ABCD"
                  },
                  "labelFormat": "PNG",
                  "labelData": [
                    {
                      "packageIdentifier": "PKG002",
                      "trackingNumber": "1Z6A34Y60369738805",
                      "shipMethod": "UPS_GR_RES",
                      "shipMethodName": "UPS Ground Residential",
                      "content": "Base 64 encoded string goes here "
                    }
                  ]
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request is invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "post": {
        "tags": [
          "vendorShippingLabels"
        ],
        "description": "Creates a shipping label for a purchase order and returns a transactionId for reference.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitShippingLabelRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitShippingLabelsRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TransactionReference"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/shippingLabels/{purchaseOrderNumber}": {
      "get": {
        "tags": [
          "vendorShippingLabels"
        ],
        "description": "Returns a shipping label for the purchaseOrderNumber that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShippingLabel",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "The purchase order number for which you want to return the shipping label. It should be the same purchaseOrderNumber as received in the order.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ShippingLabel"
            },
            "examples": {
              "application/json": {
                "purchaseOrderNumber": "2JK3S9VC",
                "sellingParty": {
                  "partyId": "999US"
                },
                "shipFromParty": {
                  "partyId": "ABCD"
                },
                "labelFormat": "PNG",
                "labelData": [
                  {
                    "packageIdentifier": "PKG001",
                    "trackingNumber": "1Z6A34Y60369738804",
                    "shipMethod": "UPS_GR_RES",
                    "shipMethodName": "UPS Ground Residential",
                    "content": ""
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    }
  },
  "definitions": {
    "SubmitShippingLabelsRequest": {
      "type": "object",
      "properties": {
        "shippingLabelRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingLabelRequest"
          }
        }
      }
    },
    "ShippingLabelRequest": {
      "type": "object",
      "required": [
        "purchaseOrderNumber",
        "sellingParty",
        "shipFromParty"
      ],
      "properties": {
        "purchaseOrderNumber": {
          "type": "string",
          "description": "Purchase order number of the order for which to create a shipping label.",
          "pattern": "^[a-zA-Z0-9]+$"
        },
        "sellingParty": {
          "description": "ID of the selling party or vendor.",
          "$ref": "#/definitions/PartyIdentification"
        },
        "shipFromParty": {
          "description": "Warehouse code of vendor.",
          "$ref": "#/definitions/PartyIdentification"
        },
        "containers": {
          "type": "array",
          "description": "A list of the packages in this shipment.",
          "items": {
            "$ref": "#/definitions/Container"
          }
        }
      }
    },
    "Item": {
      "type": "object",
      "required": [
        "itemSequenceNumber",
        "shippedQuantity"
      ],
      "properties": {
        "itemSequenceNumber": {
          "type": "integer",
          "description": "Item Sequence Number for the item. This must be the same value as sent in order for a given item."
        },
        "buyerProductIdentifier": {
          "type": "string",
          "description": "Buyer's Standard Identification Number (ASIN) of an item. Either buyerProductIdentifier or vendorProductIdentifier is required."
        },
        "vendorProductIdentifier": {
          "type": "string",
          "description": "The vendor selected product identification of the item. Should be the same as was sent in the purchase order, like SKU Number."
        },
        "shippedQuantity": {
          "description": "Total item quantity shipped in this shipment.",
          "$ref": "#/definitions/ItemQuantity"
        }
      },
      "description": "Details of the item being shipped."
    },
    "PackedItem": {
      "type": "object",
      "required": [
        "itemSequenceNumber",
        "packedQuantity"
      ],
      "properties": {
        "itemSequenceNumber": {
          "type": "integer",
          "description": "Item Sequence Number for the item. This must be the same value as sent in the order for a given item."
        },
        "buyerProductIdentifier": {
          "type": "string",
          "description": "Buyer's Standard Identification Number (ASIN) of an item. Either buyerProductIdentifier or vendorProductIdentifier is required."
        },
        "vendorProductIdentifier": {
          "type": "string",
          "description": "The vendor selected product identification of the item. Should be the same as was sent in the Purchase Order, like SKU Number."
        },
        "packedQuantity": {
          "description": "Total item quantity packed in the container.",
          "$ref": "#/definitions/ItemQuantity"
        }
      }
    },
    "PartyIdentification": {
      "type": "object",
      "required": [
        "partyId"
      ],
      "properties": {
        "partyId": {
          "type": "string",
          "description": "Assigned Identification for the party."
        },
        "address": {
          "description": "Identification of the party by address.",
          "$ref": "#/definitions/Address"
        },
        "taxRegistrationDetails": {
          "type": "array",
          "description": "Tax registration details of the entity.",
          "items": {
            "$ref": "#/definitions/TaxRegistrationDetails"
          }
        }
      }
    },
    "TaxRegistrationDetails": {
      "type": "object",
      "required": [
        "taxRegistrationNumber"
      ],
      "properties": {
        "taxRegistrationType": {
          "type": "string",
          "description": "Tax registration type for the entity.",
          "enum": [
            "VAT",
            "GST"
          ],
          "x-docgen-enum-table-extension": [
            {
              "value": "VAT",
              "description": "Value-added tax."
            },
            {
              "value": "GST",
              "description": "Goods and Services Tax (GST)."
            }
          ]
        },
        "taxRegistrationNumber": {
          "type": "string",
          "description": "Tax registration number for the party. For example, VAT ID."
        },
        "taxRegistrationAddress": {
          "description": "Address associated with the tax registration number.",
          "$ref": "#/definitions/Address"
        },
        "taxRegistrationMessages": {
          "type": "string",
          "description": "Tax registration message that can be used for additional tax related details."
        }
      },
      "description": "Tax registration details of the entity."
    },
    "Address": {
      "type": "object",
      "required": [
        "addressLine1",
        "countryCode",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the person, business or institution at that address."
        },
        "addressLine1": {
          "type": "string",
          "description": "First line of the address."
        },
        "addressLine2": {
          "type": "string",
          "description": "Additional street address information, if required."
        },
        "addressLine3": {
          "type": "string",
          "description": "Additional street address information, if required."
        },
        "city": {
          "type": "string",
          "description": "The city where the person, business or institution is located."
        },
        "county": {
          "type": "string",
          "description": "The county where person, business or institution is located."
        },
        "district": {
          "type": "string",
          "description": "The district where person, business or institution is located."
        },
        "stateOrRegion": {
          "type": "string",
          "description": "The state or region where person, business or institution is located."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation."
        },
        "countryCode": {
          "type": "string",
          "description": "The two digit country code in ISO 3166-1 alpha-2 format."
        },
        "phone": {
          "type": "string",
          "description": "The phone number of the person, business or institution located at that address."
        }
      },
      "description": "Address of the party."
    },
    "Dimensions": {
      "type": "object",
      "required": [
        "height",
        "length",
        "unitOfMeasure",
        "width"
      ],
      "properties": {
        "length": {
          "description": "The length of the container.",
          "$ref": "#/definitions/Decimal"
        },
        "width": {
          "description": "The width of the container.",
          "$ref": "#/definitions/Decimal"
        },
        "height": {
          "description": "The height of the container.",
          "$ref": "#/definitions/Decimal"
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "The unit of measure for dimensions.",
          "enum": [
            "IN",
            "CM"
          ],
          "x-docgen-enum-table-extension": [
            {
              "value": "IN",
              "description": "Inches"
            },
            {
              "value": "CM",
              "description": "Centimeters"
            }
          ]
        }
      },
      "description": "Physical dimensional measurements of a container."
    },
    "Weight": {
      "type": "object",
      "required": [
        "unitOfMeasure",
        "value"
      ],
      "properties": {
        "unitOfMeasure": {
          "type": "string",
          "description": "The unit of measurement.",
          "enum": [
            "KG",
            "LB"
          ],
          "x-docgen-enum-table-extension": [
            {
              "value": "KG",
              "description": "Kilogram"
            },
            {
              "value": "LB",
              "description": "Pounds (Libra for Latin)."
            }
          ]
        },
        "value": {
          "description": "The measurement value.",
          "$ref": "#/definitions/Decimal"
        }
      },
      "description": "The weight."
    },
    "Decimal": {
      "type": "string",
      "description": "A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation.  <br>**Pattern** : `^-?(0|([1-9]\\\\d*))(\\\\.\\\\d+)?([eE][+-]?\\\\d+)?$`."
    },
    "ItemQuantity": {
      "type": "object",
      "required": [
        "amount",
        "unitOfMeasure"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "description": "Quantity of units shipped for a specific item at a shipment level. If the item is present only in certain packages or pallets within the shipment, please provide this at the appropriate package or pallet level."
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "Unit of measure for the shipped quantity."
        }
      },
      "description": "Details of item quantity."
    },
    "GetShippingLabelListResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "List of ship labels.",
          "$ref": "#/definitions/ShippingLabelList"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getShippingLabels operation."
    },
    "GetShippingLabelResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the getShippingLabel operation.",
          "$ref": "#/definitions/ShippingLabel"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getShippingLabel operation."
    },
    "ShippingLabelList": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "shippingLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingLabel"
          }
        }
      }
    },
    "LabelData": {
      "type": "object",
      "required": [
        "content"
      ],
      "properties": {
        "packageIdentifier": {
          "type": "string",
          "description": "Identifier for the package. The first package will be 001, the second 002, and so on. This number is used as a reference to refer to this package from the pallet level."
        },
        "trackingNumber": {
          "type": "string",
          "description": "Package tracking identifier from the shipping carrier."
        },
        "shipMethod": {
          "type": "string",
          "description": "Ship method to be used for shipping the order. Amazon defines Ship Method Codes indicating shipping carrier and shipment service level. Ship Method Codes are case and format sensitive. The same ship method code should returned on the shipment confirmation. Note that the Ship Method Codes are vendor specific and will be provided to each vendor during the implementation."
        },
        "shipMethodName": {
          "type": "string",
          "description": "Shipping method name for internal reference."
        },
        "content": {
          "type": "string",
          "description": "This field will contain the Base64encoded string of the shipment label content."
        }
      },
      "description": "Details of the shipment label."
    },
    "ShippingLabel": {
      "type": "object",
      "required": [
        "labelData",
        "labelFormat",
        "purchaseOrderNumber",
        "sellingParty",
        "shipFromParty"
      ],
      "properties": {
        "purchaseOrderNumber": {
          "type": "string",
          "description": "This field will contain the Purchase Order Number for this order.",
          "pattern": "^[a-zA-Z0-9]+$"
        },
        "sellingParty": {
          "description": "ID of the selling party or vendor.",
          "$ref": "#/definitions/PartyIdentification"
        },
        "shipFromParty": {
          "description": "Warehouse code of vendor.",
          "$ref": "#/definitions/PartyIdentification"
        },
        "labelFormat": {
          "type": "string",
          "description": "Format of the label.",
          "enum": [
            "PNG",
            "ZPL"
          ],
          "x-docgen-enum-table-extension": [
            {
              "value": "PNG",
              "description": "Portable Network Graphics (png) format."
            },
            {
              "value": "ZPL",
              "description": "Zebra Programming Language (zpl) format."
            }
          ]
        },
        "labelData": {
          "type": "array",
          "description": "Provides the details of the packages in this shipment.",
          "items": {
            "$ref": "#/definitions/LabelData"
          }
        }
      }
    },
    "SubmitShippingLabelsResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The response payload for the submitShippingLabelRequest operation.",
          "$ref": "#/definitions/TransactionReference"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the submitShippingLabelRequest operation."
    },
    "GetCustomerInvoicesResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "List of customer invoices.",
          "$ref": "#/definitions/CustomerInvoiceList"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getCustomerInvoices operation."
    },
    "GetCustomerInvoiceResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the getCustomerInvoice operation.",
          "$ref": "#/definitions/CustomerInvoice"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the getCustomerInvoice operation."
    },
    "CustomerInvoiceList": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "customerInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerInvoice"
          }
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "nextToken": {
          "type": "string",
          "description": "A generated string used to pass information to your next request. If NextToken is returned, pass the value of NextToken to the next request. If NextToken is not returned, there are no more order items to return."
        }
      }
    },
    "CustomerInvoice": {
      "type": "object",
      "required": [
        "content",
        "purchaseOrderNumber"
      ],
      "properties": {
        "purchaseOrderNumber": {
          "type": "string",
          "description": "The purchase order number for this order.",
          "pattern": "^[a-zA-Z0-9]+$"
        },
        "content": {
          "type": "string",
          "description": "The Base64encoded customer invoice."
        }
      }
    },
    "TransactionReference": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "GUID to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction."
        }
      }
    },
    "ErrorList": {
      "type": "object",
      "description": "A list of error responses returned when a request is unsuccessful.",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "An error code that identifies the type of error that occurred."
        },
        "message": {
          "type": "string",
          "description": "A message that describes the error condition."
        },
        "details": {
          "type": "string",
          "description": "Additional details that can help the caller understand or fix the issue."
        }
      },
      "description": "Error response returned when the request is unsuccessful."
    },
    "Container": {
      "type": "object",
      "required": [
        "containerIdentifier",
        "containerType",
        "packedItems"
      ],
      "properties": {
        "containerType": {
          "type": "string",
          "description": "The type of container.",
          "enum": [
            "Carton",
            "Pallet"
          ],
          "x-docgen-enum-table-extension": [
            {
              "value": "Carton",
              "description": "Packing container type. Typically used for drinks or food."
            },
            {
              "value": "Pallet",
              "description": "A flat transport structure which supports goods in a stable fashion while being lifted by a forklift."
            }
          ]
        },
        "containerIdentifier": {
          "type": "string",
          "description": "The container identifier."
        },
        "trackingNumber": {
          "type": "string",
          "description": "The tracking number."
        },
        "manifestId": {
          "type": "string",
          "description": "The manifest identifier."
        },
        "manifestDate": {
          "type": "string",
          "description": "The date of the manifest."
        },
        "shipMethod": {
          "type": "string",
          "description": "The shipment method."
        },
        "scacCode": {
          "type": "string",
          "description": "SCAC code required for NA VOC vendors only."
        },
        "carrier": {
          "type": "string",
          "description": "Carrier required for EU VOC vendors only."
        },
        "containerSequenceNumber": {
          "type": "integer",
          "description": "An integer that must be submitted for multi-box shipments only, where one item may come in separate packages."
        },
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "weight": {
          "$ref": "#/definitions/Weight"
        },
        "packedItems": {
          "type": "array",
          "description": "A list of packed items.",
          "items": {
            "$ref": "#/definitions/PackedItem"
          }
        }
      }
    }
  }
}