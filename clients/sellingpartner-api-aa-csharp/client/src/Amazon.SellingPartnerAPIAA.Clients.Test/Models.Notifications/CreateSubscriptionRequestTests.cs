/* 
 * Selling Partner API for Notifications
 *
 * The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner's business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.  For more information, see the [Notifications Use Case Guide](doc:notifications-api-v1-use-case-guide).
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.Notifications;
using Amazon.SellingPartnerAPIAA.Clients.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Notifications.Test
{
    /// <summary>
    ///  Class for testing CreateSubscriptionRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CreateSubscriptionRequestTests
    {
        // TODO uncomment below to declare an instance variable for CreateSubscriptionRequest
        //private CreateSubscriptionRequest instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CreateSubscriptionRequest
            //instance = new CreateSubscriptionRequest();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CreateSubscriptionRequest
        /// </summary>
        [Test]
        public void CreateSubscriptionRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CreateSubscriptionRequest
            //Assert.IsInstanceOfType<CreateSubscriptionRequest> (instance, "variable 'instance' is a CreateSubscriptionRequest");
        }


        /// <summary>
        /// Test the property 'PayloadVersion'
        /// </summary>
        [Test]
        public void PayloadVersionTest()
        {
            // TODO unit test for the property 'PayloadVersion'
        }
        /// <summary>
        /// Test the property 'DestinationId'
        /// </summary>
        [Test]
        public void DestinationIdTest()
        {
            // TODO unit test for the property 'DestinationId'
        }
        /// <summary>
        /// Test the property 'ProcessingDirective'
        /// </summary>
        [Test]
        public void ProcessingDirectiveTest()
        {
            // TODO unit test for the property 'ProcessingDirective'
        }

    }

}
