/* 
 * Selling Partner API for Orders
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.Orders;

namespace Amazon.SellingPartnerAPIAA.Clients.Test
{
    /// <summary>
    ///  Class for testing OrdersV0Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrdersV0ApiTests
    {
        private OrdersV0Api instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new OrdersV0Api();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrdersV0Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrdersV0Api
            //Assert.IsInstanceOfType(typeof(OrdersV0Api), instance, "instance is a OrdersV0Api");
        }

        
        /// <summary>
        /// Test ConfirmShipment
        /// </summary>
        [Test]
        public void ConfirmShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //ConfirmShipmentRequest payload = null;
            //instance.ConfirmShipment(orderId, payload);
            
        }
        
        /// <summary>
        /// Test GetOrder
        /// </summary>
        [Test]
        public void GetOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //var response = instance.GetOrder(orderId);
            //Assert.IsInstanceOf<GetOrderResponse> (response, "response is GetOrderResponse");
        }
        
        /// <summary>
        /// Test GetOrderAddress
        /// </summary>
        [Test]
        public void GetOrderAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //var response = instance.GetOrderAddress(orderId);
            //Assert.IsInstanceOf<GetOrderAddressResponse> (response, "response is GetOrderAddressResponse");
        }
        
        /// <summary>
        /// Test GetOrderBuyerInfo
        /// </summary>
        [Test]
        public void GetOrderBuyerInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //var response = instance.GetOrderBuyerInfo(orderId);
            //Assert.IsInstanceOf<GetOrderBuyerInfoResponse> (response, "response is GetOrderBuyerInfoResponse");
        }
        
        /// <summary>
        /// Test GetOrderItems
        /// </summary>
        [Test]
        public void GetOrderItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string nextToken = null;
            //var response = instance.GetOrderItems(orderId, nextToken);
            //Assert.IsInstanceOf<GetOrderItemsResponse> (response, "response is GetOrderItemsResponse");
        }
        
        /// <summary>
        /// Test GetOrderItemsBuyerInfo
        /// </summary>
        [Test]
        public void GetOrderItemsBuyerInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string nextToken = null;
            //var response = instance.GetOrderItemsBuyerInfo(orderId, nextToken);
            //Assert.IsInstanceOf<GetOrderItemsBuyerInfoResponse> (response, "response is GetOrderItemsBuyerInfoResponse");
        }
        
        /// <summary>
        /// Test GetOrderRegulatedInfo
        /// </summary>
        [Test]
        public void GetOrderRegulatedInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //var response = instance.GetOrderRegulatedInfo(orderId);
            //Assert.IsInstanceOf<GetOrderRegulatedInfoResponse> (response, "response is GetOrderRegulatedInfoResponse");
        }
        
        /// <summary>
        /// Test GetOrders
        /// </summary>
        [Test]
        public void GetOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> marketplaceIds = null;
            //string createdAfter = null;
            //string createdBefore = null;
            //string lastUpdatedAfter = null;
            //string lastUpdatedBefore = null;
            //List<string> orderStatuses = null;
            //List<string> fulfillmentChannels = null;
            //List<string> paymentMethods = null;
            //string buyerEmail = null;
            //string sellerOrderId = null;
            //int? maxResultsPerPage = null;
            //List<string> easyShipShipmentStatuses = null;
            //List<string> electronicInvoiceStatuses = null;
            //string nextToken = null;
            //List<string> amazonOrderIds = null;
            //string actualFulfillmentSupplySourceId = null;
            //bool? isISPU = null;
            //string storeChainStoreId = null;
            //List<ItemApprovalType> itemApprovalTypes = null;
            //List<ItemApprovalStatus> itemApprovalStatus = null;
            //var response = instance.GetOrders(marketplaceIds, createdAfter, createdBefore, lastUpdatedAfter, lastUpdatedBefore, orderStatuses, fulfillmentChannels, paymentMethods, buyerEmail, sellerOrderId, maxResultsPerPage, easyShipShipmentStatuses, electronicInvoiceStatuses, nextToken, amazonOrderIds, actualFulfillmentSupplySourceId, isISPU, storeChainStoreId, itemApprovalTypes, itemApprovalStatus);
            //Assert.IsInstanceOf<GetOrdersResponse> (response, "response is GetOrdersResponse");
        }
        
        /// <summary>
        /// Test UpdateVerificationStatus
        /// </summary>
        [Test]
        public void UpdateVerificationStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //UpdateVerificationStatusRequest payload = null;
            //instance.UpdateVerificationStatus(orderId, payload);
            
        }
        
    }

}
