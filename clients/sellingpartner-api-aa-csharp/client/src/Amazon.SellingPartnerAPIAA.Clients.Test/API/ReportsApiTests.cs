/* 
 * Selling Partner API for Reports
 *
 * The Selling Partner API for Reports lets you retrieve and manage a variety of reports that can help selling partners manage their businesses.
 *
 * OpenAPI spec version: 2021-06-30
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.Reports;

namespace Amazon.SellingPartnerAPIAA.Clients.Test
{
    /// <summary>
    ///  Class for testing ReportsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ReportsApiTests
    {
        private ReportsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new ReportsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ReportsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ReportsApi
            //Assert.IsInstanceOfType(typeof(ReportsApi), instance, "instance is a ReportsApi");
        }

        
        /// <summary>
        /// Test CancelReport
        /// </summary>
        [Test]
        public void CancelReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportId = null;
            //instance.CancelReport(reportId);
            
        }
        
        /// <summary>
        /// Test CancelReportSchedule
        /// </summary>
        [Test]
        public void CancelReportScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportScheduleId = null;
            //instance.CancelReportSchedule(reportScheduleId);
            
        }
        
        /// <summary>
        /// Test CreateReport
        /// </summary>
        [Test]
        public void CreateReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateReportSpecification body = null;
            //var response = instance.CreateReport(body);
            //Assert.IsInstanceOf<CreateReportResponse> (response, "response is CreateReportResponse");
        }
        
        /// <summary>
        /// Test CreateReportSchedule
        /// </summary>
        [Test]
        public void CreateReportScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateReportScheduleSpecification body = null;
            //var response = instance.CreateReportSchedule(body);
            //Assert.IsInstanceOf<CreateReportScheduleResponse> (response, "response is CreateReportScheduleResponse");
        }
        
        /// <summary>
        /// Test GetReport
        /// </summary>
        [Test]
        public void GetReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportId = null;
            //var response = instance.GetReport(reportId);
            //Assert.IsInstanceOf<Report> (response, "response is Report");
        }
        
        /// <summary>
        /// Test GetReportDocument
        /// </summary>
        [Test]
        public void GetReportDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportDocumentId = null;
            //var response = instance.GetReportDocument(reportDocumentId);
            //Assert.IsInstanceOf<ReportDocument> (response, "response is ReportDocument");
        }
        
        /// <summary>
        /// Test GetReportSchedule
        /// </summary>
        [Test]
        public void GetReportScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportScheduleId = null;
            //var response = instance.GetReportSchedule(reportScheduleId);
            //Assert.IsInstanceOf<ReportSchedule> (response, "response is ReportSchedule");
        }
        
        /// <summary>
        /// Test GetReportSchedules
        /// </summary>
        [Test]
        public void GetReportSchedulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> reportTypes = null;
            //var response = instance.GetReportSchedules(reportTypes);
            //Assert.IsInstanceOf<ReportScheduleList> (response, "response is ReportScheduleList");
        }
        
        /// <summary>
        /// Test GetReports
        /// </summary>
        [Test]
        public void GetReportsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> reportTypes = null;
            //List<string> processingStatuses = null;
            //List<string> marketplaceIds = null;
            //int? pageSize = null;
            //DateTime? createdSince = null;
            //DateTime? createdUntil = null;
            //string nextToken = null;
            //var response = instance.GetReports(reportTypes, processingStatuses, marketplaceIds, pageSize, createdSince, createdUntil, nextToken);
            //Assert.IsInstanceOf<GetReportsResponse> (response, "response is GetReportsResponse");
        }
        
    }

}
