/* 
 * Selling Partner API for Product Type Definitions
 *
 * The Selling Partner API for Product Type Definitions provides programmatic access to attribute and data requirements for product types in the Amazon catalog. Use this API to return the JSON Schema for a product type that you can then use with other Selling Partner APIs, such as the Selling Partner API for Listings Items, the Selling Partner API for Catalog Items, and the Selling Partner API for Feeds (for JSON-based listing feeds).  For more information, see the [Product Type Definitions API Use Case Guide](doc:product-type-api-use-case-guide).
 *
 * OpenAPI spec version: 2020-09-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.ProductTypes;
using Amazon.SellingPartnerAPIAA.Clients.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.ProductTypes.Test
{
    /// <summary>
    ///  Class for testing ProductTypeDefinition
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ProductTypeDefinitionTests
    {
        // TODO uncomment below to declare an instance variable for ProductTypeDefinition
        //private ProductTypeDefinition instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ProductTypeDefinition
            //instance = new ProductTypeDefinition();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProductTypeDefinition
        /// </summary>
        [Test]
        public void ProductTypeDefinitionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ProductTypeDefinition
            //Assert.IsInstanceOfType<ProductTypeDefinition> (instance, "variable 'instance' is a ProductTypeDefinition");
        }


        /// <summary>
        /// Test the property 'MetaSchema'
        /// </summary>
        [Test]
        public void MetaSchemaTest()
        {
            // TODO unit test for the property 'MetaSchema'
        }
        /// <summary>
        /// Test the property 'Schema'
        /// </summary>
        [Test]
        public void SchemaTest()
        {
            // TODO unit test for the property 'Schema'
        }
        /// <summary>
        /// Test the property 'Requirements'
        /// </summary>
        [Test]
        public void RequirementsTest()
        {
            // TODO unit test for the property 'Requirements'
        }
        /// <summary>
        /// Test the property 'RequirementsEnforced'
        /// </summary>
        [Test]
        public void RequirementsEnforcedTest()
        {
            // TODO unit test for the property 'RequirementsEnforced'
        }
        /// <summary>
        /// Test the property 'PropertyGroups'
        /// </summary>
        [Test]
        public void PropertyGroupsTest()
        {
            // TODO unit test for the property 'PropertyGroups'
        }
        /// <summary>
        /// Test the property 'Locale'
        /// </summary>
        [Test]
        public void LocaleTest()
        {
            // TODO unit test for the property 'Locale'
        }
        /// <summary>
        /// Test the property 'MarketplaceIds'
        /// </summary>
        [Test]
        public void MarketplaceIdsTest()
        {
            // TODO unit test for the property 'MarketplaceIds'
        }
        /// <summary>
        /// Test the property 'ProductType'
        /// </summary>
        [Test]
        public void ProductTypeTest()
        {
            // TODO unit test for the property 'ProductType'
        }
        /// <summary>
        /// Test the property 'ProductTypeVersion'
        /// </summary>
        [Test]
        public void ProductTypeVersionTest()
        {
            // TODO unit test for the property 'ProductTypeVersion'
        }

    }

}
