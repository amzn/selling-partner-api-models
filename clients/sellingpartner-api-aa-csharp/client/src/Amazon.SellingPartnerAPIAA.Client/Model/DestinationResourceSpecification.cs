/* 
 * Selling Partner API for Notifications
 *
 * The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner's business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.  For more information, see the [Notifications Use Case Guide](doc:notifications-api-v1-use-case-guide).
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Client.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Client.Model
{
    /// <summary>
    /// The information required to create a destination resource. Applications should use one resource type (sqs or eventBridge) per destination.
    /// </summary>
    [DataContract]
    public partial class DestinationResourceSpecification :  IEquatable<DestinationResourceSpecification>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinationResourceSpecification" /> class.
        /// </summary>
        /// <param name="sqs">The information required to create an Amazon Simple Queue Service (SQS) queue destination..</param>
        /// <param name="eventBridge">The information required to create an Amazon EventBridge destination..</param>
        public DestinationResourceSpecification(SqsResource sqs = default(SqsResource), EventBridgeResourceSpecification eventBridge = default(EventBridgeResourceSpecification))
        {
            this.Sqs = sqs;
            this.EventBridge = eventBridge;
        }
        
        /// <summary>
        /// The information required to create an Amazon Simple Queue Service (SQS) queue destination.
        /// </summary>
        /// <value>The information required to create an Amazon Simple Queue Service (SQS) queue destination.</value>
        [DataMember(Name="sqs", EmitDefaultValue=false)]
        public SqsResource Sqs { get; set; }

        /// <summary>
        /// The information required to create an Amazon EventBridge destination.
        /// </summary>
        /// <value>The information required to create an Amazon EventBridge destination.</value>
        [DataMember(Name="eventBridge", EmitDefaultValue=false)]
        public EventBridgeResourceSpecification EventBridge { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DestinationResourceSpecification {\n");
            sb.Append("  Sqs: ").Append(Sqs).Append("\n");
            sb.Append("  EventBridge: ").Append(EventBridge).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinationResourceSpecification);
        }

        /// <summary>
        /// Returns true if DestinationResourceSpecification instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinationResourceSpecification to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinationResourceSpecification input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Sqs == input.Sqs ||
                    (this.Sqs != null &&
                    this.Sqs.Equals(input.Sqs))
                ) && 
                (
                    this.EventBridge == input.EventBridge ||
                    (this.EventBridge != null &&
                    this.EventBridge.Equals(input.EventBridge))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Sqs != null)
                    hashCode = hashCode * 59 + this.Sqs.GetHashCode();
                if (this.EventBridge != null)
                    hashCode = hashCode * 59 + this.EventBridge.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
