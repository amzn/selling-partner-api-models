/* 
 * Selling Partner API for Catalog Items
 *
 * The Selling Partner API for Catalog Items provides programmatic access to information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](doc:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-04-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.Catalog
{
    /// <summary>
    /// Sales rank of an Amazon catalog item by website display group.
    /// </summary>
    [DataContract]
    public partial class ItemDisplayGroupSalesRank :  IEquatable<ItemDisplayGroupSalesRank>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemDisplayGroupSalesRank" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ItemDisplayGroupSalesRank() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemDisplayGroupSalesRank" /> class.
        /// </summary>
        /// <param name="websiteDisplayGroup">Name of the website display group associated with the sales rank (required).</param>
        /// <param name="title">Title, or name, of the sales rank. (required).</param>
        /// <param name="link">Corresponding Amazon retail website link, or URL, for the sales rank..</param>
        /// <param name="rank">Sales rank value. (required).</param>
        public ItemDisplayGroupSalesRank(string websiteDisplayGroup = default(string), string title = default(string), string link = default(string), int? rank = default(int?))
        {
            // to ensure "websiteDisplayGroup" is required (not null)
            if (websiteDisplayGroup == null)
            {
                throw new InvalidDataException("websiteDisplayGroup is a required property for ItemDisplayGroupSalesRank and cannot be null");
            }
            else
            {
                this.WebsiteDisplayGroup = websiteDisplayGroup;
            }
            // to ensure "title" is required (not null)
            if (title == null)
            {
                throw new InvalidDataException("title is a required property for ItemDisplayGroupSalesRank and cannot be null");
            }
            else
            {
                this.Title = title;
            }
            // to ensure "rank" is required (not null)
            if (rank == null)
            {
                throw new InvalidDataException("rank is a required property for ItemDisplayGroupSalesRank and cannot be null");
            }
            else
            {
                this.Rank = rank;
            }
            this.Link = link;
        }
        
        /// <summary>
        /// Name of the website display group associated with the sales rank
        /// </summary>
        /// <value>Name of the website display group associated with the sales rank</value>
        [DataMember(Name="websiteDisplayGroup", EmitDefaultValue=false)]
        public string WebsiteDisplayGroup { get; set; }

        /// <summary>
        /// Title, or name, of the sales rank.
        /// </summary>
        /// <value>Title, or name, of the sales rank.</value>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Corresponding Amazon retail website link, or URL, for the sales rank.
        /// </summary>
        /// <value>Corresponding Amazon retail website link, or URL, for the sales rank.</value>
        [DataMember(Name="link", EmitDefaultValue=false)]
        public string Link { get; set; }

        /// <summary>
        /// Sales rank value.
        /// </summary>
        /// <value>Sales rank value.</value>
        [DataMember(Name="rank", EmitDefaultValue=false)]
        public int? Rank { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemDisplayGroupSalesRank {\n");
            sb.Append("  WebsiteDisplayGroup: ").Append(WebsiteDisplayGroup).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("  Rank: ").Append(Rank).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ItemDisplayGroupSalesRank);
        }

        /// <summary>
        /// Returns true if ItemDisplayGroupSalesRank instances are equal
        /// </summary>
        /// <param name="input">Instance of ItemDisplayGroupSalesRank to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemDisplayGroupSalesRank input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WebsiteDisplayGroup == input.WebsiteDisplayGroup ||
                    (this.WebsiteDisplayGroup != null &&
                    this.WebsiteDisplayGroup.Equals(input.WebsiteDisplayGroup))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Link == input.Link ||
                    (this.Link != null &&
                    this.Link.Equals(input.Link))
                ) && 
                (
                    this.Rank == input.Rank ||
                    (this.Rank != null &&
                    this.Rank.Equals(input.Rank))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WebsiteDisplayGroup != null)
                    hashCode = hashCode * 59 + this.WebsiteDisplayGroup.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Link != null)
                    hashCode = hashCode * 59 + this.Link.GetHashCode();
                if (this.Rank != null)
                    hashCode = hashCode * 59 + this.Rank.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
